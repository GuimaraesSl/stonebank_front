[{"/home/danielvitor/Documentos/Develop/stonebank_front/src/components/App/index.ts":"1","/home/danielvitor/Documentos/Develop/stonebank_front/src/components/App/App.tsx":"2","/home/danielvitor/Documentos/Develop/stonebank_front/src/components/App/App.style.ts":"3","/home/danielvitor/Documentos/Develop/stonebank_front/src/_config/theme.ts":"4","/home/danielvitor/Documentos/Develop/stonebank_front/src/redux/StoreProvider.tsx":"5","/home/danielvitor/Documentos/Develop/stonebank_front/src/_config/index.ts":"6","/home/danielvitor/Documentos/Develop/stonebank_front/src/_translate/index.ts":"7","/home/danielvitor/Documentos/Develop/stonebank_front/src/components/Router/index.ts":"8","/home/danielvitor/Documentos/Develop/stonebank_front/src/mocks/mirage/index.ts":"9","/home/danielvitor/Documentos/Develop/stonebank_front/src/redux/initializeStore.ts":"10","/home/danielvitor/Documentos/Develop/stonebank_front/src/redux/state.ts":"11","/home/danielvitor/Documentos/Develop/stonebank_front/src/_config/configProvider.ts":"12","/home/danielvitor/Documentos/Develop/stonebank_front/src/_config/context.tsx":"13","/home/danielvitor/Documentos/Develop/stonebank_front/src/components/Router/Router.tsx":"14","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/schedulePayments/redux/state.ts":"15","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/pix/redux/state.ts":"16","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/pix/pages/index.ts":"17","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/pix/pages/PixTransfer/PixTransferProcess/index.ts":"18","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/pix/pages/ReceivePixTransfer/ReceivePixTransferQrCodeValue/index.ts":"19","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/pix/pages/ReceivePixTransfer/ReceivePixTransferQrCodeCheck/index.ts":"20","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/pix/pages/ReceivePixTransfer/ReceivePixTransferQrCode/index.ts":"21","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/pix/pages/PixTransfer/BankTransfer/BankPixTransferSummary/index.ts":"22","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/pix/pages/PixTransfer/BankTransfer/BankPixTransferDescription/index.ts":"23","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/pix/pages/PixTransfer/BankTransfer/BankPixTransferValue/index.ts":"24","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/pix/pages/PixTransfer/BankTransfer/BankDataPixTransferAccount/index.ts":"25","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/pix/pages/PixTransfer/BankTransfer/BankDataPixTransferBranch/index.ts":"26","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/pix/pages/PixTransfer/BankTransfer/BankPixTransferAccountType/index.ts":"27","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/pix/pages/PixTransfer/BankTransfer/BankPixTransferSelectBank/index.ts":"28","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/pix/pages/PixTransfer/BankTransfer/BankPixTransferPayeeTaxId/index.ts":"29","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/pix/pages/PixTransfer/BankTransfer/BankPixTransferPayeeName/index.ts":"30","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/pix/pages/PixTransfer/PixTransferHome/index.ts":"31","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/pix/pages/PixTransfer/QrCodeTransfer/QrCodePixTransferSummary/index.ts":"32","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/pix/pages/PixTransfer/QrCodeTransfer/QrCodePixTransferDescription/index.ts":"33","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/pix/pages/PixTransfer/QrCodeTransfer/QrCodePixTransferValue/index.ts":"34","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/pix/pages/PixTransfer/QrCodeTransfer/QrCodePixTransferScanner/index.ts":"35","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/pix/pages/FirstAccess/index.ts":"36","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/pix/pages/PixArea/index.ts":"37","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/pix/pages/PixTransfer/KeyTransfer/KeyPixTransferSummary/index.ts":"38","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/pix/pages/PixTransfer/KeyTransfer/KeyTransferDescription/index.ts":"39","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/pix/pages/PixTransfer/KeyTransfer/KeyPixTransferValue/index.ts":"40","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/pix/pages/PixTransfer/KeyTransfer/KeyPixTransferPayeeInfo/index.ts":"41","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/pix/pages/PixTransfer/KeyTransfer/KeyPixTransfer/index.ts":"42","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/pix/pages/PixKeyManagement/CreateRandomPixKey/index.ts":"43","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/pix/pages/PixKeyManagement/CreatePhoneNumberPixKey/index.ts":"44","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/pix/pages/PixKeyManagement/CreateEmailPixKey/index.ts":"45","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/pix/pages/PixKeyManagement/CreateTaxIdPixKey/index.ts":"46","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/pix/pages/PixKeyManagement/ConfirmPhoneNumberPixKey/index.ts":"47","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/pix/pages/PixKeyManagement/ConfirmEmailPixKey/index.ts":"48","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/pix/pages/PixKeyManagement/PixKeyList/index.ts":"49","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/pix/pages/PixKeyManagement/FirstAccessPixKeyList/index.ts":"50","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/pix/pages/PixTransfer/BankTransfer/BankPixTransferPayeeName/BankPixTransferPayeeName.controller.tsx":"51","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/pix/pages/PixTransfer/PixTransferHome/PixTransferHome.controller.tsx":"52","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/pix/pages/PixTransfer/QrCodeTransfer/QrCodePixTransferScanner/QrCodePixTransferScanner.controller.tsx":"53","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/pix/pages/PixTransfer/QrCodeTransfer/QrCodePixTransferValue/QrCodePixTransferValue.controller.tsx":"54","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/pix/pages/PixTransfer/QrCodeTransfer/QrCodePixTransferDescription/QrCodePixTransferDescription.controller.tsx":"55","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/pix/pages/PixTransfer/QrCodeTransfer/QrCodePixTransferSummary/QrCodePixTransferSummary.controller.tsx":"56","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/pix/pages/PixArea/PixArea.controller.tsx":"57","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/pix/pages/FirstAccess/FirstAccess.tsx":"58","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/pix/pages/PixKeyManagement/FirstAccessPixKeyList/FirstAccessPixKeyList.tsx":"59","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/pix/pages/PixKeyManagement/PixKeyList/PixKeyList.controller.tsx":"60","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/pix/pages/PixKeyManagement/ConfirmEmailPixKey/ConfirmEmailPixKey.controller.tsx":"61","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/pix/pages/PixKeyManagement/ConfirmPhoneNumberPixKey/ConfirmPhoneNumberPixKey.controller.tsx":"62","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/pix/pages/PixKeyManagement/CreateTaxIdPixKey/CreateTaxIdPixKey.controller.tsx":"63","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/pix/pages/PixKeyManagement/CreateEmailPixKey/CreateEmailPixKey.controller.tsx":"64","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/pix/pages/PixKeyManagement/CreatePhoneNumberPixKey/CreatePhoneNumberPixKey.controller.tsx":"65","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/pix/pages/PixKeyManagement/CreateRandomPixKey/CreateRandomPixKey.controller.tsx":"66","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/pix/pages/PixTransfer/KeyTransfer/KeyPixTransfer/KeyPixTransfer.controller.tsx":"67","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/pix/pages/PixTransfer/KeyTransfer/KeyPixTransferPayeeInfo/KeyPixTransferPayeeInfo.controller.tsx":"68","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/pix/pages/PixTransfer/KeyTransfer/KeyPixTransferValue/KeyPixTransferValue.controller.tsx":"69","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/pix/pages/PixTransfer/KeyTransfer/KeyTransferDescription/KeyPixTransferDescription.controller.tsx":"70","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/pix/pages/PixTransfer/KeyTransfer/KeyPixTransferSummary/KeyPixTransferSummary.controller.tsx":"71","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/pix/pages/FirstAccess/FirstAccess.style.ts":"72","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/pix/pages/PixTransfer/PixTransferHome/PixTransferHome.view.tsx":"73","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/pix/pages/PixTransfer/BankTransfer/BankPixTransferPayeeName/BankPixTransferPayeeName.view.tsx":"74","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/pix/pages/PixTransfer/QrCodeTransfer/QrCodePixTransferDescription/QrCodePixTransferDescription.view.tsx":"75","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/pix/pages/PixTransfer/QrCodeTransfer/QrCodePixTransferSummary/QrCodePixTransferSummary.view.tsx":"76","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/pix/pages/PixArea/PixArea.view.tsx":"77","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/pix/pages/PixTransfer/KeyTransfer/KeyTransferDescription/KeyPixTransferDescription.view.tsx":"78","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/pix/pages/PixTransfer/KeyTransfer/KeyPixTransferSummary/KeyPixTransferSummary.view.tsx":"79","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/pix/pages/PixTransfer/KeyTransfer/KeyPixTransferValue/KeyPixTransferValue.view.tsx":"80","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/pix/pages/PixTransfer/KeyTransfer/KeyPixTransferPayeeInfo/KeyPixTransferPayeeInfo.view.tsx":"81","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/pix/pages/PixTransfer/KeyTransfer/KeyPixTransfer/KeyPixTransfer.view.tsx":"82","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/pix/pages/PixKeyManagement/CreateRandomPixKey/CreateRandomPixKey.view.tsx":"83","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/pix/pages/PixKeyManagement/CreatePhoneNumberPixKey/CreatePhoneNumberPixKey.view.tsx":"84","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/pix/redux/actions.ts":"85","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/pix/pages/PixKeyManagement/CreateEmailPixKey/CreateEmailPixKey.view.tsx":"86","/home/danielvitor/Documentos/Develop/stonebank_front/src/hooks/useMask.ts":"87","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/pix/pages/PixTransfer/QrCodeTransfer/QrCodePixTransferDescription/QrCodePixTransferDescription.style.ts":"88","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/pix/pages/PixTransfer/QrCodeTransfer/QrCodePixTransferSummary/QrCodePixTransferSummary.style.ts":"89","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/pix/redux/models/accountType.ts":"90","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/pix/redux/models/pixKeyStatus.ts":"91","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/pix/redux/models/pixTransactionPurposeTest.ts":"92","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/pix/redux/models/pixKeyType.ts":"93","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/pix/pages/FirstAccess/components/index.ts":"94","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/pix/constants/routes.ts":"95","/home/danielvitor/Documentos/Develop/stonebank_front/src/_utils/validate.ts":"96","/home/danielvitor/Documentos/Develop/stonebank_front/src/_utils/masks/money.ts":"97","/home/danielvitor/Documentos/Develop/stonebank_front/src/_utils/masks/generics.ts":"98","/home/danielvitor/Documentos/Develop/stonebank_front/src/_utils/masks/taxPayer.ts":"99","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/pix/pages/PixTransfer/KeyTransfer/KeyTransferDescription/KeyPixTransferDescription.style.ts":"100","/home/danielvitor/Documentos/Develop/stonebank_front/src/hooks/useValue.ts":"101","/home/danielvitor/Documentos/Develop/stonebank_front/src/_utils/masks/taxId.ts":"102","/home/danielvitor/Documentos/Develop/stonebank_front/src/constants/buttons/labels.ts":"103","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/account/constants/routes.ts":"104","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/pix/redux/models/keyType.ts":"105","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/pix/pages/PixTransfer/KeyTransfer/KeyPixTransferValue/KeyPixTransferValue.style.ts":"106","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/pix/pages/PixTransfer/KeyTransfer/KeyPixTransferSummary/KeyPixTransferSummary.style.ts":"107","/home/danielvitor/Documentos/Develop/stonebank_front/src/_utils/masks/phone.ts":"108","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/pix/pages/PixTransfer/KeyTransfer/KeyPixTransfer/KeyPixTransfer.style.ts":"109","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/pix/pages/PixKeyManagement/CreateRandomPixKey/CreateRandomPixKey.styles.ts":"110","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/pix/pages/PixKeyManagement/CreatePhoneNumberPixKey/CreatePhoneNumberPixKey.styles.ts":"111","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/pix/index.ts":"112","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/pix/redux/models/addressType.ts":"113","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/pix/redux/actionTypes.ts":"114","/home/danielvitor/Documentos/Develop/stonebank_front/src/components/index.ts":"115","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/pix/pages/PixTransfer/KeyTransfer/KeyPixTransferPayeeInfo/KeyPixTransferPayeeInfo.style.ts":"116","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/pix/pages/PixKeyManagement/CreateEmailPixKey/CreateEmailPixKey.styles.ts":"117","/home/danielvitor/Documentos/Develop/stonebank_front/src/components/Button/index.ts":"118","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/transference/_utils/index.ts":"119","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/pix/pages/PixArea/PixArea.style.ts":"120","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/pix/pages/PixTransfer/BankTransfer/BankPixTransferPayeeName/BankPixTransferPayeeName.style.ts":"121","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/pix/pages/PixTransfer/PixTransferHome/PixTransferHome.styles.ts":"122","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/pix/pages/PixKeyManagement/FirstAccessPixKeyList/FirstAccessPixKeyList.styles.ts":"123","/home/danielvitor/Documentos/Develop/stonebank_front/src/_utils/http.ts":"124","/home/danielvitor/Documentos/Develop/stonebank_front/src/_config/http.ts":"125","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/pix/pages/PixKeyManagement/CreateTaxIdPixKey/CreateTaxIdPixKey.view.tsx":"126","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/pix/pages/PixKeyManagement/ConfirmPhoneNumberPixKey/ConfirmPhoneNumberPixKey.view.tsx":"127","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/pix/pages/PixKeyManagement/ConfirmEmailPixKey/ConfirmEmailPixKey.view.tsx":"128","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/pix/pages/PixKeyManagement/PixKeyList/PixKeyList.view.tsx":"129","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/pix/pages/PixTransfer/QrCodeTransfer/QrCodePixTransferValue/QrCodePixTransferValue.view.tsx":"130","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/pix/pages/PixTransfer/QrCodeTransfer/QrCodePixTransferScanner/QrCodePixTransferScanner.view.tsx":"131","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/pix/pages/PixTransfer/KeyTransfer/KeyPixTransfer/components/index.ts":"132","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/pix/pages/FirstAccess/components/SlideIndicator/index.ts":"133","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/pix/pages/FirstAccess/components/ThirdSlide/index.ts":"134","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/pix/pages/FirstAccess/components/SecondSlide/index.ts":"135","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/pix/pages/FirstAccess/components/FirstSlide/index.ts":"136","/home/danielvitor/Documentos/Develop/stonebank_front/src/components/Loader/index.ts":"137","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/account/redux/models/operationType.ts":"138","/home/danielvitor/Documentos/Develop/stonebank_front/src/components/Button/Button.tsx":"139","/home/danielvitor/Documentos/Develop/stonebank_front/src/components/Alert/index.ts":"140","/home/danielvitor/Documentos/Develop/stonebank_front/src/components/TransparentDateFild/index.ts":"141","/home/danielvitor/Documentos/Develop/stonebank_front/src/components/SchedulingButton/index.ts":"142","/home/danielvitor/Documentos/Develop/stonebank_front/src/components/AuthorizationSheet/index.ts":"143","/home/danielvitor/Documentos/Develop/stonebank_front/src/components/ErrorMessage/index.ts":"144","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/pix/pages/PixArea/components/PixButtonConfig/index.ts":"145","/home/danielvitor/Documentos/Develop/stonebank_front/src/components/AlertConcluded/index.ts":"146","/home/danielvitor/Documentos/Develop/stonebank_front/src/components/ProcessPageLayout/index.ts":"147","/home/danielvitor/Documentos/Develop/stonebank_front/src/components/ProcessDescriptionHeader/index.ts":"148","/home/danielvitor/Documentos/Develop/stonebank_front/src/components/AppBar/index.ts":"149","/home/danielvitor/Documentos/Develop/stonebank_front/src/components/PageContainer/index.ts":"150","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/pix/pages/PixKeyManagement/FirstAccessPixKeyList/components/index.ts":"151","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/pix/pages/PixTransfer/QrCodeTransfer/QrCodePixTransferValue/QrCodePixTransferValue.style.ts":"152","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/pix/pages/PixTransfer/QrCodeTransfer/QrCodePixTransferScanner/QrCodePixTransferScanner.style.ts":"153","/home/danielvitor/Documentos/Develop/stonebank_front/src/components/TransparentTextField/index.ts":"154","/home/danielvitor/Documentos/Develop/stonebank_front/src/components/TextField/index.ts":"155","/home/danielvitor/Documentos/Develop/stonebank_front/src/components/SelectionCard/index.ts":"156","/home/danielvitor/Documentos/Develop/stonebank_front/src/components/ProcessPageFooterButton/index.ts":"157","/home/danielvitor/Documentos/Develop/stonebank_front/src/components/ProcessPageFooter/index.ts":"158","/home/danielvitor/Documentos/Develop/stonebank_front/src/components/LabelWithValueKeyPix/index.ts":"159","/home/danielvitor/Documentos/Develop/stonebank_front/src/components/Button/Button.style.ts":"160","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/pix/pages/PixKeyManagement/PixKeyList/Keys.styles.ts":"161","/home/danielvitor/Documentos/Develop/stonebank_front/src/components/Loader/Loader.tsx":"162","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/pix/pages/FirstAccess/components/FirstSlide/FirstSlide.tsx":"163","/home/danielvitor/Documentos/Develop/stonebank_front/src/components/ButtonWithFloatingIcon/index.ts":"164","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/pix/pages/PixKeyManagement/ConfirmEmailPixKey/ConfirmEmailPixKey.styles.ts":"165","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/pix/pages/PixKeyManagement/ConfirmPhoneNumberPixKey/ConfirmPhoneNumberPixKey.styles.ts":"166","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/pix/pages/PixKeyManagement/CreateTaxIdPixKey/CreateTaxIdPixKey.styles.ts":"167","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/pix/pages/FirstAccess/components/SecondSlide/SecondSlide.tsx":"168","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/pix/pages/FirstAccess/components/ThirdSlide/ThirdSlide.tsx":"169","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/pix/pages/FirstAccess/components/SlideIndicator/SlideIndicator.tsx":"170","/home/danielvitor/Documentos/Develop/stonebank_front/src/components/Alert/Alert.tsx":"171","/home/danielvitor/Documentos/Develop/stonebank_front/src/components/RecentFavoredCard/index.ts":"172","/home/danielvitor/Documentos/Develop/stonebank_front/src/components/Icon/index.ts":"173","/home/danielvitor/Documentos/Develop/stonebank_front/src/components/ErrorMessage/ErrorMessage.tsx":"174","/home/danielvitor/Documentos/Develop/stonebank_front/src/components/AuthorizationSheet/AuthorizationSheet.tsx":"175","/home/danielvitor/Documentos/Develop/stonebank_front/src/components/SchedulingButton/SchedulingButton.tsx":"176","/home/danielvitor/Documentos/Develop/stonebank_front/src/components/TransparentDateFild/TransparentDateField.tsx":"177","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/pix/pages/PixArea/components/PixButtonConfig/PixButtonConfig.tsx":"178","/home/danielvitor/Documentos/Develop/stonebank_front/src/components/AlertConcluded/AlertConcluded.tsx":"179","/home/danielvitor/Documentos/Develop/stonebank_front/src/components/PageContainer/PageContainer.tsx":"180","/home/danielvitor/Documentos/Develop/stonebank_front/src/components/AppBar/AppBar.tsx":"181","/home/danielvitor/Documentos/Develop/stonebank_front/src/components/ProcessDescriptionHeader/ProcessDescriptionHeader.tsx":"182","/home/danielvitor/Documentos/Develop/stonebank_front/src/components/ProcessPageLayout/ProcessPageLayout.tsx":"183","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/pix/pages/PixTransfer/KeyTransfer/KeyPixTransfer/components/PixKeyTypeButtonList/index.ts":"184","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/authentication/utils.ts":"185","/home/danielvitor/Documentos/Develop/stonebank_front/src/components/TextField/TextField.tsx":"186","/home/danielvitor/Documentos/Develop/stonebank_front/src/components/TransparentTextField/TransparentTextField.tsx":"187","/home/danielvitor/Documentos/Develop/stonebank_front/src/components/ProcessPageFooter/ProcessPageFooter.tsx":"188","/home/danielvitor/Documentos/Develop/stonebank_front/src/components/ProcessPageFooterButton/ProcessPageFooterButton.tsx":"189","/home/danielvitor/Documentos/Develop/stonebank_front/src/components/SelectionCard/SelectionCard.tsx":"190","/home/danielvitor/Documentos/Develop/stonebank_front/src/components/LabelWithValueKeyPix/LabelWithValueKeyPix.tsx":"191","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/pix/pages/FirstAccess/components/FirstSlide/FirstSlide.style.ts":"192","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/pix/pages/FirstAccess/components/SlideIndicator/SlideIndicator.style.ts":"193","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/pix/pages/FirstAccess/components/ThirdSlide/ThirdSlide.style.ts":"194","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/pix/pages/FirstAccess/components/SecondSlide/SecondSlide.style.ts":"195","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/pix/pages/FirstAccess/components/SlideContent.tsx":"196","/home/danielvitor/Documentos/Develop/stonebank_front/src/components/ButtonWithFloatingIcon/ButtonWithFloatingIcon.tsx":"197","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/pix/pages/PixKeyManagement/PixKeyList/components/EmptyListMessage/index.ts":"198","/home/danielvitor/Documentos/Develop/stonebank_front/src/components/ErrorMessage/ErrorMessage.style.ts":"199","/home/danielvitor/Documentos/Develop/stonebank_front/src/components/TransparentDateFild/TransparentDateField.style.ts":"200","/home/danielvitor/Documentos/Develop/stonebank_front/src/components/AuthorizationSheet/AuthorizationSheet.style.ts":"201","/home/danielvitor/Documentos/Develop/stonebank_front/src/components/RecentFavoredCard/RecentFavoredCard.tsx":"202","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/pix/pages/PixArea/components/PixButtonConfig/PixButtonConfig.style.ts":"203","/home/danielvitor/Documentos/Develop/stonebank_front/src/components/AlertConcluded/AlertConcluded.style.ts":"204","/home/danielvitor/Documentos/Develop/stonebank_front/src/components/Icon/Icon.tsx":"205","/home/danielvitor/Documentos/Develop/stonebank_front/src/components/PageContainer/PageContainter.style.ts":"206","/home/danielvitor/Documentos/Develop/stonebank_front/src/components/AppBar/AppBar.style.ts":"207","/home/danielvitor/Documentos/Develop/stonebank_front/src/components/ProcessDescriptionHeader/ProcessDescriptionHeader.style.ts":"208","/home/danielvitor/Documentos/Develop/stonebank_front/src/components/ProcessPageLayout/ProcessPageLayout.style.ts":"209","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/pix/pages/PixKeyManagement/FirstAccessPixKeyList/components/SlideIndicator/index.ts":"210","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/pix/pages/PixKeyManagement/FirstAccessPixKeyList/components/SecondSlide/index.ts":"211","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/pix/pages/PixKeyManagement/FirstAccessPixKeyList/components/FirstSlide/index.ts":"212","/home/danielvitor/Documentos/Develop/stonebank_front/src/components/TextField/TextField.style.ts":"213","/home/danielvitor/Documentos/Develop/stonebank_front/src/components/TransparentTextField/TransparentTextField.style.ts":"214","/home/danielvitor/Documentos/Develop/stonebank_front/src/components/ProcessPageFooter/ProcessPageFooter.style.ts":"215","/home/danielvitor/Documentos/Develop/stonebank_front/src/components/ProcessPageFooterButton/ProcessPageFooterButton.style.ts":"216","/home/danielvitor/Documentos/Develop/stonebank_front/src/components/SelectionCard/SelectionCard.style.ts":"217","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/pix/components/ConfirmPixKeyDeletionSheet/index.ts":"218","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/pix/pages/PixTransfer/KeyTransfer/KeyPixTransfer/components/PixKeyTypeButtonList/PixKeyTypeButtonList.controller.tsx":"219","/home/danielvitor/Documentos/Develop/stonebank_front/src/components/QrCodeReader/index.ts":"220","/home/danielvitor/Documentos/Develop/stonebank_front/src/components/ButtonWithFloatingIcon/ButtonWIthFloatingIcon.style.ts":"221","/home/danielvitor/Documentos/Develop/stonebank_front/src/components/RecentFavoredCard/RecentFavoredCard.style.ts":"222","/home/danielvitor/Documentos/Develop/stonebank_front/src/components/Icon/Icon.style.ts":"223","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/pix/pages/PixKeyManagement/PixKeyList/components/EmptyListMessage/EmptyListMessage.tsx":"224","/home/danielvitor/Documentos/Develop/stonebank_front/src/components/OtpInput/OtpInput.tsx":"225","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/pix/pages/PixKeyManagement/FirstAccessPixKeyList/components/FirstSlide/FirstSlide.tsx":"226","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/pix/pages/PixKeyManagement/FirstAccessPixKeyList/components/SecondSlide/SecondSlide.tsx":"227","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/pix/pages/PixKeyManagement/FirstAccessPixKeyList/components/SlideIndicator/SlideIndicator.tsx":"228","/home/danielvitor/Documentos/Develop/stonebank_front/src/components/LabelWithValueKeyPix/LabelWithValueKeyPix.style.ts":"229","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/pix/pages/PixTransfer/KeyTransfer/KeyPixTransfer/components/PixKeyTypeButtonList/PixKeyTypeButtonList.view.tsx":"230","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/pix/pages/FirstAccess/components/SlideBottomText/index.ts":"231","/home/danielvitor/Documentos/Develop/stonebank_front/src/components/QrCodeReader/QrCodeReader.tsx":"232","/home/danielvitor/Documentos/Develop/stonebank_front/src/components/PopUpErrorMessage/index.ts":"233","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/pix/components/ConfirmPixKeyDeletionSheet/ConfirmPixKeyDeletionSheet.tsx":"234","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/pix/pages/PixKeyManagement/PixKeyList/components/EmptyListMessage/EmptyListMessage.style.ts":"235","/home/danielvitor/Documentos/Develop/stonebank_front/src/components/OtpInput/OptInput.style.ts":"236","/home/danielvitor/Documentos/Develop/stonebank_front/src/components/OtpInput/SingleOtp.tsx":"237","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/pix/pages/PixKeyManagement/FirstAccessPixKeyList/components/SlideIndicator/SlideIndicator.style.ts":"238","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/pix/pages/PixKeyManagement/FirstAccessPixKeyList/components/SecondSlide/SecondSlide.style.ts":"239","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/pix/pages/PixKeyManagement/FirstAccessPixKeyList/components/FirstSlide/FirstSlide.style.ts":"240","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/pix/pages/PixKeyManagement/FirstAccessPixKeyList/components/SlideContent.tsx":"241","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/pix/pages/PixTransfer/KeyTransfer/KeyPixTransfer/components/PixKeyTypeButtonList/PixKeyTypeButtonList.style.ts":"242","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/pix/components/ConfirmPixKeyDeletionSheet/ConfirmPixKeyDeletionSheet.style.ts":"243","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/pix/pages/FirstAccess/components/SlideBottomText/SlideBottomText.tsx":"244","/home/danielvitor/Documentos/Develop/stonebank_front/src/components/PopUpErrorMessage/PopUpErrorMessage.tsx":"245","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/pix/pages/FirstAccess/components/SlideBottomText/SlideBottomText.style.ts":"246","/home/danielvitor/Documentos/Develop/stonebank_front/src/components/PopUpErrorMessage/PopUpErrorMessage.style.ts":"247","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/pix/_utils/masks/maskKeys.ts":"248","/home/danielvitor/Documentos/Develop/stonebank_front/src/hooks/usePrevious.ts":"249","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/pix/pages/PixKeyManagement/FirstAccessPixKeyList/components/SlideBottomText/index.ts":"250","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/pix/pages/PixKeyManagement/FirstAccessPixKeyList/components/SlideBottomText/SlideBottomText.tsx":"251","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/pix/pages/PixKeyManagement/FirstAccessPixKeyList/components/SlideBottomText/SlideBottomText.style.ts":"252","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/pix/pages/PixTransfer/BankTransfer/BankPixTransferPayeeTaxId/BankPixTransferPayeeTaxId.controller.tsx":"253","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/pix/pages/PixTransfer/BankTransfer/BankPixTransferSelectBank/BankPixTransferSelectBank.controller.tsx":"254","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/pix/pages/PixTransfer/BankTransfer/BankDataPixTransferBranch/BankDataPixTransferBranch.controller.tsx":"255","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/pix/pages/PixTransfer/BankTransfer/BankPixTransferAccountType/BankPixTransferAccountType.controller.tsx":"256","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/pix/pages/PixTransfer/BankTransfer/BankDataPixTransferAccount/BankDataPixTransferAccount.controller.tsx":"257","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/pix/pages/PixTransfer/BankTransfer/BankPixTransferValue/BankPixTransferValue.controller.tsx":"258","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/pix/pages/PixTransfer/BankTransfer/BankPixTransferDescription/BankPixTransferDescription.controller.tsx":"259","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/pix/pages/PixTransfer/BankTransfer/BankPixTransferSummary/BankPixTransferSummary.controller.tsx":"260","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/pix/pages/ReceivePixTransfer/ReceivePixTransferQrCodeCheck/ReceivePixTransferQrCodeCheck.controller.tsx":"261","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/pix/pages/ReceivePixTransfer/ReceivePixTransferQrCode/ReceivePixTransferQrCode.controller.tsx":"262","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/pix/pages/ReceivePixTransfer/ReceivePixTransferQrCodeValue/ReceivePixTransferQrCodeValue.controller.tsx":"263","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/pix/pages/PixTransfer/PixTransferProcess/PixTransferProcess.controller.tsx":"264","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/pix/pages/PixTransfer/BankTransfer/BankPixTransferSelectBank/BankPixTransferSelectBank.view.tsx":"265","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/pix/pages/PixTransfer/BankTransfer/BankPixTransferAccountType/BankPixTransferAccountType.view.tsx":"266","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/pix/pages/PixTransfer/BankTransfer/BankPixTransferValue/BankPixTransferValue.view.tsx":"267","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/pix/pages/PixTransfer/BankTransfer/BankPixTransferDescription/BankPixTransferDescription.view.tsx":"268","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/pix/pages/PixTransfer/BankTransfer/BankPixTransferSummary/BankPixTransferSummary.view.tsx":"269","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/pix/pages/PixTransfer/BankTransfer/BankDataPixTransferAccount/BankDataPixTransferAccount.view.tsx":"270","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/pix/pages/PixTransfer/BankTransfer/BankDataPixTransferBranch/BankDataPixTransferBranch.view.tsx":"271","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/pix/pages/ReceivePixTransfer/ReceivePixTransferQrCodeCheck/ReceivePixTransferQrCodeCheck.view.tsx":"272","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/pix/pages/ReceivePixTransfer/ReceivePixTransferQrCode/ReceivePixTransferQrCode.view.tsx":"273","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/pix/pages/ReceivePixTransfer/ReceivePixTransferQrCodeValue/ReceivePixTransferQrCodeValue.view.tsx":"274","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/pix/pages/PixTransfer/PixTransferProcess/PixTransferProcess.view.tsx":"275","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/pix/pages/PixTransfer/BankTransfer/BankPixTransferPayeeTaxId/BankPixTransferPayeeTaxId.view.tsx":"276","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/authentication/pages/RecoverPassword/RecoverPassword.tsx":"277","/home/danielvitor/Documentos/Develop/stonebank_front/src/_utils/masks/transferenceNumber.ts":"278","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/pix/pages/PixTransfer/BankTransfer/BankPixTransferAccountType/BankPixTransferAccountType.style.ts":"279","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/pix/pages/PixTransfer/BankTransfer/BankPixTransferValue/BankPixTransferValue.style.ts":"280","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/pix/pages/PixTransfer/BankTransfer/BankPixTransferDescription/BankPixTransferDescription.style.ts":"281","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/pix/pages/PixTransfer/BankTransfer/BankPixTransferSummary/BankPixTransferSummary.style.ts":"282","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/pix/pages/PixTransfer/BankTransfer/BankDataPixTransferAccount/BankDataPixTransferAccount.style.ts":"283","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/pix/pages/PixTransfer/BankTransfer/BankPixTransferSelectBank/BankPixTransferSelectBank.style.ts":"284","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/card/pages/AssociateNewCard/AssociateMaritalStatusCard/AssociateMaritalStatusCard.tsx":"285","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/card/pages/AssociateNewCard/AssociateGenderUserCard/AssociateGenderUserCard.tsx":"286","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/pix/pages/PixTransfer/BankTransfer/BankDataPixTransferBranch/BankDataPixTransferBranch.style.ts":"287","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/pix/pages/PixTransfer/PixTransferProcess/PixTransferProcess.style.ts":"288","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/pix/pages/PixTransfer/BankTransfer/BankPixTransferPayeeTaxId/BankPixTransferPayeeTaxId.style.ts":"289","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/pix/pages/ReceivePixTransfer/ReceivePixTransferQrCodeValue/ReceivePixTransferQrCodeValue.style.ts":"290","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/pix/pages/ReceivePixTransfer/ReceivePixTransferQrCode/ReceivePixTransferQrCode.style.ts":"291","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/pix/pages/ReceivePixTransfer/ReceivePixTransferQrCodeCheck/ReceivePixTransferQrCodeCheck.style.ts":"292","/home/danielvitor/Documentos/Develop/stonebank_front/src/components/WithFirstAccessControl/index.ts":"293","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/digitalWithdrawal/index.ts":"294","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/payment/index.ts":"295","/home/danielvitor/Documentos/Develop/stonebank_front/src/components/ConclusionFlow/index.ts":"296","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/authentication/pages/ConfirmRecoverPwd/index.ts":"297","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/authentication/pages/TemporaryPassword/index.ts":"298","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/topUp/pages/CancelPeriodicTopUp/index.ts":"299","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/authentication/pages/FirstAccess/ChangePasswordCompleted/index.ts":"300","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/card/pages/AssociateNewCard/InvalidDataForAssociateCard/index.ts":"301","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/card/pages/AssociateNewCard/AssociateBirthDateCard/index.ts":"302","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/card/pages/AssociateNewCard/ConcludeAssociateCard/index.ts":"303","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/card/pages/AssociateNewCard/AssociateMotherNameCard/index.ts":"304","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/card/pages/AssociateNewCard/AssociateNationalityCard/index.ts":"305","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/card/pages/AssociateNewCard/AssociateNameUserCard/index.ts":"306","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/authentication/pages/RecoverPassword/RecoverPassword.style.ts":"307","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/smsTransfer/pages/SmsTransferName/index.ts":"308","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/smsTransfer/pages/SmsAccountsExibition/index.ts":"309","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/onboarding/pages/ActivateBySMS/EnterMailForSms/index.ts":"310","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/schedulePayments/constants/routes.ts":"311","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/smsTransfer/constants/routes.ts":"312","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/topUp/constants/routes.ts":"313","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/card/pages/AssociateNewCard/AssociateGenderUserCard/SearchFilter.style.ts":"314","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/card/pages/AssociateNewCard/AssociateMaritalStatusCard/SearchFilter.style.ts":"315","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/card/pages/AssociateNewCard/AssociateGenderUserCard/SearchFilter.tsx":"316","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/card/pages/AssociateNewCard/AssociateMaritalStatusCard/SearchFilter.tsx":"317","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/pix/pages/ReceivePixTransfer/ReceivePixTransferQrCode/components/SharePixQrCode/index.ts":"318","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/pix/pages/ReceivePixTransfer/ReceivePixTransferQrCode/components/PixKeySelection/index.ts":"319","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/pix/pages/ReceivePixTransfer/ReceivePixTransferQrCodeValue/components/HelpPixQrCode/index.ts":"320","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/taxPayment/constants/routes.ts":"321","/home/danielvitor/Documentos/Develop/stonebank_front/src/components/ConclusionFlow/ConclusionFlow.tsx":"322","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/taxPayment/pages/Gare/PaymentGareValues/PaymentGareValues.tsx":"323","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/authentication/pages/TemporaryPassword/TemporaryPassword.tsx":"324","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/authentication/pages/ConfirmRecoverPwd/ConfirmRecoverPwd.tsx":"325","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/authentication/pages/FirstAccess/ConfirmPasswordFirstAccess/index.ts":"326","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/authentication/pages/FirstAccess/ChangePasswordFirstAccess/index.ts":"327","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/authentication/pages/FirstAccess/ChangePasswordCompleted/ChangePasswordCompleted.tsx":"328","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/smsTransfer/pages/SmsTransferSummary/index.ts":"329","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/topUp/pages/CancelPeriodicTopUp/CancelPeriodicTopUp.tsx":"330","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/smsTransfer/pages/SmsTransferValue/index.ts":"331","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/smsTransfer/pages/SmsTransferNumber/index.ts":"332","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/card/pages/AssociateNewCard/AssociateNameUserCard/AssociateNameUserCard.tsx":"333","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/card/pages/AssociateNewCard/AssociateNationalityCard/AssociateNationalityCard.tsx":"334","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/card/pages/AssociateNewCard/AssociateMotherNameCard/AssociateMotherNameCard.tsx":"335","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/card/pages/AssociateNewCard/ConcludeAssociateCard/ConcludeAssociateCard.tsx":"336","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/card/pages/AssociateNewCard/AssociateBirthDateCard/AssociateBirthDateCard.tsx":"337","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/card/pages/AssociateNewCard/InvalidDataForAssociateCard/InvalidDataForAssociateCard.tsx":"338","/home/danielvitor/Documentos/Develop/stonebank_front/src/components/WithFirstAccessControl/WithFirstAccessControl.tsx":"339","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/topUp/pages/CheckDataTopUp/index.ts":"340","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/topUp/pages/CompleteTopUp/index.ts":"341","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/topUp/pages/TopUpValue/index.ts":"342","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/topUp/pages/PeriodicRepetition/index.ts":"343","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/topUp/pages/TopUp/index.ts":"344","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/topUp/pages/TopUpNumber/index.ts":"345","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/topUp/pages/TopUpSchedule/index.ts":"346","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/smsTransfer/pages/SmsAccountsExibition/SmsAccountsExibition.tsx":"347","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/smsTransfer/pages/SmsTransferName/SmsTransferName.tsx":"348","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/schedulePayments/pages/SheduleTransactionsFilter/index.ts":"349","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/schedulePayments/pages/ScheduleTransactionsList/index.ts":"350","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/schedulePayments/pages/FutureTransactions/index.ts":"351","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/schedulePayments/pages/ScheduleTransactions/index.ts":"352","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/transference/pages/TransferProcess/index.ts":"353","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/authentication/constants/routes.ts":"354","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/onboarding/pages/ActivateBySMS/EnterMailForSms/EnterMailForSms.tsx":"355","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/card/pages/ActivateCard/ConfirmPasswordCard/index.ts":"356","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/card/pages/ActivateCard/ConfirmationActivate/index.ts":"357","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/card/pages/ActivateCard/ActivateCardConclude/index.ts":"358","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/card/pages/ActivateCard/PasswordCard/index.ts":"359","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/authentication/redux/state.ts":"360","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/card/pages/ActivateCard/ActivateCard/index.ts":"361","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/authentication/redux/actions.ts":"362","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/account/pages/Help/index.ts":"363","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/taxPayment/pages/taxPaymentHome/index.ts":"364","/home/danielvitor/Documentos/Develop/stonebank_front/src/components/SearchField/index.ts":"365","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/taxPayment/pages/Fgts/PaymentFgtsCodeRevenue/index.ts":"366","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/taxPayment/pages/Fgts/PaymentFgtsDescription/index.ts":"367","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/taxPayment/pages/Fgts/PaymentFgtsDate/index.ts":"368","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/taxPayment/pages/Fgts/PaymentFgtsIdentifier/index.ts":"369","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/taxPayment/pages/Fgts/PaymentFgtsBarCode/index.ts":"370","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/taxPayment/pages/Fgts/PaymentFgtsSummary/index.ts":"371","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/pix/components/SelectionButton/index.ts":"372","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/card/redux/actions.ts":"373","/home/danielvitor/Documentos/Develop/stonebank_front/src/components/ActionListItem/index.ts":"374","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/card/constants/routes.ts":"375","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/taxPayment/pages/Fgts/PaymentFgtsValues/index.ts":"376","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/transference/components/BankCard/index.ts":"377","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/taxPayment/pages/Fgts/PaymentFgts/index.ts":"378","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/taxPayment/pages/Gare/PaymentGareCodeNumber/index.ts":"379","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/taxPayment/pages/Gare/PaymentGareDueDate/index.ts":"380","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/taxPayment/pages/Gare/PaymentGareSummary/index.ts":"381","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/taxPayment/pages/Gare/PaymentGareDescription/index.ts":"382","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/pix/pages/ReceivePixTransfer/ReceivePixTransferQrCodeValue/components/HelpPixQrCode/HelpPixQrCode.tsx":"383","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/pix/pages/ReceivePixTransfer/ReceivePixTransferQrCode/components/PixKeySelection/PixKeySelection.tsx":"384","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/pix/pages/ReceivePixTransfer/ReceivePixTransferQrCode/components/SharePixQrCode/SharePixQrCode.tsx":"385","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/taxPayment/pages/Gare/PaymentGareDateType/index.ts":"386","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/taxPayment/pages/Gare/PaymentGare/index.ts":"387","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/taxPayment/pages/Darj/PaymentDarjDueDate/index.ts":"388","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/taxPayment/pages/Darj/PaymentDarjValues/index.ts":"389","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/taxPayment/pages/Darj/PaymentDarjType/index.ts":"390","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/digitalWithdrawal/pages/index.ts":"391","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/payment/pages/index.ts":"392","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/payment/constants/index.ts":"393","/home/danielvitor/Documentos/Develop/stonebank_front/src/components/ConclusionFlow/ConclusionFlow.style.ts":"394","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/onboarding/pages/LandingPage/index.ts":"395","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/card/pages/AssociateNewCard/AssociateNewCardCheck/index.ts":"396","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/authentication/pages/ConfirmRecoverPwd/ConfirmRecoverPwd.style.ts":"397","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/card/pages/AssociateNewCard/AssociateFourDigits/index.ts":"398","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/taxpayment/pages/Darj/PaymentDarjCodeNumber/index.ts":"399","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/taxpayment/pages/Darj/PaymentDarjSummary/index.ts":"400","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/taxpayment/pages/Darj/PaymentDarj/index.ts":"401","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/taxpayment/pages/Darj/PaymentDarjDescription/index.ts":"402","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/authentication/pages/TemporaryPassword/TemporaryPassword.style.ts":"403","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/digitalWithdrawal/constants/index.ts":"404","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/topUp/pages/CancelPeriodicTopUp/CancelPeriodicTopUp.style.ts":"405","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/authentication/pages/FirstAccess/ChangePasswordCompleted/ChangePasswordCompleted.style.ts":"406","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/card/pages/AssociateNewCard/ConcludeAssociateCard/ConcludeAssociateCard.style.ts":"407","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/card/pages/AssociateNewCard/AssociateBirthDateCard/AssociateBirthDateCard.style.ts":"408","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/smsTransfer/pages/SmsAccountsExibition/SmsAccountsExibition.style.ts":"409","/home/danielvitor/Documentos/Develop/stonebank_front/src/components/ConfirmTokenSheet/index.ts":"410","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/authentication/pages/FirstAccess/ConfirmPasswordFirstAccess/ConfirmPasswordFirstAccess.tsx":"411","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/onboarding/pages/ActivateBySMS/EnterMailForSms/EnterMailForSms.style.ts":"412","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/smsTransfer/pages/SmsTransferValue/SmsTransferValue.tsx":"413","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/smsTransfer/pages/SmsTransferNumber/SmsTransferNumber.tsx":"414","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/smsTransfer/pages/SmsTransferSummary/SmsTransferSummary.tsx":"415","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/card/pages/AssociateNewCard/InvalidDataForAssociateCard/InvalidDataForAssociateCard.style.tsx":"416","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/authentication/redux/actionTypes.ts":"417","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/card/pages/AssociateNewCard/AssociateNewCard/index.ts":"418","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/transference/pages/TransferProcess/TransferProcess.tsx":"419","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/schedulePayments/pages/ScheduleTransactions/ScheduleTransactions.tsx":"420","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/schedulePayments/pages/FutureTransactions/FutureTransactions.tsx":"421","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/schedulePayments/pages/ScheduleTransactionsList/ScheduleTransactionsList.tsx":"422","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/schedulePayments/pages/SheduleTransactionsFilter/SheduleTransactionsFilter.tsx":"423","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/card/redux/actionTypes.ts":"424","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/authentication/redux/models/user.ts":"425","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/topUp/pages/TopUpNumber/TopUpNumber.tsx":"426","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/topUp/pages/TopUp/TopUp.tsx":"427","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/topUp/pages/TopUpSchedule/TopUpSchedule.tsx":"428","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/topUp/pages/PeriodicRepetition/PeriodicRepetition.tsx":"429","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/topUp/pages/TopUpValue/TopUpValue.tsx":"430","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/card/pages/RequestDuplicate/AddressConfirmation/index.ts":"431","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/card/pages/RequestDuplicate/ReplacementDetails/index.ts":"432","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/card/pages/RequestDuplicate/BlockCardAlert/index.ts":"433","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/card/pages/RequestDuplicate/UpdateAddress/index.ts":"434","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/account/pages/Help/Help.controller.tsx":"435","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/taxPayment/pages/taxPaymentHome/TaxPaymentHome.tsx":"436","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/card/redux/models/Enum.ts":"437","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/card/pages/ActivateCard/ActivateCard/ActivateCard.tsx":"438","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/card/pages/ActivateCard/PasswordCard/PasswordCard.tsx":"439","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/card/pages/ActivateCard/ActivateCardConclude/ActivateCardConclude.tsx":"440","/home/danielvitor/Documentos/Develop/stonebank_front/src/components/SearchField/SearchField.tsx":"441","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/card/pages/ActivateCard/ConfirmationActivate/ConfirmationActivate.tsx":"442","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/taxPayment/pages/Fgts/PaymentFgtsSummary/PaymentFgtsSummary.tsx":"443","/home/danielvitor/Documentos/Develop/stonebank_front/src/components/ActionListItem/ActionListItem.tsx":"444","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/pix/pages/ReceivePixTransfer/ReceivePixTransferQrCodeValue/components/HelpPixQrCode/HelpPixQrCode.style.ts":"445","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/pix/components/SelectionButton/SelectionButton.tsx":"446","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/pix/pages/ReceivePixTransfer/ReceivePixTransferQrCode/components/SharePixQrCode/SharePixQrCode.style.ts":"447","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/pix/pages/ReceivePixTransfer/ReceivePixTransferQrCode/components/PixKeySelection/PixKeySelection.style.ts":"448","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/taxPayment/pages/Fgts/PaymentFgtsValues/PaymentFgtsValues.tsx":"449","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/taxPayment/pages/Fgts/PaymentFgtsIdentifier/PaymentFgtsIdentifier.tsx":"450","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/taxPayment/pages/Fgts/PaymentFgtsBarCode/PaymentFgtsBarCode.tsx":"451","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/taxPayment/pages/Fgts/PaymentFgtsDate/PaymentFgtsDate.tsx":"452","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/taxPayment/pages/Fgts/PaymentFgtsDescription/PaymentFgtsDescription.tsx":"453","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/transference/components/BankCard/BankCard.tsx":"454","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/taxPayment/pages/Fgts/PaymentFgtsCodeRevenue/PaymentFgtsCodeRevenue.tsx":"455","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/taxPayment/pages/Fgts/PaymentFgts/PaymentFgts.tsx":"456","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/card/pages/ActivateCard/ConfirmPasswordCard/ConfirmPasswordCard.tsx":"457","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/taxPayment/pages/Gare/PaymentGareDescription/PaymentGareDescription.tsx":"458","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/taxPayment/pages/Gare/PaymentGareSummary/PaymentGareSummary.tsx":"459","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/payment/constants/routes.ts":"460","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/taxPayment/pages/Gare/PaymentGare/PaymentGare.tsx":"461","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/taxPayment/pages/Gare/PaymentGareDateType/PaymentGareDateType.tsx":"462","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/card/pages/ActivateCard/ActivateCardConclude/ActivateCardConclude.style.ts":"463","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/card/pages/AssociateNewCard/AssociateNewCardCheck/AssociateNewCardCheck.tsx":"464","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/onboarding/pages/LandingPage/LandingPage.tsx":"465","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/digitalWithdrawal/constants/routes.ts":"466","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/taxPayment/redux/actions.ts":"467","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/taxpayment/pages/Darj/PaymentDarjDescription/PaymentDarjDescription.tsx":"468","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/taxpayment/pages/Darj/PaymentDarjSummary/PaymentDarjSummary.tsx":"469","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/taxpayment/pages/Darj/PaymentDarj/PaymentDarj.tsx":"470","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/taxpayment/pages/Darj/PaymentDarjCodeNumber/PaymentDarjCodeNumber.tsx":"471","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/card/pages/AssociateNewCard/AssociateFourDigits/AssociateFourDigits.tsx":"472","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/card/pages/RequestDuplicate/BlockingReason/index.ts":"473","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/authentication/pages/FirstAccess/ConfirmPasswordFirstAccess/ConfirmPasswordFirstAccess.style.ts":"474","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/account/redux/actions.ts":"475","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/topUp/redux/state.ts":"476","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/topUp/redux/actions.ts":"477","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/schedulePayments/pages/SheduleTransactionsFilter/SheduleTransactionsFilter.style.ts":"478","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/smsTransfer/redux/actions.ts":"479","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/card/pages/CancellationReplacementCard/index.ts":"480","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/topUp/pages/TopUpValue/TopUpValue.style.ts":"481","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/card/pages/Cancellation/CancelCardAlert/index.ts":"482","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/card/pages/Cancellation/CancelReason/index.ts":"483","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/onboarding/redux/actions.ts":"484","/home/danielvitor/Documentos/Develop/stonebank_front/src/_utils/cryptography.ts":"485","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/card/pages/ActivateCard/PasswordCard/PasswordCard.style.ts":"486","/home/danielvitor/Documentos/Develop/stonebank_front/src/components/SearchField/SearchField.styles.ts":"487","/home/danielvitor/Documentos/Develop/stonebank_front/src/components/Validator/Validator.tsx":"488","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/card/pages/ActivateCard/ConfirmationActivate/ConfirmationActivate.style.ts":"489","/home/danielvitor/Documentos/Develop/stonebank_front/src/components/DateButton/DateButton.tsx":"490","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/card/pages/AssociateNewCard/AssociateNewCard/AssociateNewCard.tsx":"491","/home/danielvitor/Documentos/Develop/stonebank_front/src/components/ActionListItem/ActionListItem.style.ts":"492","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/card/pages/ChangePassword/EnterNewPassword/index.ts":"493","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/card/pages/ChangePassword/ConfirmNewPassword/index.ts":"494","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/pix/components/SelectionButton/SelectionButton.style.ts":"495","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/card/pages/ActivateCard/ActivateCard/ActivateCard.style.ts":"496","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/transference/components/BankCard/BankCard.style.ts":"497","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/account/pages/Help/Help.view.tsx":"498","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/pix/pages/ReceivePixTransfer/ReceivePixTransferQrCode/components/ShareImagePixQrCode/index.ts":"499","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/pix/pages/ReceivePixTransfer/ReceivePixTransferQrCode/components/ShareCode/index.ts":"500","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/taxPayment/pages/Gare/PaymentGareDescription/PaymentGareDescription.style.ts":"501","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/card/pages/ActivateCard/ConfirmPasswordCard/ConfirmPasswordCard.style.ts":"502","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/digitalWithdrawal/pages/MoneyCount/index.ts":"503","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/digitalWithdrawal/pages/DigitalWithdrawalStart/index.ts":"504","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/digitalWithdrawal/pages/DigitalWithdrawalSummary/index.ts":"505","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/card/pages/ChangePassword/EnterCurrentPassword/index.ts":"506","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/digitalWithdrawal/pages/ReadQrCodeDigitalWithdrawal/index.ts":"507","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/payment/pages/Summary/index.ts":"508","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/payment/pages/PaymentProcess/index.ts":"509","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/taxPayment/pages/Fgts/PaymentFgtsDescription/PaymentFgtsDescription.style.ts":"510","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/onboarding/pages/LandingPage/LandingPage.style.ts":"511","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/payment/pages/ScanBarcode/index.ts":"512","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/payment/pages/PaymentReceipt/index.ts":"513","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/taxPayment/redux/actionTypes.ts":"514","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/payment/pages/PaymentDescription/index.ts":"515","/home/danielvitor/Documentos/Develop/stonebank_front/src/components/GreatButton/index.ts":"516","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/card/pages/AssociateNewCard/AssociateFourDigits/AssociateFourDigits.style.ts":"517","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/payment/pages/PaymentData/index.ts":"518","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/payment/pages/PaymentAttach/index.ts":"519","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/payment/pages/Home/index.ts":"520","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/payment/pages/ChangeValue/index.ts":"521","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/card/pages/CardOption/index.ts":"522","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/card/pages/CardManagement/index.ts":"523","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/account/redux/models/uiFunction.ts":"524","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/account/redux/actionTypes.ts":"525","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/topUp/redux/actionTypes.ts":"526","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/digitalWithdrawal/pages/SelectValue/index.ts":"527","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/smsTransfer/redux/state.ts":"528","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/card/pages/RequestDuplicate/BlockingReason/BlockingReason.tsx":"529","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/smsTransfer/redux/actionTypes.ts":"530","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/schedulePayments/redux/actions.ts":"531","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/onboarding/redux/actionTypes.ts":"532","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/authentication/components/AccessAccountButton/index.ts":"533","/home/danielvitor/Documentos/Develop/stonebank_front/src/components/Validator/Validator.style.ts":"534","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/card/pages/AssociateNewCard/AssociateNewCard/AssociateNewCard.style.ts":"535","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/card/redux/state.ts":"536","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/transference/redux/actions.ts":"537","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/schedulePayments/redux/models/futureTransactions.ts":"538","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/card/pages/CancellationReplacementCard/CancellationReplacementCard.tsx":"539","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/card/pages/AssociateNewCard/AssociateNewCardCheck/AssociateNewCardCheck.style.ts":"540","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/taxPayment/redux/state.ts":"541","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/card/pages/Cancellation/CancelReason/CancelReason.tsx":"542","/home/danielvitor/Documentos/Develop/stonebank_front/src/_utils/masks/barCode.ts":"543","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/card/pages/Cancellation/CancelCardAlert/CancelCardAlert.tsx":"544","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/card/pages/ChangePassword/ConfirmNewPassword/ConfirmNewPassword.tsx":"545","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/card/pages/ChangePassword/EnterNewPassword/EnterNewPassword.tsx":"546","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/account/pages/Help/Help.style.ts":"547","/home/danielvitor/Documentos/Develop/stonebank_front/src/_assets/makeStyles/container/container.style.ts":"548","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/taxPayment/pages/taxPaymentHome/TaxPaymentHome.style.ts":"549","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/taxPayment/pages/Fgts/PaymentFgts/PaymentFgts.style.ts":"550","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/taxPayment/pages/Gare/PaymentGare/PaymentGare.style.ts":"551","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/taxPayment/pages/Gare/PaymentGareDateType/PaymentGareDateType.style.ts":"552","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/pix/pages/ReceivePixTransfer/ReceivePixTransferQrCode/components/ShareCode/ShareCode.tsx":"553","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/pix/pages/ReceivePixTransfer/ReceivePixTransferQrCode/components/ShareImagePixQrCode/ShareImagePixQrCode.tsx":"554","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/taxPayment/redux/models/enum.ts":"555","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/digitalWithdrawal/pages/ReadQrCodeDigitalWithdrawal/ReadQrCodeDigitalWithdrawal.tsx":"556","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/digitalWithdrawal/pages/DigitalWithdrawalSummary/DigitalWithdrawalSummary.tsx":"557","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/card/pages/ChangePassword/EnterCurrentPassword/EnterCurrentPassword.tsx":"558","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/digitalWithdrawal/pages/DigitalWithdrawalStart/DigitalWithdrawalStart.tsx":"559","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/digitalWithdrawal/pages/MoneyCount/moneyCount.tsx":"560","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/payment/pages/PaymentProcess/PaymentProcess.tsx":"561","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/card/pages/RequestDuplicate/UpdateAddress/UpdateAddress.tsx":"562","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/payment/pages/Summary/Summary.tsx":"563","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/topUp/pages/PeriodicRepetition/PeriodicRepetition.style.ts":"564","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/topUp/pages/TopUpSchedule/TopUpSchedule.style.ts":"565","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/card/components/Validator/Validator.tsx":"566","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/card/pages/RequestDuplicate/BlockCardAlert/BlockCardAlert.tsx":"567","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/card/pages/RequestDuplicate/ReplacementDetails/ReplacementDetails.tsx":"568","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/payment/pages/ScanBarcode/ScanBarcode.tsx":"569","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/card/pages/RequestDuplicate/AddressConfirmation/AddressConfirmation.tsx":"570","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/topUp/pages/TopUp/TopUp.style.ts":"571","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/topUp/pages/TopUpNumber/TopUpNumber.style.ts":"572","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/taxpayment/pages/Darj/PaymentDarj/PaymentDarj.style.ts":"573","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/payment/pages/PaymentReceipt/PaymentReceipt.tsx":"574","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/payment/pages/PaymentDescription/PaymentDescription.tsx":"575","/home/danielvitor/Documentos/Develop/stonebank_front/src/components/GreatButton/GreatButton.tsx":"576","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/card/pages/RequestDuplicate/BlockingReason/BlockingReason.style.ts":"577","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/card/pages/CardManagement/CardManagement.tsx":"578","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/card/pages/CardOption/CardOption.tsx":"579","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/payment/pages/ChangeValue/ChangeValue.tsx":"580","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/schedulePayments/redux/actionTypes.ts":"581","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/payment/pages/Home/Home.tsx":"582","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/payment/pages/PaymentAttach/PaymentAttach.tsx":"583","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/payment/pages/PaymentData/PaymentData.tsx":"584","/home/danielvitor/Documentos/Develop/stonebank_front/src/components/PasswordField/index.ts":"585","/home/danielvitor/Documentos/Develop/stonebank_front/src/components/DetailSmsTransferDescription/index.ts":"586","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/digitalWithdrawal/pages/SelectValue/SelectValue.tsx":"587","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/schedulePayments/pages/ScheduleTransactionsList/ScheduleTransactionsList.style.ts":"588","/home/danielvitor/Documentos/Develop/stonebank_front/src/components/EmptyList/index.ts":"589","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/card/pages/CancellationReplacementCard/CancellationReplacementCard.style.ts":"590","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/transference/redux/actionTypes.ts":"591","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/card/pages/Cancellation/CancelReason/CancelReason.style.ts":"592","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/authentication/components/AccessAccountButton/AccessAccountButton.tsx":"593","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/card/pages/Cancellation/CancelCardAlert/CancelCardAlert.style.ts":"594","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/card/pages/ChangePassword/EnterNewPassword/EnterNewPassword.style.ts":"595","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/card/components/CardData/index.ts":"596","/home/danielvitor/Documentos/Develop/stonebank_front/src/components/TagEditPopUp/index.ts":"597","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/taxPayment/pages/Darj/PaymentDarjDescription/PaymentDarjDescription.style.ts":"598","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/card/components/Inputs/PasswordInput/index.ts":"599","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/taxPayment/pages/Fgts/PaymentFgtsDate/PaymentFgtsDate.style.ts":"600","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/card/pages/ChangePassword/ConfirmNewPassword/ConfirmNewPassword.style.ts":"601","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/schedulePayments/pages/FutureTransactions/FutureTransactions.style.ts":"602","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/pix/pages/ReceivePixTransfer/ReceivePixTransferQrCode/components/ShareImagePixQrCode/ShareImagePixQrCode.style.ts":"603","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/taxPayment/components/DetailsFgtsDescription/index.ts":"604","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/taxPayment/pages/Fgts/PaymentFgtsBarCode/PaymentFgtsBarCode.style.ts":"605","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/taxPayment/pages/Fgts/PaymentFgtsIdentifier/PaymentFgtsIdentifier.style.ts":"606","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/taxPayment/components/DetailsGareDescription/index.ts":"607","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/pix/pages/ReceivePixTransfer/ReceivePixTransferQrCode/components/ShareCode/ShareCode.style.ts":"608","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/card/pages/ChangePassword/EnterCurrentPassword/EnterCurrentPassword.style.ts":"609","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/digitalWithdrawal/pages/MoneyCount/MoneyCount.style.ts":"610","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/account/components/AccountSheet/index.ts":"611","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/account/components/AccountBalance/index.ts":"612","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/payment/pages/PaymentProcess/PaymentProcess.style.ts":"613","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/tags/components/TagChip/index.ts":"614","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/card/pages/RequestDuplicate/BlockCardAlert/BlockCardAlert.style.ts":"615","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/card/pages/RequestDuplicate/ReplacementDetails/ReplacementDetails.style.ts":"616","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/card/pages/RequestDuplicate/AddressConfirmation/AddressConfirmation.style.ts":"617","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/payment/components/ShowBalanceButton/index.ts":"618","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/card/pages/CardManagement/CardManagement.style.ts":"619","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/payment/pages/PaymentData/PaymentData.style.ts":"620","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/card/redux/models/reasonCodeEnum.ts":"621","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/digitalWithdrawal/pages/SelectValue/SelectValue.style.ts":"622","/home/danielvitor/Documentos/Develop/stonebank_front/src/components/GreatButton/GreatButton.style.tsx":"623","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/card/components/Inputs/LastDigitsInput/index.ts":"624","/home/danielvitor/Documentos/Develop/stonebank_front/src/components/PasswordField/PasswordField.tsx":"625","/home/danielvitor/Documentos/Develop/stonebank_front/src/components/DetailSmsTransferDescription/DetailSmsTransferDescription.tsx":"626","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/payment/pages/Home/Home.style.ts":"627","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/card/components/Inputs/InsertIdCard/index.ts":"628","/home/danielvitor/Documentos/Develop/stonebank_front/src/components/EmptyList/EmptyList.tsx":"629","/home/danielvitor/Documentos/Develop/stonebank_front/src/components/Divider/Divider.tsx":"630","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/account/components/ListItemHelp/index.ts":"631","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/payment/pages/ChangeValue/ChangeValue.style.ts":"632","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/card/pages/CardOption/CardOption.style.ts":"633","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/taxpayment/components/DetailsDarjDescription/index.ts":"634","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/payment/pages/PaymentDescription/PaymentDescription.style.ts":"635","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/payment/pages/PaymentReceipt/PaymentReceipt.style.ts":"636","/home/danielvitor/Documentos/Develop/stonebank_front/src/components/ActionList/index.ts":"637","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/card/components/Inputs/PasswordInput/PasswordInput.tsx":"638","/home/danielvitor/Documentos/Develop/stonebank_front/src/components/TagEditPopUp/TagEditPopUp.tsx":"639","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/card/components/CardData/CardData.tsx":"640","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/taxPayment/components/DetailsFgtsDescription/DetailsFgtsDescription.tsx":"641","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/taxPayment/components/DetailsGareDescription/DetailsGareDescription.tsx":"642","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/payment/pages/ScanBarcode/ScanBarcode.style.ts":"643","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/card/components/Validator/Validator.styles.ts":"644","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/payment/pages/Summary/Summary.style.ts":"645","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/card/pages/RequestDuplicate/UpdateAddress/UpdateAddress.style.ts":"646","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/digitalWithdrawal/pages/DigitalWithdrawalStart/DigitalWithdrawalStart.style.ts":"647","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/digitalWithdrawal/pages/DigitalWithdrawalSummary/DigitalWithdrawalSummary.style.ts":"648","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/account/components/AccountBalance/AccountBalance.tsx":"649","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/account/components/AccountSheet/AccountSheet.tsx":"650","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/tags/components/TagChip/TagChip.tsx":"651","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/payment/redux/actions.ts":"652","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/payment/redux/state.ts":"653","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/digitalWithdrawal/pages/ReadQrCodeDigitalWithdrawal/ReadQrCodeDigitalWithdrawal.style.ts":"654","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/payment/components/ShowBalanceButton/ShowBalanceButton.tsx":"655","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/account/components/FilterSectionTitleAndDescription/index.ts":"656","/home/danielvitor/Documentos/Develop/stonebank_front/src/components/Divider/index.ts":"657","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/user/constants/routes.ts":"658","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/schedulePayments/pages/ScheduleTransactions/ScheduleTransactions.style.ts":"659","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/topUp/components/ContentBalance/index.ts":"660","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/topUp/components/InputNumber/index.ts":"661","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/topUp/components/CardPhone/index.ts":"662","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/topUp/components/ListButton/ListButtonRadio/index.ts":"663","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/transference/pages/TransferProcess/TransferProcess.style.ts":"664","/home/danielvitor/Documentos/Develop/stonebank_front/src/components/DateInput/index.ts":"665","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/smsTransfer/pages/SmsTransferSummary/SmsTransferSummary.style.ts":"666","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/schedulePayments/components/PopUpCancelScheduledPayment/index.ts":"667","/home/danielvitor/Documentos/Develop/stonebank_front/src/components/DetailSmsTransferDescription/DetailSmsTransferDescription.style.ts":"668","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/schedulePayments/components/SearchFilter/index.ts":"669","/home/danielvitor/Documentos/Develop/stonebank_front/src/components/EmptyList/EmptyList.style.ts":"670","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/card/components/Inputs/LastDigitsInput/LastDigitsInput.tsx":"671","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/card/components/Option/index.ts":"672","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/card/components/ListButton/ListButtonRadio/index.ts":"673","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/schedulePayments/components/TransactionList/index.ts":"674","/home/danielvitor/Documentos/Develop/stonebank_front/src/components/Divider/Divider.style.ts":"675","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/card/components/Inputs/InsertIdCard/InsertIdCard.tsx":"676","/home/danielvitor/Documentos/Develop/stonebank_front/src/components/ConfirmTokenSheet/ConfirmTokenSheet.controller.tsx":"677","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/card/components/Inputs/PasswordInput/PasswordInput.style.ts":"678","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/card/components/CardData/CardData.style.ts":"679","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/account/components/ListItemHelp/ListItemHelp.tsx":"680","/home/danielvitor/Documentos/Develop/stonebank_front/src/components/TagEditPopUp/TagEditPopUp.style.ts":"681","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/taxpayment/components/DetailsDarjDescription/DetailsDarjDescription.tsx":"682","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/taxPayment/pages/Darj/PaymentDarjType/PaymentDarjType.tsx":"683","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/taxPayment/pages/Darj/PaymentDarjValues/PaymentDarjValues.tsx":"684","/home/danielvitor/Documentos/Develop/stonebank_front/src/components/ActionList/ActionList.tsx":"685","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/taxPayment/pages/Darj/PaymentDarjDueDate/PaymentDarjDueDate.tsx":"686","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/taxPayment/pages/Gare/PaymentGareDueDate/PaymentGareDueDate.tsx":"687","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/taxPayment/pages/Gare/PaymentGareCodeNumber/PaymentGareCodeNumber.tsx":"688","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/topUp/pages/CompleteTopUp/CompleteTopUp.tsx":"689","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/topUp/pages/CheckDataTopUp/CheckDataTopUp.tsx":"690","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/authentication/pages/FirstAccess/ChangePasswordFirstAccess/ChangePasswordFirstAccess.tsx":"691","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/account/components/AccountBalance/AccountBalance.style.ts":"692","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/tags/components/TagChip/TagChip.style.ts":"693","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/payment/redux/actionTypes.ts":"694","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/account/components/AccountSheet/AccountSheet.style.ts":"695","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/payment/components/EnterCodeButton/index.ts":"696","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/onboarding/constants/routes.ts":"697","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/payment/components/ShowBalanceButton/ShowBalanceButton.style.ts":"698","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/payment/components/OrientationBarIcon/index.ts":"699","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/payment/components/BarcodeHeader/index.ts":"700","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/card/components/PopUp/PopUpConfirmPassword/index.ts":"701","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/digitalWithdrawal/components/ButtonReadQRCode/index.ts":"702","/home/danielvitor/Documentos/Develop/stonebank_front/src/components/SwitchIOS/index.ts":"703","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/account/components/FilterSectionTitleAndDescription/FilterSectionTitleAndDescription.tsx":"704","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/payment/components/ReceiverAndValue/index.ts":"705","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/topUp/components/ListButton/ListButtonRadio/ListButtonRadio.tsx":"706","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/topUp/components/CardPhone/CardPhone.tsx":"707","/home/danielvitor/Documentos/Develop/stonebank_front/src/components/DateInput/DateInput.tsx":"708","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/topUp/components/InputNumber/InputNumber.tsx":"709","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/topUp/components/ContentBalance/ContentBalance.tsx":"710","/home/danielvitor/Documentos/Develop/stonebank_front/src/components/ButtonAttachDocuments/index.ts":"711","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/card/components/Inputs/LastDigitsInput/LastDigitsInput.style.ts":"712","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/payment/components/TitleAndDescriptionTextAttach/index.ts":"713","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/schedulePayments/components/PopUpCancelScheduledPayment/PopUpCancelScheduledPayment.tsx":"714","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/card/components/Inputs/InsertIdCard/InsertIdCard.style.ts":"715","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/schedulePayments/components/SearchFilter/SearchFilter.tsx":"716","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/digitalWithdrawal/pages/DigitalWithdrawalSuccess/index.ts":"717","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/digitalWithdrawal/pages/DigitalWithdrawalReceipt/index.ts":"718","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/payment/components/AccountBalance/index.ts":"719","/home/danielvitor/Documentos/Develop/stonebank_front/src/components/InputCurrency/index.ts":"720","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/schedulePayments/components/TransactionList/TransactionList.tsx":"721","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/card/components/PopUp/PopUpTempBlock/index.ts":"722","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/card/components/ListButton/ListButtonSwitch/index.ts":"723","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/card/components/SelectCardButton/index.ts":"724","/home/danielvitor/Documentos/Develop/stonebank_front/src/components/ConfirmTokenSheet/ConfirmTokenSheet.view.tsx":"725","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/payment/components/ReceiptDescription/index.ts":"726","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/payment/components/BarcodeScanner/index.ts":"727","/home/danielvitor/Documentos/Develop/stonebank_front/src/components/ActionList/ActionList.style.ts":"728","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/account/components/ListItemHelp/ListItemHelp.style.tsx":"729","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/topUp/pages/CompleteTopUp/CompleteTopUp.style.ts":"730","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/topUp/pages/CheckDataTopUp/CheckDataTopUp.style.ts":"731","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/tags/redux/actions.ts":"732","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/taxPayment/components/DetailsFgtsDescription/DetailsFgtsDescription.style.ts":"733","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/authentication/pages/FirstAccess/ChangePasswordFirstAccess/ChangePasswordFirstAccess.style.ts":"734","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/taxPayment/components/DetailsGareDescription/DetailsGareDescription.style.ts":"735","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/account/components/ShowMoreButton/index.ts":"736","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/card/components/ReplacementData/index.ts":"737","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/payment/components/DetailPaymentDescription/index.ts":"738","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/payment/components/EnterCodeButton/EnterCodeButton.tsx":"739","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/payment/components/OrientationBarIcon/OrientationBarIcon.tsx":"740","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/payment/components/BarcodeHeader/BarcodeHeader.tsx":"741","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/account/components/FilterSectionTitleAndDescription/FilterSectionTitleAndDescription.style.ts":"742","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/onboarding/pages/ActivateBySMS/ValidatePhoneForSMS/ValidatePhoneForSMS.tsx":"743","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/topUp/components/ListButton/ListButtonRadio/ListButtonRadio.style.ts":"744","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/topUp/components/CardPhone/CardPhone.style.ts":"745","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/qrCodeTransfer/constants/routes.ts":"746","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/topUp/components/InputNumber/InputNumber.style.ts":"747","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/topUp/components/ContentBalance/ContentBalance.style.ts":"748","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/qrCodeTransfer/pages/GenerateQrCodeTransfer/GenerateQrCodeTransfer.tsx":"749","/home/danielvitor/Documentos/Develop/stonebank_front/src/components/SwitchIOS/SwitchIOS.tsx":"750","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/digitalWithdrawal/components/ButtonReadQRCode/ButtonReadQRCode.tsx":"751","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/qrCodeTransfer/pages/QrCodeTransfer/QrCodeTransfer.tsx":"752","/home/danielvitor/Documentos/Develop/stonebank_front/src/components/TransactionDetailValue/index.ts":"753","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/schedulePayments/components/PopUpCancelScheduledPayment/PopUpCancelScheduledPayment.style.ts":"754","/home/danielvitor/Documentos/Develop/stonebank_front/src/components/TransactionDetailName/index.ts":"755","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/payment/components/ReceiverAndValue/ReceiverAndValue.tsx":"756","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/schedulePayments/components/SearchFilter/SearchFilter.style.ts":"757","/home/danielvitor/Documentos/Develop/stonebank_front/src/components/TransactionDetail/index.ts":"758","/home/danielvitor/Documentos/Develop/stonebank_front/src/components/ButtonAttachDocuments/ButtonAttachDocuments.tsx":"759","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/schedulePayments/components/TransactionList/TransactionList.style.ts":"760","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/payment/components/TitleAndDescriptionTextAttach/TitleAndDescriptionTextAttach.tsx":"761","/home/danielvitor/Documentos/Develop/stonebank_front/src/components/ConfirmTokenSheet/ConfirmTokenSheet.style.ts":"762","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/taxPayment/pages/Darj/PaymentDarjType/PaymentDarjType.style.ts":"763","/home/danielvitor/Documentos/Develop/stonebank_front/src/components/InputCurrency/InputCurrency.tsx":"764","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/payment/components/AccountBalance/AccountBalance.tsx":"765","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/digitalWithdrawal/pages/DigitalWithdrawalReceipt/DigitalWithdrawalReceipt.tsx":"766","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/digitalWithdrawal/pages/DigitalWithdrawalSuccess/DigitalWithdrawalSuccess.tsx":"767","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/card/components/SelectCardButton/SelectCardButton.tsx":"768","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/card/components/ListButton/ListButtonSwitch/ListButtonSwitch.tsx":"769","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/tags/redux/actionTypes.ts":"770","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/card/components/PopUp/PopUpTempBlock/PopUpTempBlock.tsx":"771","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/taxPayment/pages/Darj/PaymentDarjDueDate/PaymentDarjDueDate.style.ts":"772","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/taxPayment/pages/Gare/PaymentGareDueDate/PaymentGareDueDate.style.ts":"773","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/taxpayment/components/DetailsDarjDescription/DetailsDarjDescription.style.ts":"774","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/payment/components/BarcodeScanner/BarcodeScanner.tsx":"775","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/payment/components/ReceiptDescription/ReceiptDescription.tsx":"776","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/onboarding/pages/ActivateBySMS/CreateNameForSMS/index.ts":"777","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/onboarding/pages/ActivateBySMS/BirthDateForSMS/index.ts":"778","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/payment/components/EnterCodeButton/EnterCodeButton.style.ts":"779","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/account/components/AccountListPopUp/index.ts":"780","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/payment/components/OrientationBarIcon/OrientationBarIcon.style.ts":"781","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/payment/components/BarcodeHeader/BarcodeHeader.style.ts":"782","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/account/components/ShowMoreButton/ShowMoreButton.tsx":"783","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/qrCodeTransfer/pages/QrCodeTransferSendingDetails/index.ts":"784","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/qrCodeTransfer/pages/ReadQrCodeTransfer/index.ts":"785","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/qrCodeTransfer/pages/ShowQrCodeTransfer/index.ts":"786","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/payment/components/DetailPaymentDescription/DetailPaymentDescription.tsx":"787","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/card/components/ReplacementData/ReplacementData.tsx":"788","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/card/components/PopUp/PopUpConfirmPassword/PopUpConfirmPassword.tsx":"789","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/account/pages/EditAccount/index.ts":"790","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/transference/pages/AccountNumber/index.ts":"791","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/onboarding/pages/ActivateBySMS/ValidatePhoneForSMS/ValidatePhoneForSMS.style.ts":"792","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/transference/pages/SelectAccountType/index.ts":"793","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/transference/pages/BankBranch/index.ts":"794","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/transference/pages/SelectBank/index.ts":"795","/home/danielvitor/Documentos/Develop/stonebank_front/src/components/DateInput/DateInput.style.ts":"796","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/transference/pages/FavoredName/index.ts":"797","/home/danielvitor/Documentos/Develop/stonebank_front/src/components/SwitchIOS/SwitchIOS.style.ts":"798","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/digitalWithdrawal/components/ButtonReadQRCode/ButtonReadQRCode.style.ts":"799","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/qrCodeTransfer/pages/QrCodeTransfer/QrCodeTransfer.style.ts":"800","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/payment/components/ReceiverAndValue/ReceiverAndValue.style.ts":"801","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/qrCodeTransfer/pages/GenerateQrCodeTransfer/GenerateQrCodeTransfer.style.ts":"802","/home/danielvitor/Documentos/Develop/stonebank_front/src/components/ButtonAttachDocuments/ButtonAttachDocuments.style.ts":"803","/home/danielvitor/Documentos/Develop/stonebank_front/src/components/TransactionDetailValue/TransactionDetailValue.tsx":"804","/home/danielvitor/Documentos/Develop/stonebank_front/src/components/TransactionDetailName/TransactionDetailName.tsx":"805","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/payment/components/TitleAndDescriptionTextAttach/TitleAndDescriptionTextAttach.style.ts":"806","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/user/pages/ChangeConclude/index.ts":"807","/home/danielvitor/Documentos/Develop/stonebank_front/src/components/TransactionDetail/TransactionDetail.tsx":"808","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/card/components/ListButton/ListButtonRadio/ListButtonRadio.tsx":"809","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/card/components/Option/Option.tsx":"810","/home/danielvitor/Documentos/Develop/stonebank_front/src/components/InputCurrency/InputCurrency.style.ts":"811","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/user/pages/ChangeAddress/index.tsx":"812","/home/danielvitor/Documentos/Develop/stonebank_front/src/components/Validator/index.ts":"813","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/payment/components/AccountBalance/AccountBalance.style.ts":"814","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/digitalWithdrawal/pages/DigitalWithdrawalReceipt/DigitalWithdrawalReceipt.style.ts":"815","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/digitalWithdrawal/pages/DigitalWithdrawalSuccess/DigitalWithdrawalSuccess.style.ts":"816","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/card/components/SelectCardButton/SelectCardButton.style.ts":"817","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/card/components/ListButton/ListButtonSwitch/ListButtonSwitch.style.ts":"818","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/card/components/PopUp/PopUpTempBlock/PopUpTempBlock.style.ts":"819","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/payment/components/BarcodeScanner/BarCodeScanner.style.ts":"820","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/payment/components/ReceiptDescription/ReceiptDescription.style.ts":"821","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/onboarding/pages/ActivateBySMS/CreateNameForSMS/CreateNameForSMS.tsx":"822","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/onboarding/pages/ActivateBySMS/BirthDateForSMS/BirthDateForSMS.tsx":"823","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/account/components/ShowMoreButton/ShowMoreButton.style.ts":"824","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/card/components/ReplacementData/ReplacementData.style.ts":"825","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/payment/components/DetailPaymentDescription/DetailPaymentDescription.style.ts":"826","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/card/components/PopUp/PopUpConfirmPassword/PopUpConfirmPassword.style.ts":"827","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/onboarding/redux/state.ts":"828","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/account/components/AccountListPopUp/AccountListPopUp.tsx":"829","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/account/pages/EditAccount/EditAccount.tsx":"830","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/transference/pages/AccountNumber/AccountNumber.tsx":"831","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/qrCodeTransfer/pages/ShowQrCodeTransfer/ShowQrCodeTransfer.tsx":"832","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/qrCodeTransfer/pages/ReadQrCodeTransfer/ReadQrCodeTransfer.tsx":"833","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/qrCodeTransfer/pages/QrCodeTransferSendingDetails/QrCodeTransferSendingDetails.tsx":"834","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/transference/pages/SelectBank/SelectBank.tsx":"835","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/transference/pages/BankBranch/BankBranch.tsx":"836","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/transference/pages/FavoredName/FavoredName.tsx":"837","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/transference/pages/SelectAccountType/SelectAccountType.tsx":"838","/home/danielvitor/Documentos/Develop/stonebank_front/src/components/TransactionDetailValue/TransactionDetailValue.style.ts":"839","/home/danielvitor/Documentos/Develop/stonebank_front/src/components/TransactionDetailName/TransactionDetailName.style.ts":"840","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/qrCodeTransfer/redux/actions.ts":"841","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/qrCodeTransfer/redux/state.ts":"842","/home/danielvitor/Documentos/Develop/stonebank_front/src/components/TransactionDetail/TransactionDetail.style.ts":"843","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/card/components/ListButton/ListButtonRadio/ListButtonRadio.style.ts":"844","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/card/components/Option/Option.style.ts":"845","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/user/pages/ChangeConclude/ChangeConclude.tsx":"846","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/user/pages/ChangeAddress/ChangeAddress.tsx":"847","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/transference/constants/routes.ts":"848","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/transference/pages/Transference/Transference.tsx":"849","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/account/components/AccountListPopUp/AccountListPopUp.style.ts":"850","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/account/pages/EditAccount/EditAccount.style.ts":"851","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/qrCodeTransfer/pages/ShowQrCodeTransfer/ShowQrCodeTransfer.style.ts":"852","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/qrCodeTransfer/pages/ReadQrCodeTransfer/ReadQrCodeTransfer.style.ts":"853","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/qrCodeTransfer/pages/QrCodeTransferSendingDetails/QrCodeTransferSendingDetails.style.ts":"854","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/transference/pages/SelectBank/SelectBank.style.ts":"855","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/transference/pages/SelectAccountType/SelectAccountType.style.ts":"856","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/user/pages/CurrentAddress/index.ts":"857","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/qrCodeTransfer/redux/actionTypes.ts":"858","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/user/pages/ConfirmNewPassword/index.ts":"859","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/user/pages/ChooseNewPassword/index.ts":"860","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/onboarding/components/inputs/TokenInput/index.ts":"861","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/user/pages/ChangePassword/index.ts":"862","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/user/pages/ChangeNickname/index.ts":"863","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/user/pages/ChangeConclude/ChangeConclude.styles.ts":"864","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/user/pages/ChangePhone/index.ts":"865","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/user/pages/ChangeEmail/index.ts":"866","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/user/pages/UserInformation/index.ts":"867","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/transference/pages/Summary/Summary.tsx":"868","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/transference/pages/FavoredIdentification/index.ts":"869","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/transference/pages/TransferValue/index.ts":"870","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/transference/pages/TransferReceipt/index.ts":"871","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/payment/components/PaymentError/index.ts":"872","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/transference/pages/Transference/Transference.style.ts":"873","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/transference/redux/models/enum.ts":"874","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/transference/pages/TransferDescription/index.ts":"875","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/transference/pages/ScheduleTransfer/index.ts":"876","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/transference/pages/FavoredAccountSelection/index.ts":"877","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/user/pages/CurrentAddress/CurrentAddress.tsx":"878","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/transference/pages/AttachDocuments/index.ts":"879","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/user/pages/ConfirmNewPassword/ConfirmNewPassword.tsx":"880","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/user/pages/ChooseNewPassword/ChooseNewPassword.tsx":"881","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/onboarding/components/inputs/TokenInput/TokenInput.tsx":"882","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/user/pages/ChangePassword/ChangePassword.tsx":"883","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/user/pages/ChangeNickname/ChangeNickname.tsx":"884","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/account/pages/Receipt/index.ts":"885","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/account/pages/Details/index.ts":"886","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/account/pages/BankStatementFilter/index.ts":"887","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/account/pages/AccountSettings/index.ts":"888","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/authentication/pages/SignOut/index.ts":"889","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/account/pages/AllAccounts/index.ts":"890","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/account/pages/StoneBankHome/index.ts":"891","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/account/pages/Home/index.ts":"892","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/transference/pages/Summary/Summary.style.ts":"893","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/account/pages/BankStatement/index.ts":"894","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/onboarding/pages/AccountEmail/index.ts":"895","/home/danielvitor/Documentos/Develop/stonebank_front/src/_utils/masks/zipCode.ts":"896","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/user/redux/actions.ts":"897","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/user/redux/state.ts":"898","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/onboarding/pages/ActivateByCard/EnterBirthDateForCard/index.ts":"899","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/onboarding/pages/ActivateByCard/InvalidDataForCard/index.ts":"900","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/onboarding/pages/ActivateByCard/EnterPhoneForCard/index.ts":"901","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/onboarding/pages/ActivateByCard/ConfirmPasswordForCard/index.ts":"902","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/onboarding/pages/ActivateByCard/CreatePasswordForCard/index.ts":"903","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/transference/pages/TransferReceipt/TransferReceipt.tsx":"904","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/transference/pages/FavoredIdentification/FavoredIdentification.tsx":"905","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/transference/pages/TransferValue/TransferValue.tsx":"906","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/user/pages/UserInformation/UserInformation.tsx":"907","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/user/pages/ChangeEmail/ChangeEmail.tsx":"908","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/user/pages/ChangePhone/ChangePhone.tsx":"909","/home/danielvitor/Documentos/Develop/stonebank_front/src/components/PopUpConfirmToken/index.ts":"910","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/payment/components/PaymentError/PaymentError.tsx":"911","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/onboarding/pages/ActivateBySMS/BirthDateForSMS/BirthDaterSMS.style.ts":"912","/home/danielvitor/Documentos/Develop/stonebank_front/src/components/BadgeButton/index.ts":"913","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/account/components/EditPageHeader/index.ts":"914","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/account/components/BadgeChangeProfileButton/index.ts":"915","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/user/pages/CurrentAddress/CurrentAddress.style.ts":"916","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/onboarding/components/inputs/TokenInput/TokenInput.style.ts":"917","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/transference/pages/AttachDocuments/AttachDocuments.tsx":"918","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/transference/pages/FavoredAccountSelection/FavoredAccountSelection.tsx":"919","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/transference/pages/ScheduleTransfer/ScheduleTransfer.tsx":"920","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/transference/pages/TransferDescription/TransferDescription.tsx":"921","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/user/redux/actionTypes.ts":"922","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/transference/redux/state.ts":"923","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/account/pages/AccountSettings/AccountSettings.tsx":"924","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/account/pages/BankStatementFilter/BankStatementFilter.tsx":"925","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/authentication/pages/SignOut/SignOut.tsx":"926","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/account/pages/AllAccounts/AllAccounts.tsx":"927","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/account/pages/Details/Details.tsx":"928","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/account/pages/Receipt/Receipt.tsx":"929","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/account/pages/StoneBankHome/StoneBankHome.controller.tsx":"930","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/account/pages/Home/Home.controller.tsx":"931","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/user/pages/UserInformation/UserInformation.style.ts":"932","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/account/pages/BankStatement/BankStatement.tsx":"933","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/transference/pages/TransferReceipt/storeAutentication.ts":"934","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/transference/pages/TransferReceipt/TransferReceipt.style.ts":"935","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/transference/pages/TransferReceipt/store.ts":"936","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/onboarding/pages/AccountEmail/AccountEmail.tsx":"937","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/user/pages/ChangeEmail/ChangeEmail.style.ts":"938","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/payment/components/PaymentError/PaymentError.style.ts":"939","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/onboarding/pages/ActivateByCard/CreatePasswordForCard/CreatePasswordForCard.tsx":"940","/home/danielvitor/Documentos/Develop/stonebank_front/src/redux/rootReducer.ts":"941","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/onboarding/pages/ActivateByCard/ConfirmPasswordForCard/ConfirmPasswordForCard.tsx":"942","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/onboarding/pages/ActivateByCard/EnterPhoneForCard/EnterPhoneForCard.tsx":"943","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/onboarding/pages/ActivateByCard/InvalidDataForCard/InvalidDataForCard.tsx":"944","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/onboarding/pages/ActivateByCard/EnterBirthDateForCard/EnterBirthDateForCard.tsx":"945","/home/danielvitor/Documentos/Develop/stonebank_front/src/components/PopUpConfirmToken/PopUpConfirmToken.tsx":"946","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/account/components/BadgeChangeProfileButton/BadgeChangeProfileButton.tsx":"947","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/account/components/EditPageHeader/EditPageHeader.tsx":"948","/home/danielvitor/Documentos/Develop/stonebank_front/src/components/BadgeButton/BadgeButton.tsx":"949","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/transference/pages/FavoredAccountSelection/FavoredAccountSelection.style.ts":"950","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/transference/pages/TransferDescription/TransferDescription.style.ts":"951","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/transference/pages/ScheduleTransfer/ScheduleTransfer.style.ts":"952","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/account/pages/BankStatementFilter/BankStatementFilter.style.ts":"953","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/account/pages/Details/Details.style.ts":"954","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/account/pages/Receipt/Receipt.style.ts":"955","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/tags/redux/state.ts":"956","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/account/redux/state.ts":"957","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/account/pages/BankStatement/BankStatement.style.ts":"958","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/onboarding/pages/AccountEmail/AccountEmail.style.ts":"959","/home/danielvitor/Documentos/Develop/stonebank_front/src/components/DetailTransferDescription/index.ts":"960","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/transference/components/TransactionAuthentication/index.ts":"961","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/transference/components/ReceiptSummary/index.ts":"962","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/account/pages/StoneBankHome/StoneBankHome.view.tsx":"963","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/account/pages/Home/Home.view.tsx":"964","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/onboarding/pages/ActivateByCard/CreatePasswordForCard/CreatePasswordForCard.style.tsx":"965","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/onboarding/pages/ActivateByCard/ConfirmPasswordForCard/ConfirmPasswordForCard.style.tsx":"966","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/onboarding/pages/ActivateByCard/InvalidDataForCard/InvalidDataForCard.style.tsx":"967","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/onboarding/pages/ActivateByCard/EnterBirthDateForCard/EnterBirthDateForCard.style.tsx":"968","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/account/components/BadgeChangeProfileButton/BadgeChangeProfileButton.style.ts":"969","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/account/components/EditPageHeader/EditPageHeader.style.ts":"970","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/onboarding/pages/ActivateByCard/EnterDigitsForCard/index.ts":"971","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/onboarding/pages/ActivateByCard/EnterIdentifierForCard/index.ts":"972","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/onboarding/pages/ActivateByCard/EnterTaxPayerForCard/index.ts":"973","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/onboarding/pages/ActivateBySMS/EnterTaxPayerForSMS/index.ts":"974","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/onboarding/pages/ActivateBySMS/ConfirmPasswordForSMS/index.ts":"975","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/onboarding/pages/ActivateBySMS/CreatePasswordForSMS/index.ts":"976","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/onboarding/pages/ActivateBySMS/ActivationTokenForSMS/index.ts":"977","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/onboarding/pages/AccountActivationCompletedForCard/index.ts":"978","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/onboarding/pages/AccountActivationCompleted/index.ts":"979","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/onboarding/pages/ActivateAccount/index.ts":"980","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/onboarding/pages/Terms/index.ts":"981","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/onboarding/pages/Welcome/index.ts":"982","/home/danielvitor/Documentos/Develop/stonebank_front/src/components/PopUpConfirmToken/PopUpConfirmToken.style.ts":"983","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/user/components/PasswordField/index.ts":"984","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/authentication/pages/SignIn/index.ts":"985","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/account/redux/models/transactionType.ts":"986","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/account/pages/StoneBankHome/StoneBankHome.style.ts":"987","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/account/pages/Home/Home.style.ts":"988","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/user/components/Account/index.ts":"989","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/pix/redux/reducer.ts":"990","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/schedulePayments/redux/reducer.ts":"991","/home/danielvitor/Documentos/Develop/stonebank_front/src/components/DetailTransferDescription/DetailTransferDescription.tsx":"992","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/smsTransfer/redux/reducer.ts":"993","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/account/pages/AllAccounts/AllAccounts.style.ts":"994","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/account/pages/AccountSettings/AccountSettings.style.ts":"995","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/account/components/Tags/TagsDescription.tsx":"996","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/transference/components/ReceiptSummary/ReceiptSummary.tsx":"997","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/transference/components/TransactionAuthentication/TransactionAuthentication.tsx":"998","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/onboarding/pages/ActivateBySMS/EnterTaxPayerForSMS/EnterTaxPayerForSMS.tsx":"999","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/onboarding/pages/ActivateBySMS/ActivationTokenForSMS/ActivationTokenForSMS.tsx":"1000","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/onboarding/pages/ActivateBySMS/CreatePasswordForSMS/CreatePasswordForSMS.tsx":"1001","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/onboarding/pages/ActivateBySMS/ConfirmPasswordForSMS/ConfirmPasswordForSMS.tsx":"1002","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/onboarding/pages/AccountActivationCompletedForCard/AccountActivationCompleted.tsx":"1003","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/onboarding/pages/AccountActivationCompleted/AccountActivationCompleted.tsx":"1004","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/onboarding/pages/ActivateByCard/EnterTaxPayerForCard/EnterTaxPayerForCard.tsx":"1005","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/onboarding/pages/ActivateByCard/EnterIdentifierForCard/EnterIdentifierForCard.tsx":"1006","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/onboarding/pages/ActivateByCard/EnterDigitsForCard/EnterDigitsForCard.tsx":"1007","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/taxPayment/redux/reducer.ts":"1008","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/topUp/redux/reducer.ts":"1009","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/onboarding/redux/reducer.ts":"1010","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/transference/components/ConfirmSchedulingDialog/index.ts":"1011","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/payment/redux/reducer.ts":"1012","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/transference/redux/reducer.ts":"1013","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/qrCodeTransfer/redux/reducer.ts":"1014","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/onboarding/pages/Terms/Terms.tsx":"1015","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/onboarding/pages/Welcome/Welcome.tsx":"1016","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/tags/redux/reducer.ts":"1017","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/onboarding/pages/ActivateAccount/ActivateAccount.tsx":"1018","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/user/redux/reducer.ts":"1019","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/authentication/redux/reducer.ts":"1020","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/authentication/components/ConfirmSignoutDialog/index.ts":"1021","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/user/components/PasswordField/PasswordField.tsx":"1022","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/authentication/pages/SignIn/SignIn.tsx":"1023","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/account/components/TransactionTypeFilterButton/index.ts":"1024","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/account/components/DayTransactions/index.ts":"1025","/home/danielvitor/Documentos/Develop/stonebank_front/src/components/DetailTransferDescription/DetailTransferDescription.style.ts":"1026","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/account/components/Authentication/index.ts":"1027","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/account/components/ReceiptDescription/index.ts":"1028","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/account/components/DetailDescription/index.ts":"1029","/home/danielvitor/Documentos/Develop/stonebank_front/src/components/OtpInput/index.ts":"1030","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/account/components/AccountCard/index.ts":"1031","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/user/components/Account/Account.tsx":"1032","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/card/redux/reducer.ts":"1033","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/account/redux/reducer.ts":"1034","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/transference/components/ReceiptSummary/ReceiptSummary.style.ts":"1035","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/transference/components/TransactionAuthentication/TransactionAuthentication.style.ts":"1036","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/transference/components/TransactionAuthentication/PaidThrough .tsx":"1037","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/transference/components/TransactionAuthentication/InternalProtocol.tsx":"1038","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/transference/components/TransactionAuthentication/ExternalProtocol .tsx":"1039","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/onboarding/pages/ActivateBySMS/CreatePasswordForSMS/CreatePasswordForSMS.style.ts":"1040","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/onboarding/pages/ActivateBySMS/ConfirmPasswordForSMS/ConfirmPasswordForSMS.style.ts":"1041","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/onboarding/pages/AccountActivationCompletedForCard/AccountActivationCompleted.style.ts":"1042","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/onboarding/pages/AccountActivationCompleted/AccountActivationCompleted.style.ts":"1043","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/onboarding/pages/Terms/Terms.style.ts":"1044","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/onboarding/pages/Welcome/Welcome.style.ts":"1045","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/onboarding/pages/ActivateAccount/ActivateAccount.style.ts":"1046","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/user/components/PasswordField/PasswordField.style.ts":"1047","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/authentication/pages/SignIn/SignIn.style.ts":"1048","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/transference/components/ConfirmSchedulingDialog/ConfirmSchedulingDialog.tsx":"1049","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/authentication/components/ConfirmSignoutDialog/ConfirmSignoutDialog.tsx":"1050","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/account/components/FeaturesList/index.ts":"1051","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/account/components/HomePageHeader/index.ts":"1052","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/user/components/Account/Account.style.ts":"1053","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/account/components/DayTransactions/DayTransactions.tsx":"1054","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/account/components/TransactionTypeFilterButton/TransactionTypeFilterButton.tsx":"1055","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/account/components/Authentication/Authentication.tsx":"1056","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/account/components/ReceiptDescription/ReceiptDescription.tsx":"1057","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/account/components/DetailDescription/DetailDescription.tsx":"1058","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/account/components/AccountCard/AccountCard.tsx":"1059","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/account/components/StoneBankHomePageHeader/index.ts":"1060","/home/danielvitor/Documentos/Develop/stonebank_front/src/_utils/masks/idCard.ts":"1061","/home/danielvitor/Documentos/Develop/stonebank_front/src/hooks/useToken.ts":"1062","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/account/components/DayTransactions/DayTransactions.style.ts":"1063","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/account/components/TransactionTypeFilterButton/TransactionTypeFilterButton.style.ts":"1064","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/account/components/Authentication/Authentication.style.ts":"1065","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/account/components/ReceiptDescription/ReceiptDescription.style.ts":"1066","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/account/components/DetailDescription/DetailDescription.style.ts":"1067","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/account/components/AccountCard/AccountCard.style.ts":"1068","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/account/components/FeaturesList/FeaturesList.tsx":"1069","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/authentication/components/AuthenticationTitle/AuthenticationTitle.tsx":"1070","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/account/components/HomePageHeader/HomePageHeader.tsx":"1071","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/account/components/StoneBankHomePageHeader/StoneBankHomePageHeader.tsx":"1072","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/onboarding/components/inputs/CardDigitsInput/index.ts":"1073","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/onboarding/components/buttons/AccessAccountButton/index.ts":"1074","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/transference/constants/messages.ts":"1075","/home/danielvitor/Documentos/Develop/stonebank_front/src/components/LogoBar/index.ts":"1076","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/authentication/components/SaveTaxId/index.ts":"1077","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/authentication/components/ForgotPassword/index.ts":"1078","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/onboarding/components/texts/TermsText/index.ts":"1079","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/onboarding/components/texts/OnboardingTitle/index.ts":"1080","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/onboarding/components/texts/OnboardingSubtitle/index.ts":"1081","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/onboarding/components/cards/OptionsCard/index.ts":"1082","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/authentication/components/LoginButton/index.ts":"1083","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/account/components/FeaturesList/FeaturesList.style.ts":"1084","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/account/components/HomePageHeader/HomePageHeader.style.ts":"1085","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/account/components/StoneBankHomePageHeader/StoneBankHomePageHeader.style.ts":"1086","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/onboarding/components/inputs/CardDigitsInput/CardDigitsInput.tsx":"1087","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/onboarding/components/buttons/AccessAccountButton/AccessAccountButton.tsx":"1088","/home/danielvitor/Documentos/Develop/stonebank_front/src/components/LogoBar/LogoBar.tsx":"1089","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/authentication/components/SaveTaxId/SaveTaxId.tsx":"1090","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/authentication/components/ForgotPassword/ForgotPassword.tsx":"1091","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/onboarding/components/texts/TermsText/TermsText.tsx":"1092","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/onboarding/components/texts/OnboardingTitle/OnboardingTitle.tsx":"1093","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/onboarding/components/texts/OnboardingSubtitle/OnboardingSubTitle.tsx":"1094","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/onboarding/components/cards/OptionsCard/OptionsCard.tsx":"1095","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/account/components/TranscationCard/index.ts":"1096","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/authentication/components/LoginButton/LoginButton.tsx":"1097","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/account/components/DetailsButton/index.ts":"1098","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/account/components/AccountCardDetails/index.ts":"1099","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/onboarding/components/buttons/AccessAccountButton/AccessAccountButton.style.ts":"1100","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/onboarding/components/inputs/CardDigitsInput/CardDigitsInput.style.tsx":"1101","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/authentication/components/SaveTaxId/SaveTaxId.style.ts":"1102","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/authentication/components/ForgotPassword/ForgotPassword.style.ts":"1103","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/onboarding/components/texts/OnboardingSubtitle/OnboardingSubTitle.style.ts":"1104","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/onboarding/components/texts/TermsText/TermsText.style.ts":"1105","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/onboarding/components/texts/OnboardingTitle/OnboardingTile.style.ts":"1106","/home/danielvitor/Documentos/Develop/stonebank_front/src/components/SquareButtonWithIcon/index.ts":"1107","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/account/components/ShowBalanceButton/index.ts":"1108","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/account/components/TranscationCard/TranscationCard.tsx":"1109","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/account/components/SettingsButton/index.ts":"1110","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/account/components/AccountCardDetails/AccountCardDetails.tsx":"1111","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/account/components/DetailsButton/DetailsButton.tsx":"1112","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/account/components/TranscationCard/TranscationCard.style.ts":"1113","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/account/components/DetailsButton/DetailsButton.style.ts":"1114","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/account/components/AccountCardDetails/AccountCardDetails.style.ts":"1115","/home/danielvitor/Documentos/Develop/stonebank_front/src/components/SquareButtonWithIcon/SquareButtonWithIcon.tsx":"1116","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/account/components/ShowBalanceButton/ShowBalanceButton.tsx":"1117","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/account/components/SettingsButton/SettingsButton.tsx":"1118","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/account/components/ShowBalanceButton/ShowBalanceButton.style.ts":"1119","/home/danielvitor/Documentos/Develop/stonebank_front/src/components/SquareButtonWithIcon/SquareButtonWithIcon.style.ts":"1120","/home/danielvitor/Documentos/Develop/stonebank_front/src/components/TransactionCardButton/index.ts":"1121","/home/danielvitor/Documentos/Develop/stonebank_front/src/components/TransactionCardButton/TransactionCardButton.tsx":"1122","/home/danielvitor/Documentos/Develop/stonebank_front/src/components/TransactionCardButton/TransactionCardButton.style.ts":"1123"},{"size":29,"mtime":1665074516706,"results":"1124","hashOfConfig":"1125"},{"size":1033,"mtime":1665074516706,"results":"1126","hashOfConfig":"1125"},{"size":125,"mtime":1665074516706,"results":"1127","hashOfConfig":"1125"},{"size":7184,"mtime":1665074516702,"results":"1128","hashOfConfig":"1125"},{"size":458,"mtime":1665073876871,"results":"1129","hashOfConfig":"1125"},{"size":323,"mtime":1665074516702,"results":"1130","hashOfConfig":"1125"},{"size":1197,"mtime":1665074516702,"results":"1131","hashOfConfig":"1125"},{"size":35,"mtime":1665074516714,"results":"1132","hashOfConfig":"1125"},{"size":2306,"mtime":1665074516806,"results":"1133","hashOfConfig":"1125"},{"size":433,"mtime":1665073876871,"results":"1134","hashOfConfig":"1125"},{"size":2380,"mtime":1665073876871,"results":"1135","hashOfConfig":"1125"},{"size":1673,"mtime":1665074516702,"results":"1136","hashOfConfig":"1125"},{"size":373,"mtime":1665074516702,"results":"1137","hashOfConfig":"1125"},{"size":39718,"mtime":1665074516714,"results":"1138","hashOfConfig":"1125"},{"size":1814,"mtime":1665074516786,"results":"1139","hashOfConfig":"1125"},{"size":3374,"mtime":1665074516782,"results":"1140","hashOfConfig":"1125"},{"size":2826,"mtime":1665074516782,"results":"1141","hashOfConfig":"1125"},{"size":70,"mtime":1665074516778,"results":"1142","hashOfConfig":"1125"},{"size":92,"mtime":1665074516782,"results":"1143","hashOfConfig":"1125"},{"size":92,"mtime":1665074516778,"results":"1144","hashOfConfig":"1125"},{"size":82,"mtime":1665074516778,"results":"1145","hashOfConfig":"1125"},{"size":78,"mtime":1665074516774,"results":"1146","hashOfConfig":"1125"},{"size":86,"mtime":1665074516774,"results":"1147","hashOfConfig":"1125"},{"size":74,"mtime":1665074516774,"results":"1148","hashOfConfig":"1125"},{"size":86,"mtime":1665074516770,"results":"1149","hashOfConfig":"1125"},{"size":84,"mtime":1665074516770,"results":"1150","hashOfConfig":"1125"},{"size":86,"mtime":1665074516770,"results":"1151","hashOfConfig":"1125"},{"size":84,"mtime":1665074516774,"results":"1152","hashOfConfig":"1125"},{"size":84,"mtime":1665074516774,"results":"1153","hashOfConfig":"1125"},{"size":82,"mtime":1665074516774,"results":"1154","hashOfConfig":"1125"},{"size":64,"mtime":1665074516778,"results":"1155","hashOfConfig":"1125"},{"size":82,"mtime":1665074516778,"results":"1156","hashOfConfig":"1125"},{"size":90,"mtime":1665074516778,"results":"1157","hashOfConfig":"1125"},{"size":78,"mtime":1665074516778,"results":"1158","hashOfConfig":"1125"},{"size":82,"mtime":1665074516778,"results":"1159","hashOfConfig":"1125"},{"size":45,"mtime":1665074516766,"results":"1160","hashOfConfig":"1125"},{"size":48,"mtime":1665074516770,"results":"1161","hashOfConfig":"1125"},{"size":76,"mtime":1665074516774,"results":"1162","hashOfConfig":"1125"},{"size":84,"mtime":1665074516778,"results":"1163","hashOfConfig":"1125"},{"size":72,"mtime":1665074516774,"results":"1164","hashOfConfig":"1125"},{"size":80,"mtime":1665074516774,"results":"1165","hashOfConfig":"1125"},{"size":62,"mtime":1665074516774,"results":"1166","hashOfConfig":"1125"},{"size":70,"mtime":1665074516770,"results":"1167","hashOfConfig":"1125"},{"size":80,"mtime":1665074516770,"results":"1168","hashOfConfig":"1125"},{"size":68,"mtime":1665074516770,"results":"1169","hashOfConfig":"1125"},{"size":68,"mtime":1665074516770,"results":"1170","hashOfConfig":"1125"},{"size":82,"mtime":1665074516770,"results":"1171","hashOfConfig":"1125"},{"size":70,"mtime":1665074516770,"results":"1172","hashOfConfig":"1125"},{"size":54,"mtime":1665074516770,"results":"1173","hashOfConfig":"1125"},{"size":65,"mtime":1665074516770,"results":"1174","hashOfConfig":"1125"},{"size":1439,"mtime":1665074516774,"results":"1175","hashOfConfig":"1125"},{"size":3311,"mtime":1665074516778,"results":"1176","hashOfConfig":"1125"},{"size":2743,"mtime":1665074516778,"results":"1177","hashOfConfig":"1125"},{"size":3483,"mtime":1665074516778,"results":"1178","hashOfConfig":"1125"},{"size":1973,"mtime":1665074516778,"results":"1179","hashOfConfig":"1125"},{"size":2383,"mtime":1665074516778,"results":"1180","hashOfConfig":"1125"},{"size":4269,"mtime":1665074516766,"results":"1181","hashOfConfig":"1125"},{"size":2859,"mtime":1665074516766,"results":"1182","hashOfConfig":"1125"},{"size":2803,"mtime":1665074516770,"results":"1183","hashOfConfig":"1125"},{"size":5404,"mtime":1665074516770,"results":"1184","hashOfConfig":"1125"},{"size":2549,"mtime":1665074516770,"results":"1185","hashOfConfig":"1125"},{"size":2328,"mtime":1665074516770,"results":"1186","hashOfConfig":"1125"},{"size":2626,"mtime":1665074516770,"results":"1187","hashOfConfig":"1125"},{"size":2854,"mtime":1665074516770,"results":"1188","hashOfConfig":"1125"},{"size":2722,"mtime":1665074516770,"results":"1189","hashOfConfig":"1125"},{"size":2271,"mtime":1665074516770,"results":"1190","hashOfConfig":"1125"},{"size":4318,"mtime":1665074516774,"results":"1191","hashOfConfig":"1125"},{"size":1876,"mtime":1665074516774,"results":"1192","hashOfConfig":"1125"},{"size":4007,"mtime":1665074516774,"results":"1193","hashOfConfig":"1125"},{"size":1961,"mtime":1665074516774,"results":"1194","hashOfConfig":"1125"},{"size":1936,"mtime":1665074516774,"results":"1195","hashOfConfig":"1125"},{"size":569,"mtime":1665074516766,"results":"1196","hashOfConfig":"1125"},{"size":4063,"mtime":1665074516778,"results":"1197","hashOfConfig":"1125"},{"size":2368,"mtime":1665074516774,"results":"1198","hashOfConfig":"1125"},{"size":4431,"mtime":1665074516778,"results":"1199","hashOfConfig":"1125"},{"size":2576,"mtime":1665074516778,"results":"1200","hashOfConfig":"1125"},{"size":6756,"mtime":1665074516766,"results":"1201","hashOfConfig":"1125"},{"size":4415,"mtime":1665074516778,"results":"1202","hashOfConfig":"1125"},{"size":3266,"mtime":1665074516774,"results":"1203","hashOfConfig":"1125"},{"size":4535,"mtime":1665074516774,"results":"1204","hashOfConfig":"1125"},{"size":2467,"mtime":1665074516774,"results":"1205","hashOfConfig":"1125"},{"size":3848,"mtime":1665074516774,"results":"1206","hashOfConfig":"1125"},{"size":4503,"mtime":1665074516770,"results":"1207","hashOfConfig":"1125"},{"size":4882,"mtime":1665074516770,"results":"1208","hashOfConfig":"1125"},{"size":23559,"mtime":1665074516782,"results":"1209","hashOfConfig":"1125"},{"size":4863,"mtime":1665074516770,"results":"1210","hashOfConfig":"1125"},{"size":457,"mtime":1665073876871,"results":"1211","hashOfConfig":"1125"},{"size":491,"mtime":1665074516778,"results":"1212","hashOfConfig":"1125"},{"size":608,"mtime":1665074516778,"results":"1213","hashOfConfig":"1125"},{"size":49,"mtime":1665073876855,"results":"1214","hashOfConfig":"1125"},{"size":188,"mtime":1665073876855,"results":"1215","hashOfConfig":"1125"},{"size":106,"mtime":1665073876855,"results":"1216","hashOfConfig":"1125"},{"size":83,"mtime":1665073876855,"results":"1217","hashOfConfig":"1125"},{"size":182,"mtime":1665073876847,"results":"1218","hashOfConfig":"1125"},{"size":2170,"mtime":1665074516766,"results":"1219","hashOfConfig":"1125"},{"size":1096,"mtime":1665074516706,"results":"1220","hashOfConfig":"1125"},{"size":508,"mtime":1665074516702,"results":"1221","hashOfConfig":"1125"},{"size":195,"mtime":1665074516702,"results":"1222","hashOfConfig":"1125"},{"size":598,"mtime":1665074516706,"results":"1223","hashOfConfig":"1125"},{"size":1549,"mtime":1665074516778,"results":"1224","hashOfConfig":"1125"},{"size":445,"mtime":1665073876871,"results":"1225","hashOfConfig":"1125"},{"size":611,"mtime":1665074516706,"results":"1226","hashOfConfig":"1125"},{"size":926,"mtime":1665073876823,"results":"1227","hashOfConfig":"1125"},{"size":381,"mtime":1665074902500,"results":"1228","hashOfConfig":"1125"},{"size":806,"mtime":1665074516782,"results":"1229","hashOfConfig":"1125"},{"size":824,"mtime":1665074516774,"results":"1230","hashOfConfig":"1125"},{"size":597,"mtime":1665074516774,"results":"1231","hashOfConfig":"1125"},{"size":216,"mtime":1665074516706,"results":"1232","hashOfConfig":"1125"},{"size":155,"mtime":1665074516774,"results":"1233","hashOfConfig":"1125"},{"size":583,"mtime":1665074516770,"results":"1234","hashOfConfig":"1125"},{"size":627,"mtime":1665074516770,"results":"1235","hashOfConfig":"1125"},{"size":75,"mtime":1665074516766,"results":"1236","hashOfConfig":"1125"},{"size":65,"mtime":1665073876855,"results":"1237","hashOfConfig":"1125"},{"size":9977,"mtime":1665074516782,"results":"1238","hashOfConfig":"1125"},{"size":593,"mtime":1665073876823,"results":"1239","hashOfConfig":"1125"},{"size":427,"mtime":1665074516774,"results":"1240","hashOfConfig":"1125"},{"size":772,"mtime":1665074516770,"results":"1241","hashOfConfig":"1125"},{"size":35,"mtime":1665074516706,"results":"1242","hashOfConfig":"1125"},{"size":373,"mtime":1665074516798,"results":"1243","hashOfConfig":"1125"},{"size":2283,"mtime":1665074516766,"results":"1244","hashOfConfig":"1125"},{"size":166,"mtime":1665074516774,"results":"1245","hashOfConfig":"1125"},{"size":783,"mtime":1665074516778,"results":"1246","hashOfConfig":"1125"},{"size":505,"mtime":1665074516770,"results":"1247","hashOfConfig":"1125"},{"size":1138,"mtime":1665074516702,"results":"1248","hashOfConfig":"1125"},{"size":817,"mtime":1665074516702,"results":"1249","hashOfConfig":"1125"},{"size":4949,"mtime":1665074516770,"results":"1250","hashOfConfig":"1125"},{"size":3620,"mtime":1665074516770,"results":"1251","hashOfConfig":"1125"},{"size":3594,"mtime":1665074516770,"results":"1252","hashOfConfig":"1125"},{"size":8575,"mtime":1665074516770,"results":"1253","hashOfConfig":"1125"},{"size":4510,"mtime":1665074516778,"results":"1254","hashOfConfig":"1125"},{"size":2788,"mtime":1665074516778,"results":"1255","hashOfConfig":"1125"},{"size":63,"mtime":1665073876855,"results":"1256","hashOfConfig":"1125"},{"size":51,"mtime":1665073876847,"results":"1257","hashOfConfig":"1125"},{"size":43,"mtime":1665073876847,"results":"1258","hashOfConfig":"1125"},{"size":45,"mtime":1665073876847,"results":"1259","hashOfConfig":"1125"},{"size":43,"mtime":1665073876847,"results":"1260","hashOfConfig":"1125"},{"size":35,"mtime":1665074516710,"results":"1261","hashOfConfig":"1125"},{"size":243,"mtime":1665073876827,"results":"1262","hashOfConfig":"1125"},{"size":997,"mtime":1665074516706,"results":"1263","hashOfConfig":"1125"},{"size":33,"mtime":1665074516706,"results":"1264","hashOfConfig":"1125"},{"size":63,"mtime":1665074516714,"results":"1265","hashOfConfig":"1125"},{"size":55,"mtime":1665074516714,"results":"1266","hashOfConfig":"1125"},{"size":59,"mtime":1665074516706,"results":"1267","hashOfConfig":"1125"},{"size":47,"mtime":1665074516710,"results":"1268","hashOfConfig":"1125"},{"size":53,"mtime":1665074516766,"results":"1269","hashOfConfig":"1125"},{"size":51,"mtime":1665074516706,"results":"1270","hashOfConfig":"1125"},{"size":57,"mtime":1665074516714,"results":"1271","hashOfConfig":"1125"},{"size":71,"mtime":1665074516714,"results":"1272","hashOfConfig":"1125"},{"size":35,"mtime":1665074516706,"results":"1273","hashOfConfig":"1125"},{"size":49,"mtime":1665074516710,"results":"1274","hashOfConfig":"1125"},{"size":139,"mtime":1665074516770,"results":"1275","hashOfConfig":"1125"},{"size":824,"mtime":1665074516778,"results":"1276","hashOfConfig":"1125"},{"size":250,"mtime":1665074516778,"results":"1277","hashOfConfig":"1125"},{"size":63,"mtime":1665074516714,"results":"1278","hashOfConfig":"1125"},{"size":41,"mtime":1665074516714,"results":"1279","hashOfConfig":"1125"},{"size":49,"mtime":1665074516714,"results":"1280","hashOfConfig":"1125"},{"size":69,"mtime":1665073876819,"results":"1281","hashOfConfig":"1125"},{"size":57,"mtime":1665074516714,"results":"1282","hashOfConfig":"1125"},{"size":63,"mtime":1665074516710,"results":"1283","hashOfConfig":"1125"},{"size":927,"mtime":1665074516706,"results":"1284","hashOfConfig":"1125"},{"size":808,"mtime":1665074516770,"results":"1285","hashOfConfig":"1125"},{"size":612,"mtime":1665074516710,"results":"1286","hashOfConfig":"1125"},{"size":878,"mtime":1665074516766,"results":"1287","hashOfConfig":"1125"},{"size":67,"mtime":1665074516706,"results":"1288","hashOfConfig":"1125"},{"size":894,"mtime":1665074516770,"results":"1289","hashOfConfig":"1125"},{"size":894,"mtime":1665074516770,"results":"1290","hashOfConfig":"1125"},{"size":627,"mtime":1665074516770,"results":"1291","hashOfConfig":"1125"},{"size":695,"mtime":1665074516766,"results":"1292","hashOfConfig":"1125"},{"size":682,"mtime":1665074516766,"results":"1293","hashOfConfig":"1125"},{"size":717,"mtime":1665073876847,"results":"1294","hashOfConfig":"1125"},{"size":1370,"mtime":1665074516706,"results":"1295","hashOfConfig":"1125"},{"size":57,"mtime":1665074516714,"results":"1296","hashOfConfig":"1125"},{"size":31,"mtime":1665073876819,"results":"1297","hashOfConfig":"1125"},{"size":529,"mtime":1665074516710,"results":"1298","hashOfConfig":"1125"},{"size":7061,"mtime":1665074516706,"results":"1299","hashOfConfig":"1125"},{"size":1187,"mtime":1665074516714,"results":"1300","hashOfConfig":"1125"},{"size":2180,"mtime":1665074516714,"results":"1301","hashOfConfig":"1125"},{"size":1758,"mtime":1665074516766,"results":"1302","hashOfConfig":"1125"},{"size":1021,"mtime":1665074516706,"results":"1303","hashOfConfig":"1125"},{"size":466,"mtime":1665074516710,"results":"1304","hashOfConfig":"1125"},{"size":983,"mtime":1665074516706,"results":"1305","hashOfConfig":"1125"},{"size":1198,"mtime":1665074516714,"results":"1306","hashOfConfig":"1125"},{"size":1054,"mtime":1665074516714,"results":"1307","hashOfConfig":"1125"},{"size":74,"mtime":1665073876855,"results":"1308","hashOfConfig":"1125"},{"size":1269,"mtime":1665074516730,"results":"1309","hashOfConfig":"1125"},{"size":2015,"mtime":1665074516714,"results":"1310","hashOfConfig":"1125"},{"size":1084,"mtime":1665074516714,"results":"1311","hashOfConfig":"1125"},{"size":1169,"mtime":1665074516714,"results":"1312","hashOfConfig":"1125"},{"size":1435,"mtime":1665074516714,"results":"1313","hashOfConfig":"1125"},{"size":2986,"mtime":1665074516714,"results":"1314","hashOfConfig":"1125"},{"size":2055,"mtime":1665074516710,"results":"1315","hashOfConfig":"1125"},{"size":194,"mtime":1665073876847,"results":"1316","hashOfConfig":"1125"},{"size":362,"mtime":1665073876847,"results":"1317","hashOfConfig":"1125"},{"size":124,"mtime":1665073876847,"results":"1318","hashOfConfig":"1125"},{"size":124,"mtime":1665073876847,"results":"1319","hashOfConfig":"1125"},{"size":613,"mtime":1665073876847,"results":"1320","hashOfConfig":"1125"},{"size":973,"mtime":1665074516706,"results":"1321","hashOfConfig":"1125"},{"size":55,"mtime":1665073876851,"results":"1322","hashOfConfig":"1125"},{"size":423,"mtime":1665074516710,"results":"1323","hashOfConfig":"1125"},{"size":2109,"mtime":1665073876823,"results":"1324","hashOfConfig":"1125"},{"size":852,"mtime":1665074516706,"results":"1325","hashOfConfig":"1125"},{"size":908,"mtime":1665074516714,"results":"1326","hashOfConfig":"1125"},{"size":1189,"mtime":1665074516766,"results":"1327","hashOfConfig":"1125"},{"size":720,"mtime":1665074516706,"results":"1328","hashOfConfig":"1125"},{"size":20601,"mtime":1665074516710,"results":"1329","hashOfConfig":"1125"},{"size":239,"mtime":1665074516710,"results":"1330","hashOfConfig":"1125"},{"size":631,"mtime":1665074516706,"results":"1331","hashOfConfig":"1125"},{"size":618,"mtime":1665074516710,"results":"1332","hashOfConfig":"1125"},{"size":963,"mtime":1665074516714,"results":"1333","hashOfConfig":"1125"},{"size":51,"mtime":1665073876851,"results":"1334","hashOfConfig":"1125"},{"size":45,"mtime":1665074516770,"results":"1335","hashOfConfig":"1125"},{"size":43,"mtime":1665073876851,"results":"1336","hashOfConfig":"1125"},{"size":2068,"mtime":1665074516714,"results":"1337","hashOfConfig":"1125"},{"size":1391,"mtime":1665074516714,"results":"1338","hashOfConfig":"1125"},{"size":771,"mtime":1665074516714,"results":"1339","hashOfConfig":"1125"},{"size":591,"mtime":1665074516714,"results":"1340","hashOfConfig":"1125"},{"size":1901,"mtime":1665074516714,"results":"1341","hashOfConfig":"1125"},{"size":75,"mtime":1665074516766,"results":"1342","hashOfConfig":"1125"},{"size":617,"mtime":1665074516774,"results":"1343","hashOfConfig":"1125"},{"size":47,"mtime":1665074516714,"results":"1344","hashOfConfig":"1125"},{"size":2214,"mtime":1665074516706,"results":"1345","hashOfConfig":"1125"},{"size":1017,"mtime":1665074516714,"results":"1346","hashOfConfig":"1125"},{"size":586,"mtime":1665074516710,"results":"1347","hashOfConfig":"1125"},{"size":403,"mtime":1665073876851,"results":"1348","hashOfConfig":"1125"},{"size":2916,"mtime":1665074516710,"results":"1349","hashOfConfig":"1125"},{"size":873,"mtime":1665074516770,"results":"1350","hashOfConfig":"1125"},{"size":722,"mtime":1665074516770,"results":"1351","hashOfConfig":"1125"},{"size":717,"mtime":1665073876851,"results":"1352","hashOfConfig":"1125"},{"size":207,"mtime":1665074516710,"results":"1353","hashOfConfig":"1125"},{"size":1310,"mtime":1665074516774,"results":"1354","hashOfConfig":"1125"},{"size":53,"mtime":1665073876847,"results":"1355","hashOfConfig":"1125"},{"size":364,"mtime":1665074516714,"results":"1356","hashOfConfig":"1125"},{"size":57,"mtime":1665074516710,"results":"1357","hashOfConfig":"1125"},{"size":3177,"mtime":1665074516766,"results":"1358","hashOfConfig":"1125"},{"size":404,"mtime":1665073876851,"results":"1359","hashOfConfig":"1125"},{"size":372,"mtime":1665074516710,"results":"1360","hashOfConfig":"1125"},{"size":806,"mtime":1665074516710,"results":"1361","hashOfConfig":"1125"},{"size":362,"mtime":1665074516770,"results":"1362","hashOfConfig":"1125"},{"size":287,"mtime":1665074516770,"results":"1363","hashOfConfig":"1125"},{"size":523,"mtime":1665074516770,"results":"1364","hashOfConfig":"1125"},{"size":613,"mtime":1665073876851,"results":"1365","hashOfConfig":"1125"},{"size":392,"mtime":1665073876855,"results":"1366","hashOfConfig":"1125"},{"size":1567,"mtime":1665074516766,"results":"1367","hashOfConfig":"1125"},{"size":331,"mtime":1665073876847,"results":"1368","hashOfConfig":"1125"},{"size":1705,"mtime":1665074516710,"results":"1369","hashOfConfig":"1125"},{"size":145,"mtime":1665073876847,"results":"1370","hashOfConfig":"1125"},{"size":1223,"mtime":1665074516710,"results":"1371","hashOfConfig":"1125"},{"size":521,"mtime":1665074516766,"results":"1372","hashOfConfig":"1125"},{"size":202,"mtime":1665073876871,"results":"1373","hashOfConfig":"1125"},{"size":53,"mtime":1665073876851,"results":"1374","hashOfConfig":"1125"},{"size":331,"mtime":1665073876851,"results":"1375","hashOfConfig":"1125"},{"size":145,"mtime":1665073876851,"results":"1376","hashOfConfig":"1125"},{"size":2090,"mtime":1665074516774,"results":"1377","hashOfConfig":"1125"},{"size":2374,"mtime":1665074516774,"results":"1378","hashOfConfig":"1125"},{"size":1534,"mtime":1665074516770,"results":"1379","hashOfConfig":"1125"},{"size":1410,"mtime":1665074516770,"results":"1380","hashOfConfig":"1125"},{"size":1957,"mtime":1665074516770,"results":"1381","hashOfConfig":"1125"},{"size":3500,"mtime":1665074516774,"results":"1382","hashOfConfig":"1125"},{"size":1965,"mtime":1665074516770,"results":"1383","hashOfConfig":"1125"},{"size":1943,"mtime":1665074516774,"results":"1384","hashOfConfig":"1125"},{"size":2343,"mtime":1665074516778,"results":"1385","hashOfConfig":"1125"},{"size":2546,"mtime":1665074516778,"results":"1386","hashOfConfig":"1125"},{"size":5458,"mtime":1665074516778,"results":"1387","hashOfConfig":"1125"},{"size":822,"mtime":1665074516778,"results":"1388","hashOfConfig":"1125"},{"size":3073,"mtime":1665074516774,"results":"1389","hashOfConfig":"1125"},{"size":2525,"mtime":1665074516770,"results":"1390","hashOfConfig":"1125"},{"size":5107,"mtime":1665074516774,"results":"1391","hashOfConfig":"1125"},{"size":4182,"mtime":1665074516774,"results":"1392","hashOfConfig":"1125"},{"size":3224,"mtime":1665074516774,"results":"1393","hashOfConfig":"1125"},{"size":2376,"mtime":1665074516770,"results":"1394","hashOfConfig":"1125"},{"size":2424,"mtime":1665074516770,"results":"1395","hashOfConfig":"1125"},{"size":4519,"mtime":1665074516778,"results":"1396","hashOfConfig":"1125"},{"size":7905,"mtime":1665074516778,"results":"1397","hashOfConfig":"1125"},{"size":5978,"mtime":1665074516778,"results":"1398","hashOfConfig":"1125"},{"size":3391,"mtime":1665074516778,"results":"1399","hashOfConfig":"1125"},{"size":2701,"mtime":1665074516774,"results":"1400","hashOfConfig":"1125"},{"size":3899,"mtime":1665074516730,"results":"1401","hashOfConfig":"1125"},{"size":108,"mtime":1665074516706,"results":"1402","hashOfConfig":"1125"},{"size":352,"mtime":1665074516770,"results":"1403","hashOfConfig":"1125"},{"size":856,"mtime":1665074516774,"results":"1404","hashOfConfig":"1125"},{"size":166,"mtime":1665074516770,"results":"1405","hashOfConfig":"1125"},{"size":373,"mtime":1665074516774,"results":"1406","hashOfConfig":"1125"},{"size":166,"mtime":1665074516770,"results":"1407","hashOfConfig":"1125"},{"size":214,"mtime":1665074516774,"results":"1408","hashOfConfig":"1125"},{"size":3131,"mtime":1665074516738,"results":"1409","hashOfConfig":"1125"},{"size":3146,"mtime":1665074516738,"results":"1410","hashOfConfig":"1125"},{"size":166,"mtime":1665074516770,"results":"1411","hashOfConfig":"1125"},{"size":893,"mtime":1665074516778,"results":"1412","hashOfConfig":"1125"},{"size":166,"mtime":1665074516774,"results":"1413","hashOfConfig":"1125"},{"size":1579,"mtime":1665074516778,"results":"1414","hashOfConfig":"1125"},{"size":1475,"mtime":1665074516778,"results":"1415","hashOfConfig":"1125"},{"size":810,"mtime":1665074516778,"results":"1416","hashOfConfig":"1125"},{"size":67,"mtime":1665074516718,"results":"1417","hashOfConfig":"1125"},{"size":54,"mtime":1665074516746,"results":"1418","hashOfConfig":"1125"},{"size":54,"mtime":1665074516762,"results":"1419","hashOfConfig":"1125"},{"size":51,"mtime":1665074516706,"results":"1420","hashOfConfig":"1125"},{"size":57,"mtime":1665074516730,"results":"1421","hashOfConfig":"1125"},{"size":57,"mtime":1665074516730,"results":"1422","hashOfConfig":"1125"},{"size":66,"mtime":1665074516798,"results":"1423","hashOfConfig":"1125"},{"size":69,"mtime":1665074516730,"results":"1424","hashOfConfig":"1125"},{"size":77,"mtime":1665074516738,"results":"1425","hashOfConfig":"1125"},{"size":67,"mtime":1665074516738,"results":"1426","hashOfConfig":"1125"},{"size":65,"mtime":1665074516738,"results":"1427","hashOfConfig":"1125"},{"size":69,"mtime":1665074516738,"results":"1428","hashOfConfig":"1125"},{"size":71,"mtime":1665074516738,"results":"1429","hashOfConfig":"1125"},{"size":65,"mtime":1665074516738,"results":"1430","hashOfConfig":"1125"},{"size":460,"mtime":1665073876831,"results":"1431","hashOfConfig":"1125"},{"size":53,"mtime":1665074516786,"results":"1432","hashOfConfig":"1125"},{"size":63,"mtime":1665074516786,"results":"1433","hashOfConfig":"1125"},{"size":53,"mtime":1665074516754,"results":"1434","hashOfConfig":"1125"},{"size":308,"mtime":1665074516786,"results":"1435","hashOfConfig":"1125"},{"size":432,"mtime":1665074516786,"results":"1436","hashOfConfig":"1125"},{"size":400,"mtime":1665074516798,"results":"1437","hashOfConfig":"1125"},{"size":1592,"mtime":1665074516738,"results":"1438","hashOfConfig":"1125"},{"size":1591,"mtime":1665074516738,"results":"1439","hashOfConfig":"1125"},{"size":2898,"mtime":1665074516738,"results":"1440","hashOfConfig":"1125"},{"size":3396,"mtime":1665074516738,"results":"1441","hashOfConfig":"1125"},{"size":51,"mtime":1665074516778,"results":"1442","hashOfConfig":"1125"},{"size":53,"mtime":1665074516778,"results":"1443","hashOfConfig":"1125"},{"size":49,"mtime":1665074516782,"results":"1444","hashOfConfig":"1125"},{"size":1311,"mtime":1665074516790,"results":"1445","hashOfConfig":"1125"},{"size":2588,"mtime":1665074516706,"results":"1446","hashOfConfig":"1125"},{"size":5827,"mtime":1665074516794,"results":"1447","hashOfConfig":"1125"},{"size":1807,"mtime":1665074516730,"results":"1448","hashOfConfig":"1125"},{"size":1936,"mtime":1665074516730,"results":"1449","hashOfConfig":"1125"},{"size":75,"mtime":1665074516730,"results":"1450","hashOfConfig":"1125"},{"size":73,"mtime":1665074516730,"results":"1451","hashOfConfig":"1125"},{"size":1592,"mtime":1665074516730,"results":"1452","hashOfConfig":"1125"},{"size":59,"mtime":1665074516786,"results":"1453","hashOfConfig":"1125"},{"size":4318,"mtime":1665074516798,"results":"1454","hashOfConfig":"1125"},{"size":55,"mtime":1665074516786,"results":"1455","hashOfConfig":"1125"},{"size":57,"mtime":1665074516786,"results":"1456","hashOfConfig":"1125"},{"size":3388,"mtime":1665074516738,"results":"1457","hashOfConfig":"1125"},{"size":3422,"mtime":1665074516738,"results":"1458","hashOfConfig":"1125"},{"size":3412,"mtime":1665074516738,"results":"1459","hashOfConfig":"1125"},{"size":1687,"mtime":1665074516738,"results":"1460","hashOfConfig":"1125"},{"size":5495,"mtime":1665074516738,"results":"1461","hashOfConfig":"1125"},{"size":2136,"mtime":1665074516738,"results":"1462","hashOfConfig":"1125"},{"size":928,"mtime":1665074516718,"results":"1463","hashOfConfig":"1125"},{"size":51,"mtime":1665074516798,"results":"1464","hashOfConfig":"1125"},{"size":49,"mtime":1665074516798,"results":"1465","hashOfConfig":"1125"},{"size":43,"mtime":1665074516798,"results":"1466","hashOfConfig":"1125"},{"size":59,"mtime":1665074516798,"results":"1467","hashOfConfig":"1125"},{"size":33,"mtime":1665074516798,"results":"1468","hashOfConfig":"1125"},{"size":45,"mtime":1665074516798,"results":"1469","hashOfConfig":"1125"},{"size":49,"mtime":1665074516798,"results":"1470","hashOfConfig":"1125"},{"size":4220,"mtime":1665074516786,"results":"1471","hashOfConfig":"1125"},{"size":3723,"mtime":1665074516786,"results":"1472","hashOfConfig":"1125"},{"size":73,"mtime":1665073876859,"results":"1473","hashOfConfig":"1125"},{"size":71,"mtime":1665073876859,"results":"1474","hashOfConfig":"1125"},{"size":59,"mtime":1665073876859,"results":"1475","hashOfConfig":"1125"},{"size":63,"mtime":1665073876859,"results":"1476","hashOfConfig":"1125"},{"size":53,"mtime":1665074516802,"results":"1477","hashOfConfig":"1125"},{"size":420,"mtime":1665074516730,"results":"1478","hashOfConfig":"1125"},{"size":3647,"mtime":1665074516754,"results":"1479","hashOfConfig":"1125"},{"size":61,"mtime":1665074516734,"results":"1480","hashOfConfig":"1125"},{"size":63,"mtime":1665074516738,"results":"1481","hashOfConfig":"1125"},{"size":63,"mtime":1665074516734,"results":"1482","hashOfConfig":"1125"},{"size":47,"mtime":1665074516738,"results":"1483","hashOfConfig":"1125"},{"size":3253,"mtime":1665074516730,"results":"1484","hashOfConfig":"1125"},{"size":47,"mtime":1665074516734,"results":"1485","hashOfConfig":"1125"},{"size":7515,"mtime":1665074516730,"results":"1486","hashOfConfig":"1125"},{"size":42,"mtime":1665074516726,"results":"1487","hashOfConfig":"1125"},{"size":51,"mtime":1665074516794,"results":"1488","hashOfConfig":"1125"},{"size":45,"mtime":1665074516714,"results":"1489","hashOfConfig":"1125"},{"size":67,"mtime":1665074516790,"results":"1490","hashOfConfig":"1125"},{"size":67,"mtime":1665074516790,"results":"1491","hashOfConfig":"1125"},{"size":53,"mtime":1665074516790,"results":"1492","hashOfConfig":"1125"},{"size":65,"mtime":1665074516790,"results":"1493","hashOfConfig":"1125"},{"size":59,"mtime":1665074516790,"results":"1494","hashOfConfig":"1125"},{"size":59,"mtime":1665074516794,"results":"1495","hashOfConfig":"1125"},{"size":53,"mtime":1665074516766,"results":"1496","hashOfConfig":"1125"},{"size":17277,"mtime":1665074516742,"results":"1497","hashOfConfig":"1125"},{"size":51,"mtime":1665074516706,"results":"1498","hashOfConfig":"1125"},{"size":1803,"mtime":1665074516734,"results":"1499","hashOfConfig":"1125"},{"size":57,"mtime":1665074516794,"results":"1500","hashOfConfig":"1125"},{"size":39,"mtime":1665074516798,"results":"1501","hashOfConfig":"1125"},{"size":45,"mtime":1665074516790,"results":"1502","hashOfConfig":"1125"},{"size":65,"mtime":1665074516794,"results":"1503","hashOfConfig":"1125"},{"size":59,"mtime":1665074516794,"results":"1504","hashOfConfig":"1125"},{"size":59,"mtime":1665074516794,"results":"1505","hashOfConfig":"1125"},{"size":67,"mtime":1665074516794,"results":"1506","hashOfConfig":"1125"},{"size":1834,"mtime":1665074516782,"results":"1507","hashOfConfig":"1125"},{"size":4581,"mtime":1665074516778,"results":"1508","hashOfConfig":"1125"},{"size":3642,"mtime":1665074516778,"results":"1509","hashOfConfig":"1125"},{"size":61,"mtime":1665074516794,"results":"1510","hashOfConfig":"1125"},{"size":45,"mtime":1665074516794,"results":"1511","hashOfConfig":"1125"},{"size":59,"mtime":1665074516790,"results":"1512","hashOfConfig":"1125"},{"size":57,"mtime":1665074516790,"results":"1513","hashOfConfig":"1125"},{"size":53,"mtime":1665074516790,"results":"1514","hashOfConfig":"1125"},{"size":445,"mtime":1665074516746,"results":"1515","hashOfConfig":"1125"},{"size":427,"mtime":1665074516766,"results":"1516","hashOfConfig":"1125"},{"size":42,"mtime":1665074516762,"results":"1517","hashOfConfig":"1125"},{"size":399,"mtime":1665074516706,"results":"1518","hashOfConfig":"1125"},{"size":45,"mtime":1665074516758,"results":"1519","hashOfConfig":"1125"},{"size":69,"mtime":1665074516738,"results":"1520","hashOfConfig":"1125"},{"size":415,"mtime":1665074516730,"results":"1521","hashOfConfig":"1125"},{"size":61,"mtime":1665074516738,"results":"1522","hashOfConfig":"1125"},{"size":65,"mtime":1665074516794,"results":"1523","hashOfConfig":"1125"},{"size":59,"mtime":1665074516794,"results":"1524","hashOfConfig":"1125"},{"size":45,"mtime":1665074516794,"results":"1525","hashOfConfig":"1125"},{"size":67,"mtime":1665074516794,"results":"1526","hashOfConfig":"1125"},{"size":1130,"mtime":1665074516730,"results":"1527","hashOfConfig":"1125"},{"size":52,"mtime":1665074516746,"results":"1528","hashOfConfig":"1125"},{"size":1888,"mtime":1665074516798,"results":"1529","hashOfConfig":"1125"},{"size":1108,"mtime":1665074516730,"results":"1530","hashOfConfig":"1125"},{"size":1511,"mtime":1665074516738,"results":"1531","hashOfConfig":"1125"},{"size":307,"mtime":1665074516738,"results":"1532","hashOfConfig":"1125"},{"size":941,"mtime":1665074516786,"results":"1533","hashOfConfig":"1125"},{"size":68,"mtime":1665074516706,"results":"1534","hashOfConfig":"1125"},{"size":3969,"mtime":1665074516730,"results":"1535","hashOfConfig":"1125"},{"size":681,"mtime":1665074516754,"results":"1536","hashOfConfig":"1125"},{"size":4783,"mtime":1665074516786,"results":"1537","hashOfConfig":"1125"},{"size":4704,"mtime":1665074516786,"results":"1538","hashOfConfig":"1125"},{"size":4648,"mtime":1665074516786,"results":"1539","hashOfConfig":"1125"},{"size":1332,"mtime":1665074516738,"results":"1540","hashOfConfig":"1125"},{"size":3173,"mtime":1665074516730,"results":"1541","hashOfConfig":"1125"},{"size":55,"mtime":1665074516738,"results":"1542","hashOfConfig":"1125"},{"size":3944,"mtime":1665074516802,"results":"1543","hashOfConfig":"1125"},{"size":3630,"mtime":1665074516786,"results":"1544","hashOfConfig":"1125"},{"size":8825,"mtime":1665074516786,"results":"1545","hashOfConfig":"1125"},{"size":8291,"mtime":1665074516786,"results":"1546","hashOfConfig":"1125"},{"size":6818,"mtime":1665074516786,"results":"1547","hashOfConfig":"1125"},{"size":6477,"mtime":1665074516742,"results":"1548","hashOfConfig":"1125"},{"size":544,"mtime":1665074516730,"results":"1549","hashOfConfig":"1125"},{"size":5711,"mtime":1665074516798,"results":"1550","hashOfConfig":"1125"},{"size":6178,"mtime":1665074516798,"results":"1551","hashOfConfig":"1125"},{"size":6626,"mtime":1665074516798,"results":"1552","hashOfConfig":"1125"},{"size":3017,"mtime":1665074516798,"results":"1553","hashOfConfig":"1125"},{"size":2795,"mtime":1665074516798,"results":"1554","hashOfConfig":"1125"},{"size":61,"mtime":1665074516742,"results":"1555","hashOfConfig":"1125"},{"size":59,"mtime":1665074516742,"results":"1556","hashOfConfig":"1125"},{"size":51,"mtime":1665074516742,"results":"1557","hashOfConfig":"1125"},{"size":49,"mtime":1665074516742,"results":"1558","hashOfConfig":"1125"},{"size":575,"mtime":1665074516726,"results":"1559","hashOfConfig":"1125"},{"size":3258,"mtime":1665074516794,"results":"1560","hashOfConfig":"1125"},{"size":261,"mtime":1665073876839,"results":"1561","hashOfConfig":"1125"},{"size":4511,"mtime":1665074516734,"results":"1562","hashOfConfig":"1125"},{"size":3752,"mtime":1665074516738,"results":"1563","hashOfConfig":"1125"},{"size":1552,"mtime":1665074516734,"results":"1564","hashOfConfig":"1125"},{"size":823,"mtime":1665074516714,"results":"1565","hashOfConfig":"1125"},{"size":1791,"mtime":1665074516738,"results":"1566","hashOfConfig":"1125"},{"size":4408,"mtime":1665074516794,"results":"1567","hashOfConfig":"1125"},{"size":587,"mtime":1665074516706,"results":"1568","hashOfConfig":"1125"},{"size":775,"mtime":1665074516778,"results":"1569","hashOfConfig":"1125"},{"size":3008,"mtime":1665074516766,"results":"1570","hashOfConfig":"1125"},{"size":1157,"mtime":1665074516778,"results":"1571","hashOfConfig":"1125"},{"size":1468,"mtime":1665074516778,"results":"1572","hashOfConfig":"1125"},{"size":4174,"mtime":1665074516794,"results":"1573","hashOfConfig":"1125"},{"size":4760,"mtime":1665074516790,"results":"1574","hashOfConfig":"1125"},{"size":3474,"mtime":1665074516790,"results":"1575","hashOfConfig":"1125"},{"size":4352,"mtime":1665074516790,"results":"1576","hashOfConfig":"1125"},{"size":5493,"mtime":1665074516790,"results":"1577","hashOfConfig":"1125"},{"size":857,"mtime":1665074516798,"results":"1578","hashOfConfig":"1125"},{"size":3915,"mtime":1665074516790,"results":"1579","hashOfConfig":"1125"},{"size":4502,"mtime":1665074516790,"results":"1580","hashOfConfig":"1125"},{"size":5230,"mtime":1665074516734,"results":"1581","hashOfConfig":"1125"},{"size":5343,"mtime":1665074516794,"results":"1582","hashOfConfig":"1125"},{"size":5313,"mtime":1665074516794,"results":"1583","hashOfConfig":"1125"},{"size":485,"mtime":1665074516762,"results":"1584","hashOfConfig":"1125"},{"size":4625,"mtime":1665074516794,"results":"1585","hashOfConfig":"1125"},{"size":5190,"mtime":1665074516794,"results":"1586","hashOfConfig":"1125"},{"size":851,"mtime":1665074516734,"results":"1587","hashOfConfig":"1125"},{"size":4413,"mtime":1665074516738,"results":"1588","hashOfConfig":"1125"},{"size":1860,"mtime":1665074516758,"results":"1589","hashOfConfig":"1125"},{"size":430,"mtime":1665074516746,"results":"1590","hashOfConfig":"1125"},{"size":7895,"mtime":1665074516794,"results":"1591","hashOfConfig":"1125"},{"size":5683,"mtime":1665074516794,"results":"1592","hashOfConfig":"1125"},{"size":5363,"mtime":1665074516794,"results":"1593","hashOfConfig":"1125"},{"size":4773,"mtime":1665074516794,"results":"1594","hashOfConfig":"1125"},{"size":7111,"mtime":1665074516794,"results":"1595","hashOfConfig":"1125"},{"size":4640,"mtime":1665074516738,"results":"1596","hashOfConfig":"1125"},{"size":51,"mtime":1665074516742,"results":"1597","hashOfConfig":"1125"},{"size":754,"mtime":1665074516730,"results":"1598","hashOfConfig":"1125"},{"size":14869,"mtime":1665074516726,"results":"1599","hashOfConfig":"1125"},{"size":1167,"mtime":1665074516798,"results":"1600","hashOfConfig":"1125"},{"size":5795,"mtime":1665074516798,"results":"1601","hashOfConfig":"1125"},{"size":1365,"mtime":1665074516786,"results":"1602","hashOfConfig":"1125"},{"size":5606,"mtime":1665074516790,"results":"1603","hashOfConfig":"1125"},{"size":77,"mtime":1665074516742,"results":"1604","hashOfConfig":"1125"},{"size":512,"mtime":1665074516798,"results":"1605","hashOfConfig":"1125"},{"size":53,"mtime":1665074516738,"results":"1606","hashOfConfig":"1125"},{"size":47,"mtime":1665074516738,"results":"1607","hashOfConfig":"1125"},{"size":8089,"mtime":1665074516758,"results":"1608","hashOfConfig":"1125"},{"size":623,"mtime":1665074516702,"results":"1609","hashOfConfig":"1125"},{"size":188,"mtime":1665074516738,"results":"1610","hashOfConfig":"1125"},{"size":459,"mtime":1665074516714,"results":"1611","hashOfConfig":"1125"},{"size":1321,"mtime":1665074516718,"results":"1612","hashOfConfig":"1125"},{"size":1511,"mtime":1665074516738,"results":"1613","hashOfConfig":"1125"},{"size":1059,"mtime":1665074516706,"results":"1614","hashOfConfig":"1125"},{"size":2737,"mtime":1665074516738,"results":"1615","hashOfConfig":"1125"},{"size":428,"mtime":1665074516706,"results":"1616","hashOfConfig":"1125"},{"size":55,"mtime":1665074516742,"results":"1617","hashOfConfig":"1125"},{"size":59,"mtime":1665074516742,"results":"1618","hashOfConfig":"1125"},{"size":917,"mtime":1665074516766,"results":"1619","hashOfConfig":"1125"},{"size":483,"mtime":1665074516734,"results":"1620","hashOfConfig":"1125"},{"size":707,"mtime":1665074516798,"results":"1621","hashOfConfig":"1125"},{"size":4918,"mtime":1665074516726,"results":"1622","hashOfConfig":"1125"},{"size":61,"mtime":1665074516778,"results":"1623","hashOfConfig":"1125"},{"size":41,"mtime":1665074516778,"results":"1624","hashOfConfig":"1125"},{"size":896,"mtime":1665074516794,"results":"1625","hashOfConfig":"1125"},{"size":357,"mtime":1665074516734,"results":"1626","hashOfConfig":"1125"},{"size":43,"mtime":1665074516746,"results":"1627","hashOfConfig":"1125"},{"size":67,"mtime":1665074516746,"results":"1628","hashOfConfig":"1125"},{"size":71,"mtime":1665074516746,"results":"1629","hashOfConfig":"1125"},{"size":63,"mtime":1665074516742,"results":"1630","hashOfConfig":"1125"},{"size":77,"mtime":1665074516746,"results":"1631","hashOfConfig":"1125"},{"size":55,"mtime":1665074516766,"results":"1632","hashOfConfig":"1125"},{"size":51,"mtime":1665074516762,"results":"1633","hashOfConfig":"1125"},{"size":488,"mtime":1665074516790,"results":"1634","hashOfConfig":"1125"},{"size":1236,"mtime":1665074516758,"results":"1635","hashOfConfig":"1125"},{"size":45,"mtime":1665074516762,"results":"1636","hashOfConfig":"1125"},{"size":51,"mtime":1665074516762,"results":"1637","hashOfConfig":"1125"},{"size":2854,"mtime":1665074516794,"results":"1638","hashOfConfig":"1125"},{"size":59,"mtime":1665074516762,"results":"1639","hashOfConfig":"1125"},{"size":44,"mtime":1665073876819,"results":"1640","hashOfConfig":"1125"},{"size":552,"mtime":1665074516738,"results":"1641","hashOfConfig":"1125"},{"size":45,"mtime":1665074516762,"results":"1642","hashOfConfig":"1125"},{"size":49,"mtime":1665074516762,"results":"1643","hashOfConfig":"1125"},{"size":46,"mtime":1665074516762,"results":"1644","hashOfConfig":"1125"},{"size":45,"mtime":1665074516762,"results":"1645","hashOfConfig":"1125"},{"size":43,"mtime":1665074516742,"results":"1646","hashOfConfig":"1125"},{"size":51,"mtime":1665074516742,"results":"1647","hashOfConfig":"1125"},{"size":331,"mtime":1665073876827,"results":"1648","hashOfConfig":"1125"},{"size":5943,"mtime":1665074516726,"results":"1649","hashOfConfig":"1125"},{"size":2250,"mtime":1665074516798,"results":"1650","hashOfConfig":"1125"},{"size":45,"mtime":1665074516746,"results":"1651","hashOfConfig":"1125"},{"size":1223,"mtime":1665074516790,"results":"1652","hashOfConfig":"1125"},{"size":4098,"mtime":1665074516742,"results":"1653","hashOfConfig":"1125"},{"size":2888,"mtime":1665074516790,"results":"1654","hashOfConfig":"1125"},{"size":5293,"mtime":1665074516786,"results":"1655","hashOfConfig":"1125"},{"size":4160,"mtime":1665074516758,"results":"1656","hashOfConfig":"1125"},{"size":61,"mtime":1665074516726,"results":"1657","hashOfConfig":"1125"},{"size":355,"mtime":1665074516714,"results":"1658","hashOfConfig":"1125"},{"size":358,"mtime":1665074516738,"results":"1659","hashOfConfig":"1125"},{"size":2755,"mtime":1665074516746,"results":"1660","hashOfConfig":"1125"},{"size":9944,"mtime":1665074516806,"results":"1661","hashOfConfig":"1125"},{"size":406,"mtime":1665074516786,"results":"1662","hashOfConfig":"1125"},{"size":2542,"mtime":1665074516738,"results":"1663","hashOfConfig":"1125"},{"size":475,"mtime":1665074516738,"results":"1664","hashOfConfig":"1125"},{"size":1195,"mtime":1665074516794,"results":"1665","hashOfConfig":"1125"},{"size":3144,"mtime":1665074516738,"results":"1666","hashOfConfig":"1125"},{"size":508,"mtime":1665074516702,"results":"1667","hashOfConfig":"1125"},{"size":5548,"mtime":1665074516738,"results":"1668","hashOfConfig":"1125"},{"size":4787,"mtime":1665074516742,"results":"1669","hashOfConfig":"1125"},{"size":3858,"mtime":1665074516742,"results":"1670","hashOfConfig":"1125"},{"size":1809,"mtime":1665074516726,"results":"1671","hashOfConfig":"1125"},{"size":240,"mtime":1665074516702,"results":"1672","hashOfConfig":"1125"},{"size":187,"mtime":1665074516794,"results":"1673","hashOfConfig":"1125"},{"size":409,"mtime":1665074516790,"results":"1674","hashOfConfig":"1125"},{"size":409,"mtime":1665074516794,"results":"1675","hashOfConfig":"1125"},{"size":368,"mtime":1665074516794,"results":"1676","hashOfConfig":"1125"},{"size":2609,"mtime":1665074516778,"results":"1677","hashOfConfig":"1125"},{"size":3314,"mtime":1665074516778,"results":"1678","hashOfConfig":"1125"},{"size":48,"mtime":1665073876863,"results":"1679","hashOfConfig":"1125"},{"size":2936,"mtime":1665074516746,"results":"1680","hashOfConfig":"1125"},{"size":3519,"mtime":1665074516746,"results":"1681","hashOfConfig":"1125"},{"size":4266,"mtime":1665074516742,"results":"1682","hashOfConfig":"1125"},{"size":2379,"mtime":1665074516746,"results":"1683","hashOfConfig":"1125"},{"size":1319,"mtime":1665074516746,"results":"1684","hashOfConfig":"1125"},{"size":3751,"mtime":1665074516762,"results":"1685","hashOfConfig":"1125"},{"size":3506,"mtime":1665074516742,"results":"1686","hashOfConfig":"1125"},{"size":5746,"mtime":1665074516766,"results":"1687","hashOfConfig":"1125"},{"size":505,"mtime":1665074516798,"results":"1688","hashOfConfig":"1125"},{"size":3091,"mtime":1665074516798,"results":"1689","hashOfConfig":"1125"},{"size":1647,"mtime":1665074516734,"results":"1690","hashOfConfig":"1125"},{"size":4090,"mtime":1665074516742,"results":"1691","hashOfConfig":"1125"},{"size":3938,"mtime":1665074516742,"results":"1692","hashOfConfig":"1125"},{"size":1386,"mtime":1665074516762,"results":"1693","hashOfConfig":"1125"},{"size":4091,"mtime":1665074516742,"results":"1694","hashOfConfig":"1125"},{"size":971,"mtime":1665074516798,"results":"1695","hashOfConfig":"1125"},{"size":471,"mtime":1665074516798,"results":"1696","hashOfConfig":"1125"},{"size":410,"mtime":1665074516794,"results":"1697","hashOfConfig":"1125"},{"size":3007,"mtime":1665074516762,"results":"1698","hashOfConfig":"1125"},{"size":5564,"mtime":1665074516762,"results":"1699","hashOfConfig":"1125"},{"size":711,"mtime":1665074516710,"results":"1700","hashOfConfig":"1125"},{"size":176,"mtime":1665074516742,"results":"1701","hashOfConfig":"1125"},{"size":5009,"mtime":1665074516742,"results":"1702","hashOfConfig":"1125"},{"size":4670,"mtime":1665074516742,"results":"1703","hashOfConfig":"1125"},{"size":4938,"mtime":1665074516762,"results":"1704","hashOfConfig":"1125"},{"size":2192,"mtime":1665074516786,"results":"1705","hashOfConfig":"1125"},{"size":6803,"mtime":1665074516762,"results":"1706","hashOfConfig":"1125"},{"size":3729,"mtime":1665074516762,"results":"1707","hashOfConfig":"1125"},{"size":6898,"mtime":1665074516762,"results":"1708","hashOfConfig":"1125"},{"size":49,"mtime":1665074516710,"results":"1709","hashOfConfig":"1125"},{"size":79,"mtime":1665074516710,"results":"1710","hashOfConfig":"1125"},{"size":5259,"mtime":1665074516746,"results":"1711","hashOfConfig":"1125"},{"size":759,"mtime":1665073876859,"results":"1712","hashOfConfig":"1125"},{"size":41,"mtime":1665074516710,"results":"1713","hashOfConfig":"1125"},{"size":624,"mtime":1665074516738,"results":"1714","hashOfConfig":"1125"},{"size":4102,"mtime":1665074516806,"results":"1715","hashOfConfig":"1125"},{"size":176,"mtime":1665074516738,"results":"1716","hashOfConfig":"1125"},{"size":1104,"mtime":1665074516726,"results":"1717","hashOfConfig":"1125"},{"size":949,"mtime":1665074516738,"results":"1718","hashOfConfig":"1125"},{"size":188,"mtime":1665074516742,"results":"1719","hashOfConfig":"1125"},{"size":39,"mtime":1665074516730,"results":"1720","hashOfConfig":"1125"},{"size":47,"mtime":1665074516714,"results":"1721","hashOfConfig":"1125"},{"size":282,"mtime":1665074516790,"results":"1722","hashOfConfig":"1125"},{"size":49,"mtime":1665074516734,"results":"1723","hashOfConfig":"1125"},{"size":197,"mtime":1665074516790,"results":"1724","hashOfConfig":"1125"},{"size":188,"mtime":1665074516742,"results":"1725","hashOfConfig":"1125"},{"size":994,"mtime":1665073876859,"results":"1726","hashOfConfig":"1125"},{"size":1061,"mtime":1665074516778,"results":"1727","hashOfConfig":"1125"},{"size":67,"mtime":1665074516790,"results":"1728","hashOfConfig":"1125"},{"size":200,"mtime":1665074516790,"results":"1729","hashOfConfig":"1125"},{"size":145,"mtime":1665074516790,"results":"1730","hashOfConfig":"1125"},{"size":67,"mtime":1665074516790,"results":"1731","hashOfConfig":"1125"},{"size":846,"mtime":1665074516778,"results":"1732","hashOfConfig":"1125"},{"size":357,"mtime":1665074516742,"results":"1733","hashOfConfig":"1125"},{"size":400,"mtime":1665074516746,"results":"1734","hashOfConfig":"1125"},{"size":47,"mtime":1665074516718,"results":"1735","hashOfConfig":"1125"},{"size":51,"mtime":1665074516718,"results":"1736","hashOfConfig":"1125"},{"size":893,"mtime":1665074516762,"results":"1737","hashOfConfig":"1125"},{"size":37,"mtime":1665074516790,"results":"1738","hashOfConfig":"1125"},{"size":748,"mtime":1665074516742,"results":"1739","hashOfConfig":"1125"},{"size":124,"mtime":1665074516742,"results":"1740","hashOfConfig":"1125"},{"size":1504,"mtime":1665074516742,"results":"1741","hashOfConfig":"1125"},{"size":57,"mtime":1665074516762,"results":"1742","hashOfConfig":"1125"},{"size":912,"mtime":1665074516742,"results":"1743","hashOfConfig":"1125"},{"size":916,"mtime":1665074516762,"results":"1744","hashOfConfig":"1125"},{"size":138,"mtime":1665073876839,"results":"1745","hashOfConfig":"1125"},{"size":2824,"mtime":1665074516746,"results":"1746","hashOfConfig":"1125"},{"size":1810,"mtime":1665073876819,"results":"1747","hashOfConfig":"1125"},{"size":53,"mtime":1665074516730,"results":"1748","hashOfConfig":"1125"},{"size":1684,"mtime":1665074516710,"results":"1749","hashOfConfig":"1125"},{"size":1725,"mtime":1665074516710,"results":"1750","hashOfConfig":"1125"},{"size":534,"mtime":1665074516762,"results":"1751","hashOfConfig":"1125"},{"size":47,"mtime":1665074516730,"results":"1752","hashOfConfig":"1125"},{"size":493,"mtime":1665074516710,"results":"1753","hashOfConfig":"1125"},{"size":427,"mtime":1665074516710,"results":"1754","hashOfConfig":"1125"},{"size":47,"mtime":1665074516722,"results":"1755","hashOfConfig":"1125"},{"size":572,"mtime":1665074516762,"results":"1756","hashOfConfig":"1125"},{"size":599,"mtime":1665074516742,"results":"1757","hashOfConfig":"1125"},{"size":67,"mtime":1665074516794,"results":"1758","hashOfConfig":"1125"},{"size":755,"mtime":1665074516762,"results":"1759","hashOfConfig":"1125"},{"size":990,"mtime":1665074516762,"results":"1760","hashOfConfig":"1125"},{"size":43,"mtime":1665074516706,"results":"1761","hashOfConfig":"1125"},{"size":1093,"mtime":1665074516730,"results":"1762","hashOfConfig":"1125"},{"size":5473,"mtime":1665074516714,"results":"1763","hashOfConfig":"1125"},{"size":1343,"mtime":1665074516730,"results":"1764","hashOfConfig":"1125"},{"size":3064,"mtime":1665074516790,"results":"1765","hashOfConfig":"1125"},{"size":3799,"mtime":1665074516790,"results":"1766","hashOfConfig":"1125"},{"size":602,"mtime":1665074516762,"results":"1767","hashOfConfig":"1125"},{"size":1027,"mtime":1665074516734,"results":"1768","hashOfConfig":"1125"},{"size":738,"mtime":1665074516762,"results":"1769","hashOfConfig":"1125"},{"size":781,"mtime":1665073876835,"results":"1770","hashOfConfig":"1125"},{"size":861,"mtime":1665074516746,"results":"1771","hashOfConfig":"1125"},{"size":933,"mtime":1665074516746,"results":"1772","hashOfConfig":"1125"},{"size":1588,"mtime":1665074516718,"results":"1773","hashOfConfig":"1125"},{"size":3177,"mtime":1665074516718,"results":"1774","hashOfConfig":"1125"},{"size":646,"mtime":1665074516790,"results":"1775","hashOfConfig":"1125"},{"size":4729,"mtime":1665074516766,"results":"1776","hashOfConfig":"1125"},{"size":851,"mtime":1665074516766,"results":"1777","hashOfConfig":"1125"},{"size":239,"mtime":1665074516746,"results":"1778","hashOfConfig":"1125"},{"size":698,"mtime":1665074516762,"results":"1779","hashOfConfig":"1125"},{"size":87,"mtime":1665074516718,"results":"1780","hashOfConfig":"1125"},{"size":37,"mtime":1665074516710,"results":"1781","hashOfConfig":"1125"},{"size":439,"mtime":1665074516806,"results":"1782","hashOfConfig":"1125"},{"size":290,"mtime":1665073876859,"results":"1783","hashOfConfig":"1125"},{"size":51,"mtime":1665074516798,"results":"1784","hashOfConfig":"1125"},{"size":45,"mtime":1665074516798,"results":"1785","hashOfConfig":"1125"},{"size":41,"mtime":1665074516794,"results":"1786","hashOfConfig":"1125"},{"size":53,"mtime":1665074516798,"results":"1787","hashOfConfig":"1125"},{"size":918,"mtime":1665074516802,"results":"1788","hashOfConfig":"1125"},{"size":41,"mtime":1665074516706,"results":"1789","hashOfConfig":"1125"},{"size":856,"mtime":1665074516786,"results":"1790","hashOfConfig":"1125"},{"size":77,"mtime":1665073876859,"results":"1791","hashOfConfig":"1125"},{"size":383,"mtime":1665074516710,"results":"1792","hashOfConfig":"1125"},{"size":47,"mtime":1665073876859,"results":"1793","hashOfConfig":"1125"},{"size":259,"mtime":1665074516710,"results":"1794","hashOfConfig":"1125"},{"size":835,"mtime":1665074516730,"results":"1795","hashOfConfig":"1125"},{"size":35,"mtime":1665074516734,"results":"1796","hashOfConfig":"1125"},{"size":53,"mtime":1665074516734,"results":"1797","hashOfConfig":"1125"},{"size":53,"mtime":1665073876859,"results":"1798","hashOfConfig":"1125"},{"size":445,"mtime":1665074516710,"results":"1799","hashOfConfig":"1125"},{"size":1452,"mtime":1665074516730,"results":"1800","hashOfConfig":"1125"},{"size":3869,"mtime":1665074516706,"results":"1801","hashOfConfig":"1125"},{"size":1073,"mtime":1665074516730,"results":"1802","hashOfConfig":"1125"},{"size":1324,"mtime":1665074516730,"results":"1803","hashOfConfig":"1125"},{"size":778,"mtime":1665074516722,"results":"1804","hashOfConfig":"1125"},{"size":1263,"mtime":1665074516714,"results":"1805","hashOfConfig":"1125"},{"size":4624,"mtime":1665074516794,"results":"1806","hashOfConfig":"1125"},{"size":4003,"mtime":1665074516790,"results":"1807","hashOfConfig":"1125"},{"size":6850,"mtime":1665074516790,"results":"1808","hashOfConfig":"1125"},{"size":970,"mtime":1665074516706,"results":"1809","hashOfConfig":"1125"},{"size":5497,"mtime":1665074516790,"results":"1810","hashOfConfig":"1125"},{"size":5212,"mtime":1665074516794,"results":"1811","hashOfConfig":"1125"},{"size":5127,"mtime":1665074516794,"results":"1812","hashOfConfig":"1125"},{"size":5828,"mtime":1665074516798,"results":"1813","hashOfConfig":"1125"},{"size":5787,"mtime":1665074516798,"results":"1814","hashOfConfig":"1125"},{"size":6296,"mtime":1665074516730,"results":"1815","hashOfConfig":"1125"},{"size":700,"mtime":1665074516718,"results":"1816","hashOfConfig":"1125"},{"size":572,"mtime":1665074516790,"results":"1817","hashOfConfig":"1125"},{"size":1996,"mtime":1665074516766,"results":"1818","hashOfConfig":"1125"},{"size":1904,"mtime":1665074516718,"results":"1819","hashOfConfig":"1125"},{"size":53,"mtime":1665074516762,"results":"1820","hashOfConfig":"1125"},{"size":1735,"mtime":1665074516750,"results":"1821","hashOfConfig":"1125"},{"size":470,"mtime":1665074516762,"results":"1822","hashOfConfig":"1125"},{"size":59,"mtime":1665074516762,"results":"1823","hashOfConfig":"1125"},{"size":49,"mtime":1665074516758,"results":"1824","hashOfConfig":"1125"},{"size":63,"mtime":1665074516734,"results":"1825","hashOfConfig":"1125"},{"size":55,"mtime":1665074516746,"results":"1826","hashOfConfig":"1125"},{"size":41,"mtime":1665074516714,"results":"1827","hashOfConfig":"1125"},{"size":863,"mtime":1665074516718,"results":"1828","hashOfConfig":"1125"},{"size":55,"mtime":1665074516762,"results":"1829","hashOfConfig":"1125"},{"size":1158,"mtime":1665074516798,"results":"1830","hashOfConfig":"1125"},{"size":1426,"mtime":1665074516794,"results":"1831","hashOfConfig":"1125"},{"size":1022,"mtime":1665074516706,"results":"1832","hashOfConfig":"1125"},{"size":1452,"mtime":1665074516798,"results":"1833","hashOfConfig":"1125"},{"size":620,"mtime":1665074516798,"results":"1834","hashOfConfig":"1125"},{"size":65,"mtime":1665074516706,"results":"1835","hashOfConfig":"1125"},{"size":551,"mtime":1665074516730,"results":"1836","hashOfConfig":"1125"},{"size":81,"mtime":1665074516762,"results":"1837","hashOfConfig":"1125"},{"size":3417,"mtime":1665074516786,"results":"1838","hashOfConfig":"1125"},{"size":1681,"mtime":1665073876831,"results":"1839","hashOfConfig":"1125"},{"size":2504,"mtime":1665074516786,"results":"1840","hashOfConfig":"1125"},{"size":71,"mtime":1665074516746,"results":"1841","hashOfConfig":"1125"},{"size":71,"mtime":1665074516746,"results":"1842","hashOfConfig":"1125"},{"size":51,"mtime":1665074516758,"results":"1843","hashOfConfig":"1125"},{"size":49,"mtime":1665074516710,"results":"1844","hashOfConfig":"1125"},{"size":4186,"mtime":1665074516786,"results":"1845","hashOfConfig":"1125"},{"size":51,"mtime":1665074516734,"results":"1846","hashOfConfig":"1125"},{"size":55,"mtime":1665074516734,"results":"1847","hashOfConfig":"1125"},{"size":55,"mtime":1665074516734,"results":"1848","hashOfConfig":"1125"},{"size":3826,"mtime":1665074516706,"results":"1849","hashOfConfig":"1125"},{"size":59,"mtime":1665074516762,"results":"1850","hashOfConfig":"1125"},{"size":51,"mtime":1665074516758,"results":"1851","hashOfConfig":"1125"},{"size":143,"mtime":1665074516706,"results":"1852","hashOfConfig":"1125"},{"size":794,"mtime":1665074516722,"results":"1853","hashOfConfig":"1125"},{"size":1888,"mtime":1665074516798,"results":"1854","hashOfConfig":"1125"},{"size":1505,"mtime":1665074516798,"results":"1855","hashOfConfig":"1125"},{"size":1727,"mtime":1665074516790,"results":"1856","hashOfConfig":"1125"},{"size":207,"mtime":1665074516790,"results":"1857","hashOfConfig":"1125"},{"size":454,"mtime":1665074516730,"results":"1858","hashOfConfig":"1125"},{"size":207,"mtime":1665074516790,"results":"1859","hashOfConfig":"1125"},{"size":51,"mtime":1665074516722,"results":"1860","hashOfConfig":"1125"},{"size":53,"mtime":1665074516734,"results":"1861","hashOfConfig":"1125"},{"size":71,"mtime":1665074516762,"results":"1862","hashOfConfig":"1125"},{"size":760,"mtime":1665074516762,"results":"1863","hashOfConfig":"1125"},{"size":420,"mtime":1665074516762,"results":"1864","hashOfConfig":"1125"},{"size":1181,"mtime":1665074516758,"results":"1865","hashOfConfig":"1125"},{"size":356,"mtime":1665074516718,"results":"1866","hashOfConfig":"1125"},{"size":4169,"mtime":1665074516758,"results":"1867","hashOfConfig":"1125"},{"size":1123,"mtime":1665074516798,"results":"1868","hashOfConfig":"1125"},{"size":1241,"mtime":1665074516794,"results":"1869","hashOfConfig":"1125"},{"size":322,"mtime":1665074516782,"results":"1870","hashOfConfig":"1125"},{"size":703,"mtime":1665074516798,"results":"1871","hashOfConfig":"1125"},{"size":384,"mtime":1665074516798,"results":"1872","hashOfConfig":"1125"},{"size":4797,"mtime":1665074516782,"results":"1873","hashOfConfig":"1125"},{"size":472,"mtime":1665074516714,"results":"1874","hashOfConfig":"1125"},{"size":762,"mtime":1665074516746,"results":"1875","hashOfConfig":"1125"},{"size":3115,"mtime":1665074516782,"results":"1876","hashOfConfig":"1125"},{"size":67,"mtime":1665073876823,"results":"1877","hashOfConfig":"1125"},{"size":2161,"mtime":1665073876859,"results":"1878","hashOfConfig":"1125"},{"size":65,"mtime":1665073876823,"results":"1879","hashOfConfig":"1125"},{"size":675,"mtime":1665074516762,"results":"1880","hashOfConfig":"1125"},{"size":1261,"mtime":1665073876859,"results":"1881","hashOfConfig":"1125"},{"size":57,"mtime":1665073876823,"results":"1882","hashOfConfig":"1125"},{"size":2119,"mtime":1665074516706,"results":"1883","hashOfConfig":"1125"},{"size":2816,"mtime":1665074516786,"results":"1884","hashOfConfig":"1125"},{"size":859,"mtime":1665074516762,"results":"1885","hashOfConfig":"1125"},{"size":1129,"mtime":1665074516706,"results":"1886","hashOfConfig":"1125"},{"size":368,"mtime":1665074516790,"results":"1887","hashOfConfig":"1125"},{"size":849,"mtime":1665074516710,"results":"1888","hashOfConfig":"1125"},{"size":1174,"mtime":1665074516758,"results":"1889","hashOfConfig":"1125"},{"size":3545,"mtime":1665074516746,"results":"1890","hashOfConfig":"1125"},{"size":2021,"mtime":1665074516746,"results":"1891","hashOfConfig":"1125"},{"size":2439,"mtime":1665074516734,"results":"1892","hashOfConfig":"1125"},{"size":1087,"mtime":1665074516734,"results":"1893","hashOfConfig":"1125"},{"size":504,"mtime":1665074516790,"results":"1894","hashOfConfig":"1125"},{"size":5274,"mtime":1665074516734,"results":"1895","hashOfConfig":"1125"},{"size":197,"mtime":1665074516790,"results":"1896","hashOfConfig":"1125"},{"size":197,"mtime":1665074516794,"results":"1897","hashOfConfig":"1125"},{"size":207,"mtime":1665074516794,"results":"1898","hashOfConfig":"1125"},{"size":3001,"mtime":1665074516758,"results":"1899","hashOfConfig":"1125"},{"size":1898,"mtime":1665074516762,"results":"1900","hashOfConfig":"1125"},{"size":49,"mtime":1665074516754,"results":"1901","hashOfConfig":"1125"},{"size":47,"mtime":1665074516754,"results":"1902","hashOfConfig":"1125"},{"size":704,"mtime":1665074516762,"results":"1903","hashOfConfig":"1125"},{"size":55,"mtime":1665074516718,"results":"1904","hashOfConfig":"1125"},{"size":173,"mtime":1665074516762,"results":"1905","hashOfConfig":"1125"},{"size":1585,"mtime":1665074516758,"results":"1906","hashOfConfig":"1125"},{"size":985,"mtime":1665074516722,"results":"1907","hashOfConfig":"1125"},{"size":79,"mtime":1665074516782,"results":"1908","hashOfConfig":"1125"},{"size":59,"mtime":1665074516782,"results":"1909","hashOfConfig":"1125"},{"size":59,"mtime":1665074516786,"results":"1910","hashOfConfig":"1125"},{"size":2407,"mtime":1665074516758,"results":"1911","hashOfConfig":"1125"},{"size":1435,"mtime":1665074516734,"results":"1912","hashOfConfig":"1125"},{"size":4784,"mtime":1665074516734,"results":"1913","hashOfConfig":"1125"},{"size":45,"mtime":1665074516726,"results":"1914","hashOfConfig":"1125"},{"size":49,"mtime":1665074516802,"results":"1915","hashOfConfig":"1125"},{"size":215,"mtime":1665074516754,"results":"1916","hashOfConfig":"1125"},{"size":57,"mtime":1665074516802,"results":"1917","hashOfConfig":"1125"},{"size":43,"mtime":1665074516802,"results":"1918","hashOfConfig":"1125"},{"size":43,"mtime":1665074516802,"results":"1919","hashOfConfig":"1125"},{"size":563,"mtime":1665074516706,"results":"1920","hashOfConfig":"1125"},{"size":45,"mtime":1665074516802,"results":"1921","hashOfConfig":"1125"},{"size":827,"mtime":1665074516714,"results":"1922","hashOfConfig":"1125"},{"size":408,"mtime":1665074516746,"results":"1923","hashOfConfig":"1125"},{"size":200,"mtime":1665074516782,"results":"1924","hashOfConfig":"1125"},{"size":440,"mtime":1665074516762,"results":"1925","hashOfConfig":"1125"},{"size":980,"mtime":1665074516782,"results":"1926","hashOfConfig":"1125"},{"size":748,"mtime":1665074516706,"results":"1927","hashOfConfig":"1125"},{"size":627,"mtime":1665073876823,"results":"1928","hashOfConfig":"1125"},{"size":618,"mtime":1665073876823,"results":"1929","hashOfConfig":"1125"},{"size":472,"mtime":1665074516762,"results":"1930","hashOfConfig":"1125"},{"size":51,"mtime":1665074516806,"results":"1931","hashOfConfig":"1125"},{"size":571,"mtime":1665073876823,"results":"1932","hashOfConfig":"1125"},{"size":1074,"mtime":1665074516734,"results":"1933","hashOfConfig":"1125"},{"size":1037,"mtime":1665074516734,"results":"1934","hashOfConfig":"1125"},{"size":392,"mtime":1665074516710,"results":"1935","hashOfConfig":"1125"},{"size":49,"mtime":1665074516806,"results":"1936","hashOfConfig":"1125"},{"size":41,"mtime":1665074516718,"results":"1937","hashOfConfig":"1125"},{"size":169,"mtime":1665074516758,"results":"1938","hashOfConfig":"1125"},{"size":782,"mtime":1665074516746,"results":"1939","hashOfConfig":"1125"},{"size":519,"mtime":1665074516746,"results":"1940","hashOfConfig":"1125"},{"size":1793,"mtime":1665074516734,"results":"1941","hashOfConfig":"1125"},{"size":533,"mtime":1665074516734,"results":"1942","hashOfConfig":"1125"},{"size":2054,"mtime":1665074516734,"results":"1943","hashOfConfig":"1125"},{"size":441,"mtime":1665074516758,"results":"1944","hashOfConfig":"1125"},{"size":256,"mtime":1665074516762,"results":"1945","hashOfConfig":"1125"},{"size":3575,"mtime":1665074516754,"results":"1946","hashOfConfig":"1125"},{"size":5999,"mtime":1665074516754,"results":"1947","hashOfConfig":"1125"},{"size":417,"mtime":1665074516722,"results":"1948","hashOfConfig":"1125"},{"size":568,"mtime":1665074516734,"results":"1949","hashOfConfig":"1125"},{"size":755,"mtime":1665074516758,"results":"1950","hashOfConfig":"1125"},{"size":926,"mtime":1665074516734,"results":"1951","hashOfConfig":"1125"},{"size":1481,"mtime":1665074516758,"results":"1952","hashOfConfig":"1125"},{"size":1907,"mtime":1665074516718,"results":"1953","hashOfConfig":"1125"},{"size":1744,"mtime":1665074516726,"results":"1954","hashOfConfig":"1125"},{"size":3559,"mtime":1665074516802,"results":"1955","hashOfConfig":"1125"},{"size":3940,"mtime":1665074516786,"results":"1956","hashOfConfig":"1125"},{"size":3478,"mtime":1665074516782,"results":"1957","hashOfConfig":"1125"},{"size":5560,"mtime":1665074516782,"results":"1958","hashOfConfig":"1125"},{"size":4724,"mtime":1665074516802,"results":"1959","hashOfConfig":"1125"},{"size":3342,"mtime":1665074516802,"results":"1960","hashOfConfig":"1125"},{"size":3615,"mtime":1665074516802,"results":"1961","hashOfConfig":"1125"},{"size":3606,"mtime":1665074516802,"results":"1962","hashOfConfig":"1125"},{"size":121,"mtime":1665073876823,"results":"1963","hashOfConfig":"1125"},{"size":122,"mtime":1665073876823,"results":"1964","hashOfConfig":"1125"},{"size":5605,"mtime":1665074516786,"results":"1965","hashOfConfig":"1125"},{"size":1259,"mtime":1665074516786,"results":"1966","hashOfConfig":"1125"},{"size":116,"mtime":1665073876823,"results":"1967","hashOfConfig":"1125"},{"size":952,"mtime":1665074516734,"results":"1968","hashOfConfig":"1125"},{"size":1072,"mtime":1665073876831,"results":"1969","hashOfConfig":"1125"},{"size":1721,"mtime":1665074516806,"results":"1970","hashOfConfig":"1125"},{"size":9868,"mtime":1665074516806,"results":"1971","hashOfConfig":"1125"},{"size":741,"mtime":1665074516802,"results":"1972","hashOfConfig":"1125"},{"size":2276,"mtime":1665074516806,"results":"1973","hashOfConfig":"1125"},{"size":761,"mtime":1665074516718,"results":"1974","hashOfConfig":"1125"},{"size":867,"mtime":1665074516726,"results":"1975","hashOfConfig":"1125"},{"size":585,"mtime":1665074516786,"results":"1976","hashOfConfig":"1125"},{"size":239,"mtime":1665074516782,"results":"1977","hashOfConfig":"1125"},{"size":484,"mtime":1665074516782,"results":"1978","hashOfConfig":"1125"},{"size":139,"mtime":1665074516802,"results":"1979","hashOfConfig":"1125"},{"size":269,"mtime":1665074516802,"results":"1980","hashOfConfig":"1125"},{"size":50,"mtime":1665073876871,"results":"1981","hashOfConfig":"1125"},{"size":2719,"mtime":1665074516786,"results":"1982","hashOfConfig":"1125"},{"size":73,"mtime":1665073876871,"results":"1983","hashOfConfig":"1125"},{"size":56,"mtime":1665073876871,"results":"1984","hashOfConfig":"1125"},{"size":43,"mtime":1665074516750,"results":"1985","hashOfConfig":"1125"},{"size":50,"mtime":1665073876871,"results":"1986","hashOfConfig":"1125"},{"size":51,"mtime":1665074516806,"results":"1987","hashOfConfig":"1125"},{"size":290,"mtime":1665074516806,"results":"1988","hashOfConfig":"1125"},{"size":44,"mtime":1665073876871,"results":"1989","hashOfConfig":"1125"},{"size":45,"mtime":1665074516806,"results":"1990","hashOfConfig":"1125"},{"size":52,"mtime":1665073876871,"results":"1991","hashOfConfig":"1125"},{"size":5177,"mtime":1665074516802,"results":"1992","hashOfConfig":"1125"},{"size":65,"mtime":1665074516802,"results":"1993","hashOfConfig":"1125"},{"size":49,"mtime":1665074516806,"results":"1994","hashOfConfig":"1125"},{"size":53,"mtime":1665074516802,"results":"1995","hashOfConfig":"1125"},{"size":47,"mtime":1665074516762,"results":"1996","hashOfConfig":"1125"},{"size":201,"mtime":1665074516806,"results":"1997","hashOfConfig":"1125"},{"size":118,"mtime":1665073876871,"results":"1998","hashOfConfig":"1125"},{"size":61,"mtime":1665074516802,"results":"1999","hashOfConfig":"1125"},{"size":55,"mtime":1665074516802,"results":"2000","hashOfConfig":"1125"},{"size":69,"mtime":1665074516802,"results":"2001","hashOfConfig":"1125"},{"size":3158,"mtime":1665073876871,"results":"2002","hashOfConfig":"1125"},{"size":53,"mtime":1665074516802,"results":"2003","hashOfConfig":"1125"},{"size":2937,"mtime":1665073876871,"results":"2004","hashOfConfig":"1125"},{"size":2408,"mtime":1665073876871,"results":"2005","hashOfConfig":"1125"},{"size":856,"mtime":1665074516750,"results":"2006","hashOfConfig":"1125"},{"size":2388,"mtime":1665074516806,"results":"2007","hashOfConfig":"1125"},{"size":4674,"mtime":1665074516806,"results":"2008","hashOfConfig":"1125"},{"size":37,"mtime":1665074516726,"results":"2009","hashOfConfig":"1125"},{"size":37,"mtime":1665074516726,"results":"2010","hashOfConfig":"1125"},{"size":61,"mtime":1665074516722,"results":"2011","hashOfConfig":"1125"},{"size":53,"mtime":1665074516722,"results":"2012","hashOfConfig":"1125"},{"size":37,"mtime":1665074516730,"results":"2013","hashOfConfig":"1125"},{"size":45,"mtime":1665074516722,"results":"2014","hashOfConfig":"1125"},{"size":60,"mtime":1665074516726,"results":"2015","hashOfConfig":"1125"},{"size":42,"mtime":1665074516726,"results":"2016","hashOfConfig":"1125"},{"size":1118,"mtime":1665074516802,"results":"2017","hashOfConfig":"1125"},{"size":49,"mtime":1665074516722,"results":"2018","hashOfConfig":"1125"},{"size":47,"mtime":1665074516750,"results":"2019","hashOfConfig":"1125"},{"size":169,"mtime":1665074516706,"results":"2020","hashOfConfig":"1125"},{"size":4020,"mtime":1665073876871,"results":"2021","hashOfConfig":"1125"},{"size":1787,"mtime":1665073876871,"results":"2022","hashOfConfig":"1125"},{"size":65,"mtime":1665074516750,"results":"2023","hashOfConfig":"1125"},{"size":59,"mtime":1665074516754,"results":"2024","hashOfConfig":"1125"},{"size":57,"mtime":1665074516754,"results":"2025","hashOfConfig":"1125"},{"size":67,"mtime":1665074516750,"results":"2026","hashOfConfig":"1125"},{"size":65,"mtime":1665074516750,"results":"2027","hashOfConfig":"1125"},{"size":3299,"mtime":1665074516802,"results":"2028","hashOfConfig":"1125"},{"size":4527,"mtime":1665074516802,"results":"2029","hashOfConfig":"1125"},{"size":4830,"mtime":1665074516806,"results":"2030","hashOfConfig":"1125"},{"size":4046,"mtime":1665073876871,"results":"2031","hashOfConfig":"1125"},{"size":5199,"mtime":1665074516806,"results":"2032","hashOfConfig":"1125"},{"size":4749,"mtime":1665073876871,"results":"2033","hashOfConfig":"1125"},{"size":57,"mtime":1665074516710,"results":"2034","hashOfConfig":"1125"},{"size":465,"mtime":1665074516762,"results":"2035","hashOfConfig":"1125"},{"size":307,"mtime":1665074516754,"results":"2036","hashOfConfig":"1125"},{"size":45,"mtime":1665074516706,"results":"2037","hashOfConfig":"1125"},{"size":51,"mtime":1665074516718,"results":"2038","hashOfConfig":"1125"},{"size":71,"mtime":1665074516718,"results":"2039","hashOfConfig":"1125"},{"size":168,"mtime":1665073876871,"results":"2040","hashOfConfig":"1125"},{"size":541,"mtime":1665074516750,"results":"2041","hashOfConfig":"1125"},{"size":4220,"mtime":1665074516802,"results":"2042","hashOfConfig":"1125"},{"size":4573,"mtime":1665074516802,"results":"2043","hashOfConfig":"1125"},{"size":6671,"mtime":1665074516802,"results":"2044","hashOfConfig":"1125"},{"size":5810,"mtime":1665074516802,"results":"2045","hashOfConfig":"1125"},{"size":1613,"mtime":1665073876871,"results":"2046","hashOfConfig":"1125"},{"size":1376,"mtime":1665074516806,"results":"2047","hashOfConfig":"1125"},{"size":5714,"mtime":1665074516722,"results":"2048","hashOfConfig":"1125"},{"size":13236,"mtime":1665074516722,"results":"2049","hashOfConfig":"1125"},{"size":879,"mtime":1665074516730,"results":"2050","hashOfConfig":"1125"},{"size":4193,"mtime":1665074516722,"results":"2051","hashOfConfig":"1125"},{"size":3013,"mtime":1665074516726,"results":"2052","hashOfConfig":"1125"},{"size":4818,"mtime":1665074516726,"results":"2053","hashOfConfig":"1125"},{"size":141,"mtime":1665074516726,"results":"2054","hashOfConfig":"1125"},{"size":2900,"mtime":1665074516726,"results":"2055","hashOfConfig":"1125"},{"size":300,"mtime":1665073876871,"results":"2056","hashOfConfig":"1125"},{"size":6817,"mtime":1665074516722,"results":"2057","hashOfConfig":"1125"},{"size":302,"mtime":1665074516802,"results":"2058","hashOfConfig":"1125"},{"size":1078,"mtime":1665074516802,"results":"2059","hashOfConfig":"1125"},{"size":333,"mtime":1665074516802,"results":"2060","hashOfConfig":"1125"},{"size":3332,"mtime":1665074516750,"results":"2061","hashOfConfig":"1125"},{"size":454,"mtime":1665074516806,"results":"2062","hashOfConfig":"1125"},{"size":365,"mtime":1665074516762,"results":"2063","hashOfConfig":"1125"},{"size":6070,"mtime":1665074516750,"results":"2064","hashOfConfig":"1125"},{"size":1821,"mtime":1665073876871,"results":"2065","hashOfConfig":"1125"},{"size":3652,"mtime":1665074516750,"results":"2066","hashOfConfig":"1125"},{"size":4193,"mtime":1665074516754,"results":"2067","hashOfConfig":"1125"},{"size":2435,"mtime":1665074516754,"results":"2068","hashOfConfig":"1125"},{"size":5004,"mtime":1665074516750,"results":"2069","hashOfConfig":"1125"},{"size":6953,"mtime":1665074516710,"results":"2070","hashOfConfig":"1125"},{"size":940,"mtime":1665074516718,"results":"2071","hashOfConfig":"1125"},{"size":854,"mtime":1665074516718,"results":"2072","hashOfConfig":"1125"},{"size":1097,"mtime":1665074516706,"results":"2073","hashOfConfig":"1125"},{"size":176,"mtime":1665074516802,"results":"2074","hashOfConfig":"1125"},{"size":896,"mtime":1665074516802,"results":"2075","hashOfConfig":"1125"},{"size":244,"mtime":1665074516802,"results":"2076","hashOfConfig":"1125"},{"size":1233,"mtime":1665074516722,"results":"2077","hashOfConfig":"1125"},{"size":818,"mtime":1665074516722,"results":"2078","hashOfConfig":"1125"},{"size":737,"mtime":1665074516726,"results":"2079","hashOfConfig":"1125"},{"size":672,"mtime":1665074516790,"results":"2080","hashOfConfig":"1125"},{"size":2535,"mtime":1665074516726,"results":"2081","hashOfConfig":"1125"},{"size":417,"mtime":1665074516722,"results":"2082","hashOfConfig":"1125"},{"size":210,"mtime":1665074516750,"results":"2083","hashOfConfig":"1125"},{"size":73,"mtime":1665074516710,"results":"2084","hashOfConfig":"1125"},{"size":73,"mtime":1665074516802,"results":"2085","hashOfConfig":"1125"},{"size":51,"mtime":1665074516802,"results":"2086","hashOfConfig":"1125"},{"size":6245,"mtime":1665074516726,"results":"2087","hashOfConfig":"1125"},{"size":2089,"mtime":1665074516726,"results":"2088","hashOfConfig":"1125"},{"size":313,"mtime":1665074516750,"results":"2089","hashOfConfig":"1125"},{"size":133,"mtime":1665074516750,"results":"2090","hashOfConfig":"1125"},{"size":1332,"mtime":1665074516754,"results":"2091","hashOfConfig":"1125"},{"size":337,"mtime":1665074516750,"results":"2092","hashOfConfig":"1125"},{"size":962,"mtime":1665074516718,"results":"2093","hashOfConfig":"1125"},{"size":834,"mtime":1665074516718,"results":"2094","hashOfConfig":"1125"},{"size":59,"mtime":1665074516750,"results":"2095","hashOfConfig":"1125"},{"size":67,"mtime":1665074516750,"results":"2096","hashOfConfig":"1125"},{"size":63,"mtime":1665074516754,"results":"2097","hashOfConfig":"1125"},{"size":55,"mtime":1665074516754,"results":"2098","hashOfConfig":"1125"},{"size":59,"mtime":1665074516754,"results":"2099","hashOfConfig":"1125"},{"size":57,"mtime":1665074516754,"results":"2100","hashOfConfig":"1125"},{"size":59,"mtime":1665074516754,"results":"2101","hashOfConfig":"1125"},{"size":82,"mtime":1665074516750,"results":"2102","hashOfConfig":"1125"},{"size":75,"mtime":1665074516750,"results":"2103","hashOfConfig":"1125"},{"size":53,"mtime":1665074516750,"results":"2104","hashOfConfig":"1125"},{"size":33,"mtime":1665074516758,"results":"2105","hashOfConfig":"1125"},{"size":37,"mtime":1665074516758,"results":"2106","hashOfConfig":"1125"},{"size":1352,"mtime":1665074516710,"results":"2107","hashOfConfig":"1125"},{"size":49,"mtime":1665074516806,"results":"2108","hashOfConfig":"1125"},{"size":35,"mtime":1665074516730,"results":"2109","hashOfConfig":"1125"},{"size":52,"mtime":1665073876827,"results":"2110","hashOfConfig":"1125"},{"size":956,"mtime":1665074516726,"results":"2111","hashOfConfig":"1125"},{"size":875,"mtime":1665074516726,"results":"2112","hashOfConfig":"1125"},{"size":37,"mtime":1665074516806,"results":"2113","hashOfConfig":"1125"},{"size":14632,"mtime":1665074516782,"results":"2114","hashOfConfig":"1125"},{"size":1933,"mtime":1665074516786,"results":"2115","hashOfConfig":"1125"},{"size":1888,"mtime":1665074516710,"results":"2116","hashOfConfig":"1125"},{"size":1544,"mtime":1665074516790,"results":"2117","hashOfConfig":"1125"},{"size":298,"mtime":1665074516722,"results":"2118","hashOfConfig":"1125"},{"size":340,"mtime":1665074516722,"results":"2119","hashOfConfig":"1125"},{"size":326,"mtime":1665074516722,"results":"2120","hashOfConfig":"1125"},{"size":2310,"mtime":1665074516802,"results":"2121","hashOfConfig":"1125"},{"size":1079,"mtime":1665074516802,"results":"2122","hashOfConfig":"1125"},{"size":3553,"mtime":1665074516754,"results":"2123","hashOfConfig":"1125"},{"size":3501,"mtime":1665074516754,"results":"2124","hashOfConfig":"1125"},{"size":6122,"mtime":1665074516754,"results":"2125","hashOfConfig":"1125"},{"size":4498,"mtime":1665074516754,"results":"2126","hashOfConfig":"1125"},{"size":2298,"mtime":1665074516750,"results":"2127","hashOfConfig":"1125"},{"size":2417,"mtime":1665074516750,"results":"2128","hashOfConfig":"1125"},{"size":3379,"mtime":1665074516754,"results":"2129","hashOfConfig":"1125"},{"size":3512,"mtime":1665074516750,"results":"2130","hashOfConfig":"1125"},{"size":4567,"mtime":1665074516750,"results":"2131","hashOfConfig":"1125"},{"size":2227,"mtime":1665074516794,"results":"2132","hashOfConfig":"1125"},{"size":1628,"mtime":1665074516798,"results":"2133","hashOfConfig":"1125"},{"size":2774,"mtime":1665074516758,"results":"2134","hashOfConfig":"1125"},{"size":69,"mtime":1665074516798,"results":"2135","hashOfConfig":"1125"},{"size":1185,"mtime":1665074516766,"results":"2136","hashOfConfig":"1125"},{"size":2699,"mtime":1665074516806,"results":"2137","hashOfConfig":"1125"},{"size":2039,"mtime":1665074516786,"results":"2138","hashOfConfig":"1125"},{"size":4758,"mtime":1665074516758,"results":"2139","hashOfConfig":"1125"},{"size":2402,"mtime":1665074516758,"results":"2140","hashOfConfig":"1125"},{"size":627,"mtime":1665074516790,"results":"2141","hashOfConfig":"1125"},{"size":1727,"mtime":1665074516750,"results":"2142","hashOfConfig":"1125"},{"size":1558,"mtime":1665073876871,"results":"2143","hashOfConfig":"1125"},{"size":2449,"mtime":1665074516730,"results":"2144","hashOfConfig":"1125"},{"size":63,"mtime":1665074516726,"results":"2145","hashOfConfig":"1125"},{"size":537,"mtime":1665074516806,"results":"2146","hashOfConfig":"1125"},{"size":7278,"mtime":1665074772901,"results":"2147","hashOfConfig":"1125"},{"size":77,"mtime":1665074516722,"results":"2148","hashOfConfig":"1125"},{"size":53,"mtime":1665074516718,"results":"2149","hashOfConfig":"1125"},{"size":433,"mtime":1665074516710,"results":"2150","hashOfConfig":"1125"},{"size":51,"mtime":1665074516718,"results":"2151","hashOfConfig":"1125"},{"size":59,"mtime":1665074516722,"results":"2152","hashOfConfig":"1125"},{"size":57,"mtime":1665074516718,"results":"2153","hashOfConfig":"1125"},{"size":94,"mtime":1665073876819,"results":"2154","hashOfConfig":"1125"},{"size":45,"mtime":1665074516718,"results":"2155","hashOfConfig":"1125"},{"size":721,"mtime":1665074516806,"results":"2156","hashOfConfig":"1125"},{"size":3484,"mtime":1665074516746,"results":"2157","hashOfConfig":"1125"},{"size":4074,"mtime":1665074516726,"results":"2158","hashOfConfig":"1125"},{"size":302,"mtime":1665074516802,"results":"2159","hashOfConfig":"1125"},{"size":377,"mtime":1665074516802,"results":"2160","hashOfConfig":"1125"},{"size":346,"mtime":1665074516802,"results":"2161","hashOfConfig":"1125"},{"size":290,"mtime":1665074516802,"results":"2162","hashOfConfig":"1125"},{"size":289,"mtime":1665074516802,"results":"2163","hashOfConfig":"1125"},{"size":313,"mtime":1665074516754,"results":"2164","hashOfConfig":"1125"},{"size":133,"mtime":1665074516754,"results":"2165","hashOfConfig":"1125"},{"size":564,"mtime":1665074516750,"results":"2166","hashOfConfig":"1125"},{"size":611,"mtime":1665074516750,"results":"2167","hashOfConfig":"1125"},{"size":177,"mtime":1665074516758,"results":"2168","hashOfConfig":"1125"},{"size":1684,"mtime":1665074516758,"results":"2169","hashOfConfig":"1125"},{"size":266,"mtime":1665074516750,"results":"2170","hashOfConfig":"1125"},{"size":299,"mtime":1665074516806,"results":"2171","hashOfConfig":"1125"},{"size":1068,"mtime":1665074516730,"results":"2172","hashOfConfig":"1125"},{"size":1459,"mtime":1665074516798,"results":"2173","hashOfConfig":"1125"},{"size":1104,"mtime":1665074516726,"results":"2174","hashOfConfig":"1125"},{"size":47,"mtime":1665074516718,"results":"2175","hashOfConfig":"1125"},{"size":51,"mtime":1665074516722,"results":"2176","hashOfConfig":"1125"},{"size":438,"mtime":1665074516806,"results":"2177","hashOfConfig":"1125"},{"size":1891,"mtime":1665074516718,"results":"2178","hashOfConfig":"1125"},{"size":2542,"mtime":1665074516722,"results":"2179","hashOfConfig":"1125"},{"size":936,"mtime":1665074516718,"results":"2180","hashOfConfig":"1125"},{"size":1414,"mtime":1665074516722,"results":"2181","hashOfConfig":"1125"},{"size":10363,"mtime":1665074516718,"results":"2182","hashOfConfig":"1125"},{"size":4254,"mtime":1665074516718,"results":"2183","hashOfConfig":"1125"},{"size":69,"mtime":1665074516722,"results":"2184","hashOfConfig":"1125"},{"size":103,"mtime":1665074516702,"results":"2185","hashOfConfig":"1125"},{"size":181,"mtime":1665073876871,"results":"2186","hashOfConfig":"1125"},{"size":795,"mtime":1665074516718,"results":"2187","hashOfConfig":"1125"},{"size":861,"mtime":1665074516722,"results":"2188","hashOfConfig":"1125"},{"size":474,"mtime":1665074516718,"results":"2189","hashOfConfig":"1125"},{"size":273,"mtime":1665074516722,"results":"2190","hashOfConfig":"1125"},{"size":343,"mtime":1665074516718,"results":"2191","hashOfConfig":"1125"},{"size":851,"mtime":1665074516718,"results":"2192","hashOfConfig":"1125"},{"size":5300,"mtime":1665074516718,"results":"2193","hashOfConfig":"1125"},{"size":796,"mtime":1665074516726,"results":"2194","hashOfConfig":"1125"},{"size":3054,"mtime":1665074516718,"results":"2195","hashOfConfig":"1125"},{"size":5025,"mtime":1665074516722,"results":"2196","hashOfConfig":"1125"},{"size":53,"mtime":1665074516750,"results":"2197","hashOfConfig":"1125"},{"size":61,"mtime":1665074516746,"results":"2198","hashOfConfig":"1125"},{"size":131,"mtime":1665074516802,"results":"2199","hashOfConfig":"1125"},{"size":35,"mtime":1665073876819,"results":"2200","hashOfConfig":"1125"},{"size":41,"mtime":1665074516730,"results":"2201","hashOfConfig":"1125"},{"size":51,"mtime":1665074516730,"results":"2202","hashOfConfig":"1125"},{"size":41,"mtime":1665074516750,"results":"2203","hashOfConfig":"1125"},{"size":53,"mtime":1665074516750,"results":"2204","hashOfConfig":"1125"},{"size":58,"mtime":1665073876839,"results":"2205","hashOfConfig":"1125"},{"size":44,"mtime":1665074516750,"results":"2206","hashOfConfig":"1125"},{"size":45,"mtime":1665074516730,"results":"2207","hashOfConfig":"1125"},{"size":186,"mtime":1665074516718,"results":"2208","hashOfConfig":"1125"},{"size":820,"mtime":1665074516718,"results":"2209","hashOfConfig":"1125"},{"size":1540,"mtime":1665074516722,"results":"2210","hashOfConfig":"1125"},{"size":955,"mtime":1665074516750,"results":"2211","hashOfConfig":"1125"},{"size":779,"mtime":1665074516746,"results":"2212","hashOfConfig":"1125"},{"size":574,"mtime":1665073876819,"results":"2213","hashOfConfig":"1125"},{"size":765,"mtime":1665074516730,"results":"2214","hashOfConfig":"1125"},{"size":684,"mtime":1665074516730,"results":"2215","hashOfConfig":"1125"},{"size":14803,"mtime":1665074516750,"results":"2216","hashOfConfig":"1125"},{"size":450,"mtime":1665074516750,"results":"2217","hashOfConfig":"1125"},{"size":516,"mtime":1665073876839,"results":"2218","hashOfConfig":"1125"},{"size":1072,"mtime":1665074516750,"results":"2219","hashOfConfig":"1125"},{"size":53,"mtime":1665074516722,"results":"2220","hashOfConfig":"1125"},{"size":710,"mtime":1665073876827,"results":"2221","hashOfConfig":"1125"},{"size":49,"mtime":1665074516718,"results":"2222","hashOfConfig":"1125"},{"size":59,"mtime":1665074516718,"results":"2223","hashOfConfig":"1125"},{"size":420,"mtime":1665074516746,"results":"2224","hashOfConfig":"1125"},{"size":490,"mtime":1665074516750,"results":"2225","hashOfConfig":"1125"},{"size":381,"mtime":1665074516730,"results":"2226","hashOfConfig":"1125"},{"size":225,"mtime":1665074516730,"results":"2227","hashOfConfig":"1125"},{"size":200,"mtime":1665073876839,"results":"2228","hashOfConfig":"1125"},{"size":258,"mtime":1665074516750,"results":"2229","hashOfConfig":"1125"},{"size":252,"mtime":1665074516750,"results":"2230","hashOfConfig":"1125"},{"size":63,"mtime":1665074516714,"results":"2231","hashOfConfig":"1125"},{"size":57,"mtime":1665074516722,"results":"2232","hashOfConfig":"1125"},{"size":3384,"mtime":1665074516722,"results":"2233","hashOfConfig":"1125"},{"size":51,"mtime":1665074516722,"results":"2234","hashOfConfig":"1125"},{"size":4681,"mtime":1665074516718,"results":"2235","hashOfConfig":"1125"},{"size":607,"mtime":1665074516718,"results":"2236","hashOfConfig":"1125"},{"size":685,"mtime":1665074516722,"results":"2237","hashOfConfig":"1125"},{"size":524,"mtime":1665074516718,"results":"2238","hashOfConfig":"1125"},{"size":1520,"mtime":1665074516718,"results":"2239","hashOfConfig":"1125"},{"size":918,"mtime":1665074516714,"results":"2240","hashOfConfig":"1125"},{"size":712,"mtime":1665074516722,"results":"2241","hashOfConfig":"1125"},{"size":699,"mtime":1665074516722,"results":"2242","hashOfConfig":"1125"},{"size":559,"mtime":1665074516722,"results":"2243","hashOfConfig":"1125"},{"size":560,"mtime":1665074516714,"results":"2244","hashOfConfig":"1125"},{"size":65,"mtime":1665074516714,"results":"2245","hashOfConfig":"1125"},{"size":928,"mtime":1665074516714,"results":"2246","hashOfConfig":"1125"},{"size":1117,"mtime":1665074516714,"results":"2247","hashOfConfig":"1125"},{"filePath":"2248","messages":"2249","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"46nqv2",{"filePath":"2250","messages":"2251","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2252","messages":"2253","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2254","messages":"2255","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2256","messages":"2257","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2258","messages":"2259","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2260","messages":"2261","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2262","messages":"2263","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2264","messages":"2265","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"2266"},{"filePath":"2267","messages":"2268","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2269","messages":"2270","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2271","messages":"2272","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2273","messages":"2274","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2275","messages":"2276","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"2277"},{"filePath":"2278","messages":"2279","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2280","messages":"2281","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2282","messages":"2283","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2284","messages":"2285","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2286","messages":"2287","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2288","messages":"2289","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2290","messages":"2291","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2292","messages":"2293","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2294","messages":"2295","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2296","messages":"2297","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2298","messages":"2299","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2300","messages":"2301","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2302","messages":"2303","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2304","messages":"2305","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2306","messages":"2307","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2308","messages":"2309","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2310","messages":"2311","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2312","messages":"2313","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2314","messages":"2315","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2316","messages":"2317","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2318","messages":"2319","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2320","messages":"2321","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2322","messages":"2323","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2324","messages":"2325","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2326","messages":"2327","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2328","messages":"2329","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2330","messages":"2331","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2332","messages":"2333","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2334","messages":"2335","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2336","messages":"2337","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2338","messages":"2339","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2340","messages":"2341","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2342","messages":"2343","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2344","messages":"2345","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2346","messages":"2347","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2348","messages":"2349","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2350","messages":"2351","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2352","messages":"2353","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"2354"},{"filePath":"2355","messages":"2356","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"2357"},{"filePath":"2358","messages":"2359","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"2360"},{"filePath":"2361","messages":"2362","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2363","messages":"2364","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"2365"},{"filePath":"2366","messages":"2367","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"2368"},{"filePath":"2369","messages":"2370","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2371","messages":"2372","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2373","messages":"2374","errorCount":0,"fatalErrorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"2375"},{"filePath":"2376","messages":"2377","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"2378"},{"filePath":"2379","messages":"2380","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"2381"},{"filePath":"2382","messages":"2383","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"2384"},{"filePath":"2385","messages":"2386","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"2387"},{"filePath":"2388","messages":"2389","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"2390"},{"filePath":"2391","messages":"2392","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"2393"},{"filePath":"2394","messages":"2395","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"2396"},{"filePath":"2397","messages":"2398","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2399","messages":"2400","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"2401"},{"filePath":"2402","messages":"2403","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2404","messages":"2405","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"2406"},{"filePath":"2407","messages":"2408","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2409","messages":"2410","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2411","messages":"2412","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2413","messages":"2414","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"2415"},{"filePath":"2416","messages":"2417","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2418","messages":"2419","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2420","messages":"2421","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"2422"},{"filePath":"2423","messages":"2424","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"2425"},{"filePath":"2426","messages":"2427","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2428","messages":"2429","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2430","messages":"2431","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2432","messages":"2433","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2434","messages":"2435","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"2436"},{"filePath":"2437","messages":"2438","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2439","messages":"2440","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2441","messages":"2442","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2443","messages":"2444","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2445","messages":"2446","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2447","messages":"2448","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2449","messages":"2450","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2451","messages":"2452","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2453","messages":"2454","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2455","messages":"2456","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2457","messages":"2458","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2459","messages":"2460","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2461","messages":"2462","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2463","messages":"2464","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2465","messages":"2466","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2467","messages":"2468","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2469","messages":"2470","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2471","messages":"2472","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2473","messages":"2474","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2475","messages":"2476","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2477","messages":"2478","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2479","messages":"2480","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2481","messages":"2482","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2483","messages":"2484","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2485","messages":"2486","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2487","messages":"2488","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2489","messages":"2490","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2491","messages":"2492","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2493","messages":"2494","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2495","messages":"2496","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2497","messages":"2498","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2499","messages":"2500","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2501","messages":"2502","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2503","messages":"2504","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2505","messages":"2506","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2507","messages":"2508","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2509","messages":"2510","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2511","messages":"2512","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2513","messages":"2514","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2515","messages":"2516","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2517","messages":"2518","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2519","messages":"2520","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2521","messages":"2522","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2523","messages":"2524","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2525","messages":"2526","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2527","messages":"2528","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2529","messages":"2530","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2531","messages":"2532","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2533","messages":"2534","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2535","messages":"2536","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2537","messages":"2538","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2539","messages":"2540","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2541","messages":"2542","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2543","messages":"2544","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2545","messages":"2546","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2547","messages":"2548","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2549","messages":"2550","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2551","messages":"2552","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2553","messages":"2554","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2555","messages":"2556","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2557","messages":"2558","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2559","messages":"2560","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2561","messages":"2562","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2563","messages":"2564","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2565","messages":"2566","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2567","messages":"2568","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2569","messages":"2570","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2571","messages":"2572","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2573","messages":"2574","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2575","messages":"2576","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2577","messages":"2578","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2579","messages":"2580","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2581","messages":"2582","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2583","messages":"2584","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2585","messages":"2586","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2587","messages":"2588","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2589","messages":"2590","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2591","messages":"2592","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2593","messages":"2594","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"2595"},{"filePath":"2596","messages":"2597","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2598","messages":"2599","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2600","messages":"2601","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2602","messages":"2603","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2604","messages":"2605","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2606","messages":"2607","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2608","messages":"2609","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2610","messages":"2611","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2612","messages":"2613","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2614","messages":"2615","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2616","messages":"2617","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2618","messages":"2619","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"2620"},{"filePath":"2621","messages":"2622","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2623","messages":"2624","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2625","messages":"2626","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2627","messages":"2628","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"2629"},{"filePath":"2630","messages":"2631","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2632","messages":"2633","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2634","messages":"2635","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2636","messages":"2637","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2638","messages":"2639","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2640","messages":"2641","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"2642"},{"filePath":"2643","messages":"2644","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2645","messages":"2646","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2647","messages":"2648","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2649","messages":"2650","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2651","messages":"2652","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2653","messages":"2654","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2655","messages":"2656","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2657","messages":"2658","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2659","messages":"2660","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2661","messages":"2662","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2663","messages":"2664","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2665","messages":"2666","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2667","messages":"2668","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2669","messages":"2670","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2671","messages":"2672","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2673","messages":"2674","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2675","messages":"2676","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2677","messages":"2678","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2679","messages":"2680","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2681","messages":"2682","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2683","messages":"2684","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2685","messages":"2686","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2687","messages":"2688","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2689","messages":"2690","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2691","messages":"2692","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2693","messages":"2694","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2695","messages":"2696","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2697","messages":"2698","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2699","messages":"2700","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2701","messages":"2702","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2703","messages":"2704","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2705","messages":"2706","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2707","messages":"2708","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2709","messages":"2710","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2711","messages":"2712","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2713","messages":"2714","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2715","messages":"2716","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"2717"},{"filePath":"2718","messages":"2719","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2720","messages":"2721","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2722","messages":"2723","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2724","messages":"2725","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2726","messages":"2727","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2728","messages":"2729","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2730","messages":"2731","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2732","messages":"2733","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"2734"},{"filePath":"2735","messages":"2736","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2737","messages":"2738","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2739","messages":"2740","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2741","messages":"2742","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2743","messages":"2744","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2745","messages":"2746","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2747","messages":"2748","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2749","messages":"2750","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2751","messages":"2752","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2753","messages":"2754","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2755","messages":"2756","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2757","messages":"2758","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2759","messages":"2760","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2761","messages":"2762","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2763","messages":"2764","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2765","messages":"2766","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2767","messages":"2768","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2769","messages":"2770","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2771","messages":"2772","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2773","messages":"2774","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2775","messages":"2776","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2777","messages":"2778","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2779","messages":"2780","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"2781"},{"filePath":"2782","messages":"2783","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2784","messages":"2785","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"2786"},{"filePath":"2787","messages":"2788","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2789","messages":"2790","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2791","messages":"2792","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2793","messages":"2794","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2795","messages":"2796","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"2797"},{"filePath":"2798","messages":"2799","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"2800"},{"filePath":"2801","messages":"2802","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"2803"},{"filePath":"2804","messages":"2805","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"2806"},{"filePath":"2807","messages":"2808","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2809","messages":"2810","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2811","messages":"2812","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2813","messages":"2814","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2815","messages":"2816","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2817","messages":"2818","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2819","messages":"2820","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2821","messages":"2822","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2823","messages":"2824","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2825","messages":"2826","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"2827"},{"filePath":"2828","messages":"2829","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"2830"},{"filePath":"2831","messages":"2832","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2833","messages":"2834","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2835","messages":"2836","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"2837"},{"filePath":"2838","messages":"2839","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2840","messages":"2841","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2842","messages":"2843","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2844","messages":"2845","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2846","messages":"2847","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2848","messages":"2849","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2850","messages":"2851","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2852","messages":"2853","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"2854"},{"filePath":"2855","messages":"2856","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"2857"},{"filePath":"2858","messages":"2859","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2860","messages":"2861","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2862","messages":"2863","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2864","messages":"2865","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2866","messages":"2867","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2868","messages":"2869","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2870","messages":"2871","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2872","messages":"2873","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2874","messages":"2875","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2876","messages":"2877","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2878","messages":"2879","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2880","messages":"2881","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2882","messages":"2883","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2884","messages":"2885","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2886","messages":"2887","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2888","messages":"2889","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2890","messages":"2891","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2892","messages":"2893","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2894","messages":"2895","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2896","messages":"2897","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2898","messages":"2899","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"2900"},{"filePath":"2901","messages":"2902","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2903","messages":"2904","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2905","messages":"2906","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2907","messages":"2908","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2909","messages":"2910","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2911","messages":"2912","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2913","messages":"2914","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2915","messages":"2916","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2917","messages":"2918","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2919","messages":"2920","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2921","messages":"2922","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2923","messages":"2924","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2925","messages":"2926","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2927","messages":"2928","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2929","messages":"2930","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2931","messages":"2932","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"2933"},{"filePath":"2934","messages":"2935","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"2936"},{"filePath":"2937","messages":"2938","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"2939"},{"filePath":"2940","messages":"2941","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2942","messages":"2943","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2944","messages":"2945","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"2946"},{"filePath":"2947","messages":"2948","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2949","messages":"2950","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"2951"},{"filePath":"2952","messages":"2953","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2954","messages":"2955","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2956","messages":"2957","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2958","messages":"2959","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2960","messages":"2961","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2962","messages":"2963","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"2964"},{"filePath":"2965","messages":"2966","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"2967"},{"filePath":"2968","messages":"2969","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"2970"},{"filePath":"2971","messages":"2972","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2973","messages":"2974","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2975","messages":"2976","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2977","messages":"2978","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2979","messages":"2980","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2981","messages":"2982","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2983","messages":"2984","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2985","messages":"2986","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2987","messages":"2988","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2989","messages":"2990","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2991","messages":"2992","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2993","messages":"2994","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2995","messages":"2996","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2997","messages":"2998","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2999","messages":"3000","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"3001","messages":"3002","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"3003","messages":"3004","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"3005"},{"filePath":"3006","messages":"3007","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"3008","messages":"3009","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"3010","messages":"3011","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"3012","messages":"3013","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"3014","messages":"3015","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"3016","messages":"3017","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"3018","messages":"3019","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"3020","messages":"3021","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"3022","messages":"3023","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"3024","messages":"3025","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"3026","messages":"3027","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"3028","messages":"3029","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"3030","messages":"3031","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"3032","messages":"3033","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"3034","messages":"3035","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"3036","messages":"3037","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"3038","messages":"3039","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"3040","messages":"3041","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"3042"},{"filePath":"3043","messages":"3044","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"3045","messages":"3046","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"3047","messages":"3048","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"3049","messages":"3050","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"3051","messages":"3052","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"3053","messages":"3054","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"3055","messages":"3056","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"3057","messages":"3058","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"3059","messages":"3060","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"3061","messages":"3062","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"3063","messages":"3064","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"3065"},{"filePath":"3066","messages":"3067","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"3068"},{"filePath":"3069","messages":"3070","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"3071","messages":"3072","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"3073","messages":"3074","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"3075","messages":"3076","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"3077","messages":"3078","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"3079","messages":"3080","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"3081","messages":"3082","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"3083","messages":"3084","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"3085","messages":"3086","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"3087","messages":"3088","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"3089","messages":"3090","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"3091","messages":"3092","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"3093","messages":"3094","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"3095","messages":"3096","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"3097","messages":"3098","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"3099","messages":"3100","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"3101","messages":"3102","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"3103","messages":"3104","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"3105","messages":"3106","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"3107","messages":"3108","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"3109","messages":"3110","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"3111","messages":"3112","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"3113"},{"filePath":"3114","messages":"3115","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"3116","messages":"3117","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"3118","messages":"3119","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"3120","messages":"3121","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"3122"},{"filePath":"3123","messages":"3124","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"3125","messages":"3126","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"3127"},{"filePath":"3128","messages":"3129","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"3130"},{"filePath":"3131","messages":"3132","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"3133","messages":"3134","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"3135","messages":"3136","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"3137","messages":"3138","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"3139","messages":"3140","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"3141"},{"filePath":"3142","messages":"3143","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"3144","messages":"3145","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"3146"},{"filePath":"3147","messages":"3148","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"3149"},{"filePath":"3150","messages":"3151","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"3152","messages":"3153","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"3154","messages":"3155","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"3156","messages":"3157","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"3158"},{"filePath":"3159","messages":"3160","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"3161"},{"filePath":"3162","messages":"3163","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"3164"},{"filePath":"3165","messages":"3166","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"3167","messages":"3168","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"3169","messages":"3170","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"3171","messages":"3172","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"3173","messages":"3174","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"3175","messages":"3176","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"3177","messages":"3178","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"3179","messages":"3180","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"3181"},{"filePath":"3182","messages":"3183","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"3184","messages":"3185","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"3186"},{"filePath":"3187","messages":"3188","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"3189"},{"filePath":"3190","messages":"3191","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"3192","messages":"3193","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"3194","messages":"3195","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"3196"},{"filePath":"3197","messages":"3198","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"3199"},{"filePath":"3200","messages":"3201","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"3202","messages":"3203","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"3204"},{"filePath":"3205","messages":"3206","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"3207","messages":"3208","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"3209"},{"filePath":"3210","messages":"3211","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"3212"},{"filePath":"3213","messages":"3214","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"3215"},{"filePath":"3216","messages":"3217","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"3218","messages":"3219","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"3220"},{"filePath":"3221","messages":"3222","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"3223"},{"filePath":"3224","messages":"3225","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"3226","messages":"3227","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"3228","messages":"3229","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"3230","messages":"3231","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"3232"},{"filePath":"3233","messages":"3234","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"3235"},{"filePath":"3236","messages":"3237","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"3238","messages":"3239","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"3240"},{"filePath":"3241","messages":"3242","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"3243","messages":"3244","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"3245"},{"filePath":"3246","messages":"3247","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"3248"},{"filePath":"3249","messages":"3250","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"3251","messages":"3252","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"3253","messages":"3254","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"3255","messages":"3256","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"3257","messages":"3258","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"3259","messages":"3260","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"3261","messages":"3262","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"3263"},{"filePath":"3264","messages":"3265","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"3266"},{"filePath":"3267","messages":"3268","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"3269"},{"filePath":"3270","messages":"3271","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"3272"},{"filePath":"3273","messages":"3274","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"3275","messages":"3276","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"3277","messages":"3278","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"3279"},{"filePath":"3280","messages":"3281","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"3282","messages":"3283","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"3284","messages":"3285","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"3286","messages":"3287","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"3288","messages":"3289","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"3290","messages":"3291","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"3292","messages":"3293","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"3294","messages":"3295","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"3296","messages":"3297","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"3298","messages":"3299","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"3300","messages":"3301","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"3302","messages":"3303","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"3304","messages":"3305","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"3306"},{"filePath":"3307","messages":"3308","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"3113"},{"filePath":"3309","messages":"3310","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"3311","messages":"3312","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"3313"},{"filePath":"3314","messages":"3315","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"3316","messages":"3317","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"3318","messages":"3319","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"3320","messages":"3321","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"3322","messages":"3323","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"3324","messages":"3325","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"3326","messages":"3327","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"3328","messages":"3329","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"3330","messages":"3331","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"3332","messages":"3333","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"3334","messages":"3335","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"3336","messages":"3337","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"3338","messages":"3339","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"3340","messages":"3341","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"3342","messages":"3343","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"3344","messages":"3345","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"3346","messages":"3347","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"3348","messages":"3349","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"3350","messages":"3351","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"3352","messages":"3353","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"3354","messages":"3355","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"3356","messages":"3357","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"3358","messages":"3359","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"3360","messages":"3361","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"3362","messages":"3363","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"3364","messages":"3365","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"3366","messages":"3367","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"3368","messages":"3369","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"3370","messages":"3371","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"3372","messages":"3373","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"3374","messages":"3375","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"3376","messages":"3377","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"3378","messages":"3379","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"3380","messages":"3381","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"3382","messages":"3383","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"3384"},{"filePath":"3385","messages":"3386","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"3387","messages":"3388","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"3389","messages":"3390","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"3391","messages":"3392","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"3393","messages":"3394","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"3395","messages":"3396","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"3397","messages":"3398","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"3399","messages":"3400","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"3401","messages":"3402","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"3403","messages":"3404","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"3405"},{"filePath":"3406","messages":"3407","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"3408","messages":"3409","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"3410","messages":"3411","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"3412","messages":"3413","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"3414","messages":"3415","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"3416","messages":"3417","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"3418","messages":"3419","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"3420","messages":"3421","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"3422"},{"filePath":"3423","messages":"3424","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"3425"},{"filePath":"3426","messages":"3427","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"3428","messages":"3429","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"3430","messages":"3431","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"3432","messages":"3433","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"3434","messages":"3435","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"3436","messages":"3437","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"3438","messages":"3439","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"3440","messages":"3441","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"3442"},{"filePath":"3443","messages":"3444","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"3445","messages":"3446","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"3447","messages":"3448","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"3449"},{"filePath":"3450","messages":"3451","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"3452"},{"filePath":"3453","messages":"3454","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"3455","messages":"3456","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"3457","messages":"3458","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"3459"},{"filePath":"3460","messages":"3461","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"3462","messages":"3463","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"3464","messages":"3465","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"3466"},{"filePath":"3467","messages":"3468","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"3469","messages":"3470","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"3471","messages":"3472","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"3473","messages":"3474","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"3475","messages":"3476","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"3477"},{"filePath":"3478","messages":"3479","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"3480"},{"filePath":"3481","messages":"3482","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"3483","messages":"3484","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"3485","messages":"3486","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"3487","messages":"3488","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"3489","messages":"3490","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"3491"},{"filePath":"3492","messages":"3493","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"3494"},{"filePath":"3495","messages":"3496","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"3497","messages":"3498","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"3499","messages":"3500","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"3501"},{"filePath":"3502","messages":"3503","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"3504"},{"filePath":"3505","messages":"3506","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"3507","messages":"3508","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"3509","messages":"3510","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"3511","messages":"3512","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"3513","messages":"3514","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"3515"},{"filePath":"3516","messages":"3517","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"3518","messages":"3519","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"3520","messages":"3521","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"3522"},{"filePath":"3523","messages":"3524","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"3525","messages":"3526","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"3527","messages":"3528","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"3529","messages":"3530","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"3531","messages":"3532","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"3533","messages":"3534","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"3535","messages":"3536","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"3537","messages":"3538","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"3539","messages":"3540","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"3541","messages":"3542","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"3543","messages":"3544","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"3545","messages":"3546","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"3547","messages":"3548","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"3549","messages":"3550","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"3551","messages":"3552","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"3553","messages":"3554","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"3555","messages":"3556","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"3557","messages":"3558","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"3559","messages":"3560","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"3561","messages":"3562","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"3563","messages":"3564","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"3565"},{"filePath":"3566","messages":"3567","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"3568","messages":"3569","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"3570","messages":"3571","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"3572","messages":"3573","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"3574","messages":"3575","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"3576","messages":"3577","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"3578","messages":"3579","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"3580","messages":"3581","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"3582","messages":"3583","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"3584","messages":"3585","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"3586","messages":"3587","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"3588","messages":"3589","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"3590","messages":"3591","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"3592","messages":"3593","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"3594","messages":"3595","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"3596","messages":"3597","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"3598","messages":"3599","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"3600","messages":"3601","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"3602"},{"filePath":"3603","messages":"3604","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"3605","messages":"3606","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"3607","messages":"3608","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"3609","messages":"3610","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"3611","messages":"3612","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"3613","messages":"3614","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"3615","messages":"3616","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"3617","messages":"3618","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"3619","messages":"3620","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"3621","messages":"3622","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"3623","messages":"3624","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"3625","messages":"3626","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"3627","messages":"3628","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"3629"},{"filePath":"3630","messages":"3631","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"3632","messages":"3633","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"3634","messages":"3635","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"3636","messages":"3637","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"3638","messages":"3639","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"3640","messages":"3641","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"3642","messages":"3643","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"3644","messages":"3645","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"3646","messages":"3647","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"3648","messages":"3649","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"3650","messages":"3651","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"3652","messages":"3653","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"3654"},{"filePath":"3655","messages":"3656","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"3657","messages":"3658","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"3659","messages":"3660","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"3661","messages":"3662","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"3663","messages":"3664","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"3665","messages":"3666","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"3667","messages":"3668","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"3669","messages":"3670","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"3671","messages":"3672","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"3673","messages":"3674","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"3675","messages":"3676","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"3677","messages":"3678","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"3679","messages":"3680","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"3681","messages":"3682","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"3683","messages":"3684","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"3685","messages":"3686","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"3687","messages":"3688","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"3689","messages":"3690","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"3691","messages":"3692","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"3693","messages":"3694","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"3695"},{"filePath":"3696","messages":"3697","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"3698","messages":"3699","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"3700","messages":"3701","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"3702","messages":"3703","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"3704","messages":"3705","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"3706"},{"filePath":"3707","messages":"3708","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"3709","messages":"3710","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"3711","messages":"3712","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"3713","messages":"3714","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"3715","messages":"3716","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"3717","messages":"3718","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"3719","messages":"3720","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"3721"},{"filePath":"3722","messages":"3723","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"3724"},{"filePath":"3725","messages":"3726","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"3727","messages":"3728","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"3729"},{"filePath":"3730","messages":"3731","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"3732"},{"filePath":"3733","messages":"3734","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"3735"},{"filePath":"3736","messages":"3737","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"3738"},{"filePath":"3739","messages":"3740","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"3741"},{"filePath":"3742","messages":"3743","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"3744"},{"filePath":"3745","messages":"3746","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"3747","messages":"3748","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"3749","messages":"3750","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"3751","messages":"3752","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"3753","messages":"3754","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"3755","messages":"3756","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"3757","messages":"3758","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"3759","messages":"3760","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"3761","messages":"3762","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"3763","messages":"3764","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"3765","messages":"3766","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"3767","messages":"3768","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"3769","messages":"3770","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"3771","messages":"3772","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"3773","messages":"3774","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"3775"},{"filePath":"3776","messages":"3777","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"3778","messages":"3779","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"3780","messages":"3781","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"3782"},{"filePath":"3783","messages":"3784","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"3785"},{"filePath":"3786","messages":"3787","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"3788","messages":"3789","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"3790","messages":"3791","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"3792","messages":"3793","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"3794","messages":"3795","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"3796","messages":"3797","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"3798"},{"filePath":"3799","messages":"3800","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"3801","messages":"3802","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"3803","messages":"3804","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"3805","messages":"3806","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"3807","messages":"3808","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"3809"},{"filePath":"3810","messages":"3811","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"3812","messages":"3813","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"3814","messages":"3815","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"3816","messages":"3817","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"3818","messages":"3819","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"3820","messages":"3821","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"3822","messages":"3823","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"3824","messages":"3825","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"3826","messages":"3827","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"3828","messages":"3829","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"3830","messages":"3831","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"3832","messages":"3833","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"3834","messages":"3835","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"3836","messages":"3837","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"3838","messages":"3839","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"3840","messages":"3841","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"3842","messages":"3843","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"3844","messages":"3845","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"3846","messages":"3847","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"3848","messages":"3849","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"3850","messages":"3851","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"3852","messages":"3853","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"3854"},{"filePath":"3855","messages":"3856","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"3857","messages":"3858","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"3859","messages":"3860","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"3861","messages":"3862","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"3863","messages":"3864","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"3865","messages":"3866","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"3867","messages":"3868","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"3869","messages":"3870","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"3871","messages":"3872","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"3873","messages":"3874","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"3875","messages":"3876","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"3877","messages":"3878","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"3879","messages":"3880","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"3881","messages":"3882","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"3883","messages":"3884","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"3885","messages":"3886","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"3887"},{"filePath":"3888","messages":"3889","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"3890","messages":"3891","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"3892","messages":"3893","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"3894","messages":"3895","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"3896","messages":"3897","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"3898","messages":"3899","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"3900","messages":"3901","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"3902"},{"filePath":"3903","messages":"3904","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"3905","messages":"3906","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"3907","messages":"3908","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"3909","messages":"3910","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"3911","messages":"3912","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"3913"},{"filePath":"3914","messages":"3915","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"3916","messages":"3917","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"3918","messages":"3919","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"3920","messages":"3921","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"3922"},{"filePath":"3923","messages":"3924","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"3925","messages":"3926","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"3927","messages":"3928","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"3929","messages":"3930","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"3931","messages":"3932","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"3933","messages":"3934","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"3935","messages":"3936","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"3937","messages":"3938","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"3939","messages":"3940","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"3941","messages":"3942","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"3943","messages":"3944","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"3945","messages":"3946","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"3947"},{"filePath":"3948","messages":"3949","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"3950","messages":"3951","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"3952"},{"filePath":"3953","messages":"3954","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"3955","messages":"3956","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"3957","messages":"3958","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"3959","messages":"3960","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"3961","messages":"3962","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"3963","messages":"3964","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"3965","messages":"3966","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"3967","messages":"3968","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"3969","messages":"3970","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"3971","messages":"3972","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"3973","messages":"3974","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"3975","messages":"3976","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"3977","messages":"3978","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"3979","messages":"3980","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"3981","messages":"3982","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"3983","messages":"3984","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"3985","messages":"3986","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"3987","messages":"3988","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"3989","messages":"3990","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"3991","messages":"3992","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"3993","messages":"3994","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"3995","messages":"3996","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"3997","messages":"3998","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"3999","messages":"4000","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"4001","messages":"4002","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"4003","messages":"4004","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"4005","messages":"4006","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"4007","messages":"4008","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"4009","messages":"4010","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"4011","messages":"4012","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"4013","messages":"4014","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"4015","messages":"4016","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"4017","messages":"4018","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"4019","messages":"4020","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"4021"},{"filePath":"4022","messages":"4023","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"4024","messages":"4025","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"4026","messages":"4027","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"4028","messages":"4029","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"4030","messages":"4031","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"4032","messages":"4033","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"4034","messages":"4035","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"4036","messages":"4037","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"4038","messages":"4039","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"4040","messages":"4041","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"4042","messages":"4043","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"4044"},{"filePath":"4045","messages":"4046","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"4047"},{"filePath":"4048","messages":"4049","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"4050"},{"filePath":"4051","messages":"4052","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"4053"},{"filePath":"4054","messages":"4055","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"4056","messages":"4057","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"4058","messages":"4059","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"4060","messages":"4061","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"4062","messages":"4063","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"4064","messages":"4065","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"4066","messages":"4067","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"4068","messages":"4069","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"4070","messages":"4071","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"4072","messages":"4073","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"4074"},{"filePath":"4075","messages":"4076","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"4077","messages":"4078","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"4079","messages":"4080","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"4081","messages":"4082","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"4083","messages":"4084","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"4085","messages":"4086","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"4087","messages":"4088","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"4089","messages":"4090","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"4091","messages":"4092","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"4093","messages":"4094","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"4095","messages":"4096","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"4097","messages":"4098","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"4099","messages":"4100","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"4101","messages":"4102","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"4103","messages":"4104","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"4105","messages":"4106","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"4107","messages":"4108","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"4109","messages":"4110","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"4111","messages":"4112","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"4113","messages":"4114","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"4115","messages":"4116","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"4117","messages":"4118","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"4119","messages":"4120","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"4121","messages":"4122","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"4123","messages":"4124","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"4125","messages":"4126","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"4127","messages":"4128","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"4129","messages":"4130","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"4131","messages":"4132","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"4133","messages":"4134","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"4135","messages":"4136","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"4137","messages":"4138","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"4139","messages":"4140","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"4141","messages":"4142","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"4143","messages":"4144","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"4145","messages":"4146","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"4147","messages":"4148","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"4149","messages":"4150","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"4151","messages":"4152","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"4153","messages":"4154","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"4155","messages":"4156","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"4157","messages":"4158","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"4159","messages":"4160","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"4161","messages":"4162","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"4163","messages":"4164","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"4165","messages":"4166","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"4167","messages":"4168","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"4169","messages":"4170","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"4171","messages":"4172","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"4173","messages":"4174","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"4175","messages":"4176","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"4177","messages":"4178","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"4179","messages":"4180","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"4181","messages":"4182","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"4183","messages":"4184","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"4185","messages":"4186","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"4187","messages":"4188","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"4189","messages":"4190","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"4191"},{"filePath":"4192","messages":"4193","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"4194"},{"filePath":"4195","messages":"4196","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"4197","messages":"4198","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"4199"},{"filePath":"4200","messages":"4201","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"4202","messages":"4203","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"4204","messages":"4205","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"4206","messages":"4207","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"4208","messages":"4209","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"4210","messages":"4211","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"4212","messages":"4213","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"4214","messages":"4215","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"4216","messages":"4217","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"4218","messages":"4219","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"4220","messages":"4221","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"4222"},{"filePath":"4223","messages":"4224","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"4225"},{"filePath":"4226","messages":"4227","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"4228","messages":"4229","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"4230","messages":"4231","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"4232","messages":"4233","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"4234"},{"filePath":"4235","messages":"4236","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"4237"},{"filePath":"4238","messages":"4239","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"4240","messages":"4241","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"4242"},{"filePath":"4243","messages":"4244","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"4245"},{"filePath":"4246","messages":"4247","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"4248"},{"filePath":"4249","messages":"4250","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"4251","messages":"4252","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"4253","messages":"4254","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"4255","messages":"4256","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"4257"},{"filePath":"4258","messages":"4259","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"4260","messages":"4261","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"4262","messages":"4263","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"4264","messages":"4265","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"4266"},{"filePath":"4267","messages":"4268","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"4269","messages":"4270","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"4271","messages":"4272","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"4273","messages":"4274","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"4275","messages":"4276","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"4277","messages":"4278","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"4279"},{"filePath":"4280","messages":"4281","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"4282","messages":"4283","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"4284"},{"filePath":"4285","messages":"4286","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"4287"},{"filePath":"4288","messages":"4289","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"4290","messages":"4291","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"4292"},{"filePath":"4293","messages":"4294","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"4295","messages":"4296","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"4297","messages":"4298","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"4299","messages":"4300","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"4301","messages":"4302","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"4303","messages":"4304","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"4305","messages":"4306","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"4307","messages":"4308","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"4309","messages":"4310","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"4311","messages":"4312","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"4313","messages":"4314","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"4315","messages":"4316","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"4317","messages":"4318","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"4319","messages":"4320","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"4321","messages":"4322","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"4323"},{"filePath":"4324","messages":"4325","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"4326","messages":"4327","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"4328","messages":"4329","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"4330","messages":"4331","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"4332","messages":"4333","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"4334","messages":"4335","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"4336","messages":"4337","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"4338","messages":"4339","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"4340","messages":"4341","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"4342","messages":"4343","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"4344","messages":"4345","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"4346","messages":"4347","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"4348","messages":"4349","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"4350","messages":"4351","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"4352","messages":"4353","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"4354","messages":"4355","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"4356","messages":"4357","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"4358","messages":"4359","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"4360","messages":"4361","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"4362","messages":"4363","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"4364","messages":"4365","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"4366","messages":"4367","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"4368","messages":"4369","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"4370","messages":"4371","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"4372","messages":"4373","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"4374","messages":"4375","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"4376","messages":"4377","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"4378","messages":"4379","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"4380"},{"filePath":"4381","messages":"4382","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"4383"},{"filePath":"4384","messages":"4385","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"4386","messages":"4387","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"4388","messages":"4389","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"4390","messages":"4391","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"4392","messages":"4393","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"4394","messages":"4395","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"4396","messages":"4397","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"4398","messages":"4399","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"4400"},{"filePath":"4401","messages":"4402","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"4403","messages":"4404","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"4405","messages":"4406","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"4407"},{"filePath":"4408","messages":"4409","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"4410","messages":"4411","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"4412","messages":"4413","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"4414"},{"filePath":"4415","messages":"4416","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"4417"},{"filePath":"4418","messages":"4419","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"4420","messages":"4421","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"4422","messages":"4423","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"4424","messages":"4425","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"4426","messages":"4427","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"4428","messages":"4429","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"4430","messages":"4431","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"4432","messages":"4433","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"4434","messages":"4435","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"4436"},{"filePath":"4437","messages":"4438","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"4439","messages":"4440","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"4441","messages":"4442","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"4443","messages":"4444","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"4445","messages":"4446","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"4447","messages":"4448","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"4449","messages":"4450","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"4451"},{"filePath":"4452","messages":"4453","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"4454","messages":"4455","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"4456","messages":"4457","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"4458","messages":"4459","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"4460","messages":"4461","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"4462","messages":"4463","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"4464","messages":"4465","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"4466","messages":"4467","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"4468","messages":"4469","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"4470","messages":"4471","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"4472","messages":"4473","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"4474","messages":"4475","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"4476","messages":"4477","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"4478","messages":"4479","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"4480"},{"filePath":"4481","messages":"4482","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"4483","messages":"4484","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"4485","messages":"4486","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"4487","messages":"4488","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"4489","messages":"4490","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"4491","messages":"4492","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"4493","messages":"4494","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"4495","messages":"4496","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"4497"},{"filePath":"4498","messages":"4499","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"4500","messages":"4501","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"4502","messages":"4503","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"4504"},{"filePath":"4505","messages":"4506","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"4507","messages":"4508","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"4509","messages":"4510","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"4511","messages":"4512","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"4513","messages":"4514","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"4515","messages":"4516","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"4517","messages":"4518","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"4519"},{"filePath":"4520","messages":"4521","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"4522","messages":"4523","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"4524","messages":"4525","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"4526"},{"filePath":"4527","messages":"4528","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"4529","messages":"4530","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"4531","messages":"4532","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"4533","messages":"4534","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"4535","messages":"4536","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"4537","messages":"4538","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"4539"},{"filePath":"4540","messages":"4541","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"4542","messages":"4543","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"4544","messages":"4545","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"4546","messages":"4547","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"4548","messages":"4549","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"4550","messages":"4551","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"4552"},{"filePath":"4553","messages":"4554","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"4555","messages":"4556","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"4557","messages":"4558","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"4559","messages":"4560","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"4561","messages":"4562","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"4563","messages":"4564","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"4565","messages":"4566","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"4567","messages":"4568","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"4569","messages":"4570","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"4571","messages":"4572","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"4573","messages":"4574","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"4575","messages":"4576","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"4577","messages":"4578","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"4579","messages":"4580","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"4581","messages":"4582","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"4583","messages":"4584","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"4585"},{"filePath":"4586","messages":"4587","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"4588","messages":"4589","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"4590","messages":"4591","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"4592","messages":"4593","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"4594","messages":"4595","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"4596","messages":"4597","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"4598","messages":"4599","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"4600"},{"filePath":"4601","messages":"4602","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"4603"},{"filePath":"4604","messages":"4605","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"4606","messages":"4607","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"4608","messages":"4609","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"4610","messages":"4611","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"4612","messages":"4613","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"4614","messages":"4615","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"4616","messages":"4617","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"4618","messages":"4619","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"4620","messages":"4621","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"4622","messages":"4623","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"4624","messages":"4625","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"4626","messages":"4627","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"4628","messages":"4629","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"4630","messages":"4631","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"4632","messages":"4633","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"4634","messages":"4635","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"4636","messages":"4637","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"4638","messages":"4639","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"4640","messages":"4641","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"4642","messages":"4643","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"4644","messages":"4645","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"4646","messages":"4647","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"4648","messages":"4649","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"4650","messages":"4651","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"4652","messages":"4653","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"4654","messages":"4655","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"4656","messages":"4657","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"4658","messages":"4659","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"4660","messages":"4661","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/danielvitor/Documentos/Develop/stonebank_front/src/components/App/index.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/components/App/App.tsx",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/components/App/App.style.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/_config/theme.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/redux/StoreProvider.tsx",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/_config/index.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/_translate/index.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/components/Router/index.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/mocks/mirage/index.ts",["4662","4663"],"import { createServer, Model, Factory, Response } from \"miragejs\"\n\nexport function makeServer({\n  environment = \"test\"\n}) {\n  return createServer({\n    environment,\n\n    // factories: {\n    //   account: Factory.extend<Partial<Account>>({\n    //     id() {\n    //       return faker.random.numeric(10)\n    //     },\n    //     name() {\n    //       return faker.name.fullName()\n    //     }\n    //   })\n    // },\n\n    // models: {\n    //   account: Model.extend<Partial<Account>>({}),\n    // },\n\n    routes() {\n      // this.namespace = \"\";\n\n      this.get(\"accounts\")\n\n      this.get('/auth', async (schema, request) => {\n        return new Response(\n          200,\n          { 'x-application-token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJhcHAiOiIxMjMiLCJub25jZSI6ImNmZGUwYjA5LWQwNjYtNGE2Ny04ZTRjLTJjMTkxNWE3N2NhOCIsInJvbGUiOiJkZWZhdWx0IiwibmJmIjoxNjYzNTUwNzU2LCJleHAiOjE2NjM1NTA3NTcsImlhdCI6MTY2MzU1MDc1Nn0.9u5-VZEg9IQr_0xWD0XcyneYiAdNDmHQUM22OIZMTQs' }\n        )\n      })\n\n      this.post('/Auth/Login', (schema, request) => {\n        let attrs = JSON.parse(request.requestBody)\n\n        return new Response(\n          200,\n          {},\n          {\n            data: {\n              token: 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkRhbmllbCIsImlhdCI6MTY1NjMzOTAyMiwiZXhwIjoiMTY2NDk0NDk3OTcxMCJ9.Y2GbGIzfMbPa7yqyKXceQDwMaS7XJE22qg6QwOabZ98',\n              userId: \"123456\",\n              taxId: attrs['login'].replace(/\\D/g, \"\"),\n              name: \"Daniel\",\n              mail: \"danielvitor@gmail.com\",\n              phoneNumber: \"123331234\",\n              zipCode: \"12345-43\",\n              street: \"Rua X\",\n              number: \"123\",\n              district: \"Centro\",\n              complement: \"\",\n              city: \"Quixadá\",\n              state: \"Ceará\",\n              reference: \"\",\n              country: \"Brasil\",\n              isFirstAccess: false,\n              acceptedTerms: true,\n              tokenAccess: \"1234\",\n              accountId: \"123456\"\n            }\n          }\n        )\n      })\n\n      this.post('/Account/FindAccountDashboard', (schema, request) => {\n\n        return new Response(\n          200,\n          {},\n          {}\n        )\n      })\n    },\n\n    // seeds(server) {\n    //   server.createList(\"account\", 20)\n    // }\n  })\n}","/home/danielvitor/Documentos/Develop/stonebank_front/src/redux/initializeStore.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/redux/state.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/_config/configProvider.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/_config/context.tsx",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/components/Router/Router.tsx",["4664"],"import { BrowserRouter, Route, Switch } from \"react-router-dom\";\nimport { ProtectedRoute } from \"components/ProtectedRoute\";\nimport { SignIn } from \"features/authentication/pages/SignIn\";\nimport { Welcome } from \"features/onboarding/pages/Welcome\";\nimport { Terms } from \"features/onboarding/pages/Terms\";\nimport { ActivateAccount } from \"features/onboarding/pages/ActivateAccount\";\nimport { AccountActivationCompleted } from \"features/onboarding/pages/AccountActivationCompleted\";\nimport { AccountActivationCompletedForCard } from \"features/onboarding/pages/AccountActivationCompletedForCard\";\nimport { CreatePassword } from \"features/onboarding/pages/ActivateBySMS/CreatePasswordForSMS\";\nimport { ConfirmPassword } from \"features/onboarding/pages/ActivateBySMS/ConfirmPasswordForSMS\";\nimport { ActivationToken } from \"features/onboarding/pages/ActivateBySMS/ActivationTokenForSMS\";\nimport { EnterTaxPayer } from \"features/onboarding/pages/ActivateBySMS/EnterTaxPayerForSMS\";\nimport { EnterTaxPayerForCard } from \"features/onboarding/pages/ActivateByCard/EnterTaxPayerForCard\";\nimport { EnterIdentifierForCard } from \"features/onboarding/pages/ActivateByCard/EnterIdentifierForCard\";\nimport { EnterDigitsForCard } from \"features/onboarding/pages/ActivateByCard/EnterDigitsForCard\";\nimport { EnterPhoneForCard } from \"features/onboarding/pages/ActivateByCard/EnterPhoneForCard\";\nimport { CreatePasswordForCard } from \"features/onboarding/pages/ActivateByCard/CreatePasswordForCard\";\nimport { ConfirmPasswordForCard } from \"features/onboarding/pages/ActivateByCard/ConfirmPasswordForCard\";\nimport { InvalidDataForCard } from \"features/onboarding/pages/ActivateByCard/InvalidDataForCard\";\nimport { EnterBirthDateForCard } from \"features/onboarding/pages/ActivateByCard/EnterBirthDateForCard\";\nimport { AccountEmail } from \"features/onboarding/pages/AccountEmail\";\nimport { BankStatement } from \"features/account/pages/BankStatement\";\nimport { Home } from \"features/account/pages/Home\";\nimport { StoneBankHome } from \"features/account/pages/StoneBankHome\";\nimport { AllAccounts } from \"features/account/pages/AllAccounts\";\nimport { SignOut } from \"features/authentication/pages/SignOut\";\nimport { AccountSettings } from \"features/account/pages/AccountSettings\";\nimport { BankStatementFilter } from \"features/account/pages/BankStatementFilter\";\nimport { Details } from \"features/account/pages/Details\";\nimport { Receipt } from \"features/account/pages/Receipt\";\nimport { OnboardingRoutes } from \"features/onboarding/constants/routes\";\nimport { AuthenticationRoutes } from \"features/authentication/constants/routes\";\nimport { AccountRoutes } from \"features/account/constants/routes\";\nimport { AttachDocuments } from \"features/transference/pages/AttachDocuments\";\nimport { FavoredAccountSelection } from \"features/transference/pages/FavoredAccountSelection\";\nimport { ScheduleTransfer } from \"features/transference/pages/ScheduleTransfer\";\nimport { Summary } from \"features/transference/pages/Summary/Summary\";\nimport { TransferDescription } from \"features/transference/pages/TransferDescription\";\nimport { Transference } from \"features/transference/pages/Transference/Transference\";\nimport { TransferReceipt } from \"features/transference/pages/TransferReceipt/\";\nimport { TransferValue } from \"features/transference/pages/TransferValue\";\nimport { TransferenceRoutes } from \"features/transference/constants/routes\";\nimport { FavoredIdentification } from \"features/transference/pages/FavoredIdentification\";\nimport { UserRoutes } from \"features/user/constants/routes\";\nimport { UserInformation } from \"features/user/pages/UserInformation\";\nimport { ChangeEmail } from \"features/user/pages/ChangeEmail\";\nimport { ChangePhone } from \"features/user/pages/ChangePhone\";\nimport { ChangeNickname } from \"features/user/pages/ChangeNickname\";\nimport { ChangePassword } from \"features/user/pages/ChangePassword\";\nimport { ChooseNewPassword } from \"features/user/pages/ChooseNewPassword\";\nimport { ConfirmNewPasswordUserInformation } from \"features/user/pages/ConfirmNewPassword\";\nimport { CurrentAddress } from \"features/user/pages/CurrentAddress\";\nimport { ChangeAddress } from \"features/user/pages/ChangeAddress\";\nimport { ChangeConclude } from \"features/user/pages/ChangeConclude\";\nimport { FavoredName } from \"features/transference/pages/FavoredName\";\nimport { SelectBank } from \"features/transference/pages/SelectBank\";\nimport { SelectAccountType } from \"features/transference/pages/SelectAccountType\";\nimport { BankBranch } from \"features/transference/pages/BankBranch\";\nimport { AccountNumber } from \"features/transference/pages/AccountNumber\";\nimport { EditAccount } from \"features/account/pages/EditAccount\";\nimport { QrCodeTransferRoutes } from \"features/qrCodeTransfer/constants/routes\";\nimport { QrCodeTransfer } from \"features/qrCodeTransfer/pages/QrCodeTransfer/QrCodeTransfer\";\nimport { GenerateQrCodeTransfer } from \"features/qrCodeTransfer/pages/GenerateQrCodeTransfer/GenerateQrCodeTransfer\";\nimport { ShowQrCodeTransfer } from \"features/qrCodeTransfer/pages/ShowQrCodeTransfer\";\nimport { ReadQrCodeTransfer } from \"features/qrCodeTransfer/pages/ReadQrCodeTransfer\";\nimport { QrCodeTransferSendingDetails } from \"features/qrCodeTransfer/pages/QrCodeTransferSendingDetails\";\nimport { ValidatePhone } from \"features/onboarding/pages/ActivateBySMS/ValidatePhoneForSMS/ValidatePhoneForSMS\";\nimport { BirthDate } from \"features/onboarding/pages/ActivateBySMS/BirthDateForSMS\";\nimport { CreateName } from \"features/onboarding/pages/ActivateBySMS/CreateNameForSMS\";\nimport { CardRoutes } from \"features/card/constants/routes\";\nimport { CardManagement } from \"features/card/pages/CardManagement\";\nimport { CardOption } from \"features/card/pages/CardOption\";\nimport { EnterCurrentPassword } from \"features/card/pages/ChangePassword/EnterCurrentPassword\";\nimport { EnterNewPassword } from \"features/card/pages/ChangePassword/EnterNewPassword\";\nimport { ConfirmNewPassword } from \"features/card/pages/ChangePassword/ConfirmNewPassword\";\nimport { CancellationReplacementCard } from \"features/card/pages/CancellationReplacementCard\";\nimport { CancelReason } from \"features/card/pages/Cancellation/CancelReason\";\nimport { CancelCardAlert } from \"features/card/pages/Cancellation/CancelCardAlert\";\nimport { BlockingReason } from \"features/card/pages/RequestDuplicate/BlockingReason\";\nimport { BlockCardAlert } from \"features/card/pages/RequestDuplicate/BlockCardAlert\";\nimport { AddressConfirmation } from \"features/card/pages/RequestDuplicate/AddressConfirmation\";\nimport { ReplacementDetails } from \"features/card/pages/RequestDuplicate/ReplacementDetails\";\nimport { UpdateAddress } from \"features/card/pages/RequestDuplicate/UpdateAddress\";\nimport { AssociateNewCard } from \"features/card/pages/AssociateNewCard/AssociateNewCard\";\nimport { AssociateFourDigits } from \"features/card/pages/AssociateNewCard/AssociateFourDigits\";\nimport { AssociateNewCardCheckData } from \"features/card/pages/AssociateNewCard/AssociateNewCardCheck\";\nimport { LandingPage } from \"features/onboarding/pages/LandingPage\";\nimport { TaxPaymentRoutes } from \"features/taxPayment/constants/routes\";\nimport { PaymentDarj } from \"features/taxpayment/pages/Darj/PaymentDarj\";\nimport { PaymentDarjType } from \"features/taxPayment/pages/Darj/PaymentDarjType\";\nimport { PaymentDarjValues } from \"features/taxPayment/pages/Darj/PaymentDarjValues\";\nimport { PaymentDarjDueDate } from \"features/taxPayment/pages/Darj/PaymentDarjDueDate\";\nimport { PaymentDarjDescription } from \"features/taxpayment/pages/Darj/PaymentDarjDescription\";\nimport { PaymentDarjSummary } from \"features/taxpayment/pages/Darj/PaymentDarjSummary\";\nimport { PaymentDarjCodeNumber } from \"features/taxpayment/pages/Darj/PaymentDarjCodeNumber\";\nimport { PaymentGare } from \"features/taxPayment/pages/Gare/PaymentGare\";\nimport { PaymentGareDateType } from \"features/taxPayment/pages/Gare/PaymentGareDateType\";\nimport { PaymentGareValues } from \"features/taxPayment/pages/Gare/PaymentGareValues/PaymentGareValues\";\nimport { PaymentGareDueDate } from \"features/taxPayment/pages/Gare/PaymentGareDueDate\";\nimport { PaymentGareDescription } from \"features/taxPayment/pages/Gare/PaymentGareDescription\";\nimport { PaymentGareSummary } from \"features/taxPayment/pages/Gare/PaymentGareSummary\";\nimport { PaymentGareCodeNumber } from \"features/taxPayment/pages/Gare/PaymentGareCodeNumber\";\nimport { PaymentFgts } from \"features/taxPayment/pages/Fgts/PaymentFgts\";\nimport { PaymentFgtsValues } from \"features/taxPayment/pages/Fgts/PaymentFgtsValues\";\nimport { PaymentFgtsIdentifier } from \"features/taxPayment/pages/Fgts/PaymentFgtsIdentifier\";\nimport { PaymentFgtsDate } from \"features/taxPayment/pages/Fgts/PaymentFgtsDate\";\nimport { PaymentFgtsDescription } from \"features/taxPayment/pages/Fgts/PaymentFgtsDescription\";\nimport { PaymentFgtsSummary } from \"features/taxPayment/pages/Fgts/PaymentFgtsSummary\";\nimport { PaymentFgtsBarCode } from \"features/taxPayment/pages/Fgts/PaymentFgtsBarCode\";\nimport { PaymentFgtsCodeRevenue } from \"features/taxPayment/pages/Fgts/PaymentFgtsCodeRevenue\";\nimport { TopUpSchedule } from \"features/topUp/pages/TopUpSchedule\";\nimport { TopUpNumber } from \"features/topUp/pages/TopUpNumber\";\nimport { Help } from \"features/account/pages/Help\";\nimport { TopUp } from \"features/topUp/pages/TopUp\";\nimport { PeriodicRepetition } from \"features/topUp/pages/PeriodicRepetition\";\nimport { TopUpRoutes } from \"features/topUp/constants/routes\";\nimport { TopUpValue } from \"features/topUp/pages/TopUpValue\";\nimport { CheckDataTopUp } from \"features/topUp/pages/CheckDataTopUp\";\nimport { CompleteTopUp } from \"features/topUp/pages/CompleteTopUp\";\nimport { ActivateCard } from \"features/card/pages/ActivateCard/ActivateCard\";\nimport { ActivateCardConclude } from \"features/card/pages/ActivateCard/ActivateCardConclude\";\nimport { PasswordCard } from \"features/card/pages/ActivateCard/PasswordCard\";\nimport { ConfirmPasswordCard } from \"features/card/pages/ActivateCard/ConfirmPasswordCard\";\nimport { ConfirmationActivate } from \"features/card/pages/ActivateCard/ConfirmationActivate\";\nimport { TaxPaymentHome } from \"features/taxPayment/pages/taxPaymentHome\";\nimport { SmsTransferRoutes } from \"features/smsTransfer/constants/routes\";\nimport { SmsTransferNumber } from \"features/smsTransfer/pages/SmsTransferNumber\";\nimport { SmsTransferValue } from \"features/smsTransfer/pages/SmsTransferValue\";\nimport { SmsTransferSummary } from \"features/smsTransfer/pages/SmsTransferSummary\";\nimport { TransferProcess } from \"features/transference/pages/TransferProcess\";\nimport { SchedulePayments } from \"features/schedulePayments/constants/routes\";\nimport { ScheduleTransactions } from \"features/schedulePayments/pages/ScheduleTransactions\";\nimport { FutureTransactions } from \"features/schedulePayments/pages/FutureTransactions\";\nimport { ScheduleTransactionsList } from \"features/schedulePayments/pages/ScheduleTransactionsList\";\nimport { SheduleTransactionsFilter } from \"features/schedulePayments/pages/SheduleTransactionsFilter\";\nimport { ChangePasswordFirstAccess } from \"features/authentication/pages/FirstAccess/ChangePasswordFirstAccess\";\nimport { ConfirmPasswordFirstAccess } from \"features/authentication/pages/FirstAccess/ConfirmPasswordFirstAccess\";\nimport { ChangePasswordCompleted } from \"features/authentication/pages/FirstAccess/ChangePasswordCompleted\";\nimport { RecoverPassword } from \"features/authentication/pages/RecoverPassword/RecoverPassword\";\nimport { ConfirmRecoverPwd } from \"features/authentication/pages/ConfirmRecoverPwd\";\nimport { TemporaryPassword } from \"features/authentication/pages/TemporaryPassword\";\nimport { SmsAccountsExibition } from \"features/smsTransfer/pages/SmsAccountsExibition\";\nimport { SmsTransferName } from \"features/smsTransfer/pages/SmsTransferName\";\nimport { AssociateNameUserCard } from \"features/card/pages/AssociateNewCard/AssociateNameUserCard\";\nimport { AssociateNationalityCard } from \"features/card/pages/AssociateNewCard/AssociateNationalityCard\";\nimport { AssociateMotherNameCard } from \"features/card/pages/AssociateNewCard/AssociateMotherNameCard\";\nimport { AssociateBirthDateCard } from \"features/card/pages/AssociateNewCard/AssociateBirthDateCard\";\nimport { AssociateGenderUserCard } from \"features/card/pages/AssociateNewCard/AssociateGenderUserCard/AssociateGenderUserCard\";\nimport { AssociateMaritalStatusCard } from \"features/card/pages/AssociateNewCard/AssociateMaritalStatusCard/AssociateMaritalStatusCard\";\nimport { ConcludeAssociateCard } from \"features/card/pages/AssociateNewCard/ConcludeAssociateCard\";\nimport { InvalidDataForAssociateCard } from \"features/card/pages/AssociateNewCard/InvalidDataForAssociateCard\";\nimport { ConclusionFlow } from \"components/ConclusionFlow\";\nimport {\n  ChangeValue,\n  PaymentAttach,\n  PaymentData,\n  PaymentDescription,\n  PaymentHome,\n  PaymentReceipt,\n  PaymentRoutes,\n  PaymentSummary,\n  ScanBarcode,\n  PaymentProcess,\n} from \"features/payment\";\nimport { EnterMailForSms } from \"features/onboarding/pages/ActivateBySMS/EnterMailForSms\";\nimport {\n  DigitalWithdrawalStart,\n  DigitalWithdrawalSuccess,\n  DigitalWithdrawalReceipt,\n  DigitalWithdrawalRoutes,\n  MoneyCount,\n  SelectValue,\n  ReadQrCodeDigitalWithdrawal,\n  DigitalWithdrawalSummary,\n} from \"features/digitalWithdrawal\";\nimport { WithFirstAccessControl } from \"components/WithFirstAccessControl\";\nimport { CancelPeriodicRepetition } from \"features/topUp/pages/CancelPeriodicTopUp\";\n\n//------------------------------------------\nimport { PixRoutes } from \"features/pix/constants/routes\";\nimport {\n  PixArea,\n  PixKeyList,\n  ConfirmEmailPixKey,\n  ConfirmPhoneNumberPixKey,\n  CreateRandomPixKey,\n  CreateTaxIdPixKey,\n  CreatePhoneNumberPixKey,\n  CreateEmailPixKey,\n  PixTransferHome,\n  KeyPixTransfer,\n  KeyPixTransferPayeeInfo,\n  KeyPixTransferValue,\n  KeyPixTransferDescription,\n  KeyPixTransferSummary,\n  PixTransferProcess,\n  QrCodePixTransferScanner,\n  QrCodePixTransferDescription,\n  QrCodePixTransferValue,\n  QrCodePixTransferSummary,\n  BankPixTransferPayeeName,\n  BankPixTransferPayeeTaxId,\n  BankPixTransferSelectBank,\n  BankPixTransferAccountType,\n  BankDataPixTransferBranch,\n  BankDataPixTransferAccount,\n  BankPixTransferValue,\n  BankPixTransferDescription,\n  BankPixTransferSummary,\n  FirstAccess,\n  FirstAccessPixKeyList,\n  ReceivePixTransferQrCode,\n  ReceivePixTransferQrCodeValue,\n  ReceivePixTransferQrCodeCheck,\n} from \"features/pix/pages\";\n//------------------------------------------\n\nexport const Router: React.FC = () => {\n  return (\n    <BrowserRouter>\n      <Switch>\n        <Route exact path={OnboardingRoutes.welcome} component={Welcome} />\n        <Route path={OnboardingRoutes.terms} component={Terms} />\n        <Route\n          exact\n          path={OnboardingRoutes.activateAccount}\n          component={ActivateAccount}\n        />\n        <Route\n          path={OnboardingRoutes.activationTokenForSMS}\n          component={ActivationToken}\n        />\n        <Route\n          path={OnboardingRoutes.enterTaxPayerForSMS}\n          component={EnterTaxPayer}\n        />\n        <Route\n          path={OnboardingRoutes.enterMailForSms}\n          component={EnterMailForSms}\n        />\n        <Route\n          path={OnboardingRoutes.createPasswordForSMS}\n          component={CreatePassword}\n        />\n        <Route\n          path={OnboardingRoutes.confirmPasswordForSMS}\n          component={ConfirmPassword}\n        />\n        <Route\n          path={OnboardingRoutes.accountActivationCompletedForSMS}\n          component={AccountActivationCompleted}\n        />\n        <Route path={OnboardingRoutes.birthDateForSMS} component={BirthDate} />\n        <Route\n          path={OnboardingRoutes.createNameForSMS}\n          component={CreateName}\n        />\n\n        <Route\n          path={OnboardingRoutes.validatePhoneForSMS}\n          component={ValidatePhone}\n        />\n\n        <Route path={OnboardingRoutes.accountEmail} component={AccountEmail} />\n\n        <Route\n          path={OnboardingRoutes.accountActivationCompletedForCard}\n          component={AccountActivationCompletedForCard}\n        />\n        <Route\n          path={OnboardingRoutes.enterTaxPayerForCard}\n          component={EnterTaxPayerForCard}\n        />\n        <Route\n          path={OnboardingRoutes.enterIdentifierForCard}\n          component={EnterIdentifierForCard}\n        />\n        <Route\n          path={OnboardingRoutes.enterDigitsForCard}\n          component={EnterDigitsForCard}\n        />\n        <Route\n          path={OnboardingRoutes.enterPhoneForCard}\n          component={EnterPhoneForCard}\n        />\n        <Route\n          path={OnboardingRoutes.createPasswordForCard}\n          component={CreatePasswordForCard}\n        />\n        <Route\n          path={OnboardingRoutes.confirmPasswordForCard}\n          component={ConfirmPasswordForCard}\n        />\n        <Route\n          path={OnboardingRoutes.invalidDataForCard}\n          component={InvalidDataForCard}\n        />\n        <Route\n          path={OnboardingRoutes.enterBirthdayForCard}\n          component={EnterBirthDateForCard}\n        />\n        <Route\n          path={AuthenticationRoutes.recoverPassword}\n          component={RecoverPassword}\n        />\n        <Route path={OnboardingRoutes.landingPage} component={LandingPage} />\n        <Route\n          exact\n          path={AuthenticationRoutes.confirmRecoverPwd}\n          component={ConfirmRecoverPwd}\n        />\n\n        {/* #### QRCODE-TRANSFER ROUTES ##### */}\n        <Route\n          exact\n          path={QrCodeTransferRoutes.qrCodeTransfer}\n          component={QrCodeTransfer}\n        />\n        <Route\n          exact\n          path={QrCodeTransferRoutes.generateQrCodeTransfer}\n          component={GenerateQrCodeTransfer}\n        />\n        <Route\n          exact\n          path={QrCodeTransferRoutes.viewQrCodeTransfer}\n          component={ShowQrCodeTransfer}\n        />\n        <Route\n          exact\n          path={QrCodeTransferRoutes.readQrCodeTransfer}\n          component={ReadQrCodeTransfer}\n        />\n        <Route\n          exact\n          path={QrCodeTransferRoutes.sendQrCodeTransfer}\n          component={QrCodeTransferSendingDetails}\n        />\n        <Route\n          exact\n          path={QrCodeTransferRoutes.completedTransfer}\n          component={ConclusionFlow}\n        />\n        <Route\n          exact\n          path={SchedulePayments.ScheduleTransactions}\n          component={ScheduleTransactions}\n        />\n        <Route\n          exact\n          path={SchedulePayments.FutureTransactions}\n          component={FutureTransactions}\n        />\n        <Route\n          exact\n          path={SchedulePayments.ScheduleTransactionsList}\n          component={ScheduleTransactionsList}\n        />\n        <Route\n          exact\n          path={SmsTransferRoutes.smsTransferNumber}\n          component={SmsTransferNumber}\n        />\n        <Route\n          exact\n          path={SmsTransferRoutes.smsTransferValue}\n          component={SmsTransferValue}\n        />\n        <Route\n          exact\n          path={SchedulePayments.ScheduleTransactionsList}\n          component={ScheduleTransactionsList}\n        />\n        <Route\n          exact\n          path={SchedulePayments.SheduleTransactionsFilter}\n          component={SheduleTransactionsFilter}\n        />\n        <Route\n          exact\n          path={SmsTransferRoutes.smsTransferSummary}\n          component={SmsTransferSummary}\n        />\n        <Route\n          exact\n          path={SmsTransferRoutes.completedSmsTransfer}\n          component={ConclusionFlow}\n        />\n        <Route\n          exact\n          path={SmsTransferRoutes.SmsAccountsExibition}\n          component={SmsAccountsExibition}\n        />\n        <Route\n          exact\n          path={SmsTransferRoutes.SmsTransferName}\n          component={SmsTransferName}\n        />\n        <Route exact path={UserRoutes.home} component={UserInformation} />\n        <Route exact path={UserRoutes.changeEmail} component={ChangeEmail} />\n        <Route exact path={UserRoutes.changePhone} component={ChangePhone} />\n        <Route\n          exact\n          path={UserRoutes.changeChangeNickname}\n          component={ChangeNickname}\n        />\n        <Route exact path={UserRoutes.changeEmail} component={ChangeEmail} />\n        <Route\n          exact\n          path={UserRoutes.changePassword}\n          component={ChangePassword}\n        />\n        <Route\n          exact\n          path={UserRoutes.chooseNewPassword}\n          component={ChooseNewPassword}\n        />\n        <Route\n          exact\n          path={UserRoutes.confirmNewPassword}\n          component={ConfirmNewPasswordUserInformation}\n        />\n        <Route\n          exact\n          path={UserRoutes.currentAddress}\n          component={CurrentAddress}\n        />\n        <Route\n          exact\n          path={UserRoutes.changeAddress}\n          component={ChangeAddress}\n        />\n        <Route\n          exact\n          path={UserRoutes.changeConclude}\n          component={ChangeConclude}\n        />\n        <Route path={OnboardingRoutes.accountActivationCompletedForCard}>\n          <AccountActivationCompletedForCard activeTwoButtons={true} />\n        </Route>\n        <Route path={AuthenticationRoutes.signIn} component={SignIn} />\n        <Route path={AuthenticationRoutes.signOut} component={SignOut} />\n        <Route\n          path={AuthenticationRoutes.temporaryPassword}\n          component={TemporaryPassword}\n        />\n        <Route\n          path={AuthenticationRoutes.changePasswordFirstAccess}\n          component={ChangePasswordFirstAccess}\n        />\n        <Route\n          path={AuthenticationRoutes.confirmPasswordFirstAccess}\n          component={ConfirmPasswordFirstAccess}\n        />\n        <Route\n          path={AuthenticationRoutes.changePasswordCompleted}\n          component={ChangePasswordCompleted}\n        />\n\n        <Route\n          exact\n          path={AccountRoutes.filter}\n          component={BankStatementFilter}\n        />\n        <Route exact path={AccountRoutes.detail} component={Details} />\n\n        <Route exact path={AccountRoutes.home} component={Home} />\n\n        <Route\n          exact\n          path={AccountRoutes.stoneBankHome}\n          component={StoneBankHome}\n        />\n\n        <Route\n          exact\n          path={AccountRoutes.bankStatement}\n          component={BankStatement}\n        />\n        <Route\n          exact\n          path={AccountRoutes.settings}\n          component={AccountSettings}\n        />\n        <Route exact path={AccountRoutes.help} component={Help} />\n        <Route\n          exact\n          path={PaymentRoutes.barcodeScanner}\n          component={ScanBarcode}\n        />\n        <Route exact path={PaymentRoutes.details} component={PaymentData} />\n        <Route exact path={PaymentRoutes.changeValue} component={ChangeValue} />\n        <Route\n          exact\n          path={PaymentRoutes.paymentProcess}\n          component={PaymentProcess}\n        />\n        <Route\n          exact\n          path={PaymentRoutes.paymentEmptyDescription}\n          component={PaymentDescription}\n        />\n        <Route\n          exact\n          path={PaymentRoutes.completedPayment}\n          component={ConclusionFlow}\n        />\n        <Route\n          exact\n          path={PaymentRoutes.paymentReceipt}\n          component={PaymentReceipt}\n        />\n        <Route\n          exact\n          path={PaymentRoutes.paymentAttach}\n          component={PaymentAttach}\n        />\n\n        <Route exact path={PaymentRoutes.summary} component={PaymentSummary} />\n        <Route exact path={AccountRoutes.allAccounts} component={AllAccounts} />\n        <Route exact path={AccountRoutes.receipt} component={Receipt} />\n        <Route exact path={AccountRoutes.detail} component={Details} />\n        <Route exact path={AccountRoutes.editAccount} component={EditAccount} />\n        <Route\n          exact\n          path={PaymentRoutes.barcodePayment}\n          component={PaymentHome}\n        />\n        <Route exact path={AccountRoutes.home} component={Home} />\n        <Route\n          exact\n          path={TransferenceRoutes.favoredIdentification}\n          component={FavoredIdentification}\n        />\n        <Route\n          exact\n          path={TransferenceRoutes.favoredName}\n          component={FavoredName}\n        />\n        <Route\n          exact\n          path={TransferenceRoutes.selectBank}\n          component={SelectBank}\n        />\n        <Route\n          exact\n          path={TransferenceRoutes.selectAccountType}\n          component={SelectAccountType}\n        />\n        <Route\n          exact\n          path={TransferenceRoutes.bankBranch}\n          component={BankBranch}\n        />\n        <Route\n          exact\n          path={TransferenceRoutes.accountNumber}\n          component={AccountNumber}\n        />\n        <Route\n          exact\n          path={TransferenceRoutes.attachDocuments}\n          component={AttachDocuments}\n        />\n        <Route\n          exact\n          path={TransferenceRoutes.processTransfer}\n          component={TransferProcess}\n        />\n        <Route\n          exact\n          path={TransferenceRoutes.favoredAccountSelection}\n          component={FavoredAccountSelection}\n        />\n        <Route\n          exact\n          path={TransferenceRoutes.schedule}\n          component={ScheduleTransfer}\n        />\n        <Route exact path={TransferenceRoutes.summary} component={Summary} />\n        <Route\n          exact\n          path={TransferenceRoutes.description}\n          component={TransferDescription}\n        />\n        <Route\n          exact\n          path={TransferenceRoutes.voucherTransfer}\n          component={TransferReceipt}\n        />\n        <Route\n          exact\n          path={TransferenceRoutes.value}\n          component={TransferValue}\n        />\n        <Route\n          exact\n          path={TransferenceRoutes.transference}\n          component={Transference}\n        />\n        <Route\n          exact\n          path={CardRoutes.cardManagement}\n          component={CardManagement}\n        />\n        <Route exact path={CardRoutes.cardOption} component={CardOption} />\n        <Route\n          exact\n          path={CardRoutes.enterCurrentPassword}\n          component={EnterCurrentPassword}\n        />\n        <Route\n          exact\n          path={CardRoutes.enterNewPassword}\n          component={EnterNewPassword}\n        />\n        <Route\n          exact\n          path={CardRoutes.confirmNewPassword}\n          component={ConfirmNewPassword}\n        />\n        <Route\n          exact\n          path={CardRoutes.cancel}\n          component={CancellationReplacementCard}\n        />\n        <Route exact path={CardRoutes.cancelReason} component={CancelReason} />\n        <Route\n          exact\n          path={CardRoutes.cancelWarning}\n          component={CancelCardAlert}\n        />\n        <Route\n          exact\n          path={CardRoutes.reissueReason}\n          component={BlockingReason}\n        />\n        <Route\n          exact\n          path={CardRoutes.reissueWarning}\n          component={BlockCardAlert}\n        />\n        <Route\n          exact\n          path={CardRoutes.address}\n          component={AddressConfirmation}\n        />\n        <Route\n          exact\n          path={CardRoutes.reissueDetails}\n          component={ReplacementDetails}\n        />\n        <Route\n          exact\n          path={CardRoutes.updateAddress}\n          component={UpdateAddress}\n        />\n        <Route\n          exact\n          path={CardRoutes.associateNewCard}\n          component={AssociateNewCard}\n        />\n        <Route\n          exact\n          path={CardRoutes.activeFourDigits}\n          component={AssociateFourDigits}\n        />\n        <Route\n          path={CardRoutes.invalidDataForCard}\n          component={InvalidDataForAssociateCard}\n        />\n        <Route\n          exact\n          path={CardRoutes.associateNewCardCheck}\n          component={AssociateNewCardCheckData}\n        />\n        <Route\n          exact\n          path={CardRoutes.associateMotherNameCard}\n          component={AssociateMotherNameCard}\n        />\n        <Route\n          exact\n          path={CardRoutes.associateNationalityCard}\n          component={AssociateNationalityCard}\n        />\n        <Route\n          exact\n          path={CardRoutes.associateNameUserCard}\n          component={AssociateNameUserCard}\n        />\n        <Route\n          exact\n          path={CardRoutes.associateBirthDateCard}\n          component={AssociateBirthDateCard}\n        />\n        <Route\n          exact\n          path={CardRoutes.associateGenderUserCard}\n          component={AssociateGenderUserCard}\n        />\n        <Route\n          exact\n          path={CardRoutes.associateMaritalStatusCard}\n          component={AssociateMaritalStatusCard}\n        />\n\n        <Route\n          exact\n          path={CardRoutes.concludeAssociateCard}\n          component={ConcludeAssociateCard}\n        />\n\n        <Route\n          exact\n          path={TaxPaymentRoutes.otherPayment}\n          component={TaxPaymentHome}\n        />\n        <Route\n          exact\n          path={TaxPaymentRoutes.paymentDarj}\n          component={PaymentDarj}\n        />\n        <Route\n          exact\n          path={TaxPaymentRoutes.paymentDarjType}\n          component={PaymentDarjType}\n        />\n        <Route\n          exact\n          path={TaxPaymentRoutes.paymentDarjCodeNumber}\n          component={PaymentDarjCodeNumber}\n        />\n        <Route\n          exact\n          path={TaxPaymentRoutes.paymentDarjValues}\n          component={PaymentDarjValues}\n        />\n        <Route\n          exact\n          path={TaxPaymentRoutes.paymentDarjDueDate}\n          component={PaymentDarjDueDate}\n        />\n        <Route\n          exact\n          path={TaxPaymentRoutes.paymentDarjDescription}\n          component={PaymentDarjDescription}\n        />\n        <Route\n          exact\n          path={TaxPaymentRoutes.paymentDarjSummary}\n          component={PaymentDarjSummary}\n        />\n        <Route\n          exact\n          path={TaxPaymentRoutes.paymentDarjConclude}\n          component={ConclusionFlow}\n        />\n\n        <Route\n          exact\n          path={TaxPaymentRoutes.paymentGare}\n          component={PaymentGare}\n        />\n        <Route\n          exact\n          path={TaxPaymentRoutes.paymentGareType}\n          component={PaymentGareDateType}\n        />\n        <Route\n          exact\n          path={TaxPaymentRoutes.paymentGareCodeNumber}\n          component={PaymentGareCodeNumber}\n        />\n        <Route\n          exact\n          path={TaxPaymentRoutes.paymentGareValues}\n          component={PaymentGareValues}\n        />\n        <Route\n          exact\n          path={TaxPaymentRoutes.paymentGareDueDate}\n          component={PaymentGareDueDate}\n        />\n        <Route\n          exact\n          path={TaxPaymentRoutes.paymentGareDescription}\n          component={PaymentGareDescription}\n        />\n        <Route\n          exact\n          path={TaxPaymentRoutes.paymentGareSummary}\n          component={PaymentGareSummary}\n        />\n        <Route\n          exact\n          path={TaxPaymentRoutes.paymentGareConclude}\n          component={ConclusionFlow}\n        />\n        <Route\n          exact\n          path={TaxPaymentRoutes.paymentFgts}\n          component={PaymentFgts}\n        />\n        <Route\n          exact\n          path={TaxPaymentRoutes.paymentFgtsBarCode}\n          component={PaymentFgtsBarCode}\n        />\n        <Route\n          exact\n          path={TaxPaymentRoutes.paymentFgtsCodeRevenue}\n          component={PaymentFgtsCodeRevenue}\n        />\n        <Route\n          exact\n          path={TaxPaymentRoutes.paymentFgtsValues}\n          component={PaymentFgtsValues}\n        />\n        <Route\n          exact\n          path={TaxPaymentRoutes.paymentFgtsIdentifier}\n          component={PaymentFgtsIdentifier}\n        />\n        <Route\n          exact\n          path={TaxPaymentRoutes.paymentFgtsDate}\n          component={PaymentFgtsDate}\n        />\n        <Route\n          exact\n          path={TaxPaymentRoutes.paymentFgtsDescription}\n          component={PaymentFgtsDescription}\n        />\n        <Route\n          exact\n          path={TaxPaymentRoutes.paymentFgtsSummary}\n          component={PaymentFgtsSummary}\n        />\n        <Route\n          exact\n          path={TaxPaymentRoutes.paymentFgtsConclude}\n          component={ConclusionFlow}\n        />\n        <Route\n          exact\n          path={TopUpRoutes.topUpSchedule}\n          component={TopUpSchedule}\n        />\n        <Route exact path={TopUpRoutes.topUpNumber} component={TopUpNumber} />\n        <Route exact path={TopUpRoutes.topUp} component={TopUp} />\n        <Route\n          exact\n          path={TopUpRoutes.periodicRepetition}\n          component={PeriodicRepetition}\n        />\n        <Route\n          exact\n          path={TopUpRoutes.completeTopUp}\n          component={CompleteTopUp}\n        />\n        <Route\n          exact\n          path={TopUpRoutes.checkDataTopUp}\n          component={CheckDataTopUp}\n        />\n        <Route exact path={TopUpRoutes.topUpValue} component={TopUpValue} />\n        <Route\n          exact\n          path={TopUpRoutes.concludeTopUp}\n          component={ConclusionFlow}\n        />\n        <Route exact path={CardRoutes.activateCard} component={ActivateCard} />\n        <Route\n          exact\n          path={CardRoutes.activateCardConclude}\n          component={ActivateCardConclude}\n        />\n        <Route exact path={CardRoutes.passwordCard} component={PasswordCard} />\n        <Route\n          exact\n          path={CardRoutes.confirmPasswordCard}\n          component={ConfirmPasswordCard}\n        />\n        <Route\n          exact\n          path={CardRoutes.confirmationActivate}\n          component={ConfirmationActivate}\n        />\n        <Route\n          exact\n          path={DigitalWithdrawalRoutes.digitalWithdrawalStart}\n          component={DigitalWithdrawalStart}\n        />\n        <Route\n          exact\n          path={DigitalWithdrawalRoutes.selectValue}\n          component={SelectValue}\n        />\n        <Route\n          path={DigitalWithdrawalRoutes.moneyCount}\n          component={MoneyCount}\n        />\n        <Route\n          exact\n          path={DigitalWithdrawalRoutes.digitalWithdrawalSuccess}\n          component={DigitalWithdrawalSuccess}\n        />\n        <Route\n          exact\n          path={DigitalWithdrawalRoutes.digitalWithdrawReceipt}\n          component={DigitalWithdrawalReceipt}\n        />\n        <Route\n          exact\n          path={DigitalWithdrawalRoutes.digitalWithdrawalSummary}\n          component={DigitalWithdrawalSummary}\n        />\n        <Route\n          exact\n          path={DigitalWithdrawalRoutes.readQrCodeDigitalWithdrawal}\n          component={ReadQrCodeDigitalWithdrawal}\n        />\n        <Route\n          exact\n          path={TopUpRoutes.cancelPeriodicTopUp}\n          component={CancelPeriodicRepetition}\n        />\n        <Route exact path={PixRoutes.firstAccess} component={FirstAccess} />\n        <Route\n          exact\n          path={PixRoutes.pixArea}\n          component={WithFirstAccessControl(PixArea, PixRoutes.firstAccess)}\n        />\n        <Route\n          exact\n          path={PixRoutes.firstAccessMyKeys}\n          component={FirstAccessPixKeyList}\n        />\n        <Route\n          exact\n          path={PixRoutes.pixKeyList}\n          component={WithFirstAccessControl(\n            PixKeyList,\n            PixRoutes.firstAccessMyKeys\n          )}\n        />\n        <Route\n          exact\n          path={PixRoutes.confirmEmailPixKeyToken}\n          component={ConfirmEmailPixKey}\n        />\n        <Route\n          exact\n          path={PixRoutes.confirmPhoneNumberPixKeyToken}\n          component={ConfirmPhoneNumberPixKey}\n        />\n        <Route\n          exact\n          path={PixRoutes.createTaxIdPixKey}\n          component={CreateTaxIdPixKey}\n        />\n        <Route\n          exact\n          path={PixRoutes.createEmailPixKey}\n          component={CreateEmailPixKey}\n        />\n        <Route\n          exact\n          path={PixRoutes.createPhoneNumberPixKey}\n          component={CreatePhoneNumberPixKey}\n        />\n        <Route\n          exact\n          path={PixRoutes.createRandomPixKey}\n          component={CreateRandomPixKey}\n        />\n        <Route\n          exact\n          path={PixRoutes.pixTransferHome}\n          component={PixTransferHome}\n        />\n        <Route\n          exact\n          path={PixRoutes.keyPixTransfer}\n          component={KeyPixTransfer}\n        />\n        <Route\n          exact\n          path={PixRoutes.keyPixTransferPayeeInfo}\n          component={KeyPixTransferPayeeInfo}\n        />\n        <Route\n          exact\n          path={PixRoutes.keyPixTransferValue}\n          component={KeyPixTransferValue}\n        />\n        <Route\n          exact\n          path={PixRoutes.keyPixTransferDescription}\n          component={KeyPixTransferDescription}\n        />\n        <Route\n          exact\n          path={PixRoutes.keyPixTransferSummary}\n          component={KeyPixTransferSummary}\n        />\n        <Route\n          exact\n          path={PixRoutes.pixTransferProcess}\n          component={PixTransferProcess}\n        />\n        <Route\n          exact\n          path={PixRoutes.bankPixTransferPayeeName}\n          component={BankPixTransferPayeeName}\n        />\n        <Route\n          exact\n          path={PixRoutes.bankPixTransferPayeeTaxId}\n          component={BankPixTransferPayeeTaxId}\n        />\n        <Route\n          exact\n          path={PixRoutes.bankPixTransferSelectBank}\n          component={BankPixTransferSelectBank}\n        />\n        <Route\n          exact\n          path={PixRoutes.bankPixTransferAccountType}\n          component={BankPixTransferAccountType}\n        />\n        <Route\n          exact\n          path={PixRoutes.bankDataPixTransferBranch}\n          component={BankDataPixTransferBranch}\n        />\n        <Route\n          exact\n          path={PixRoutes.bankDataPixTransferAccount}\n          component={BankDataPixTransferAccount}\n        />\n        <Route\n          exact\n          path={PixRoutes.bankPixTransferValue}\n          component={BankPixTransferValue}\n        />\n        <Route\n          exact\n          path={PixRoutes.bankPixTransferDescription}\n          component={BankPixTransferDescription}\n        />\n        <Route\n          exact\n          path={PixRoutes.bankPixTransferSummary}\n          component={BankPixTransferSummary}\n        />\n        <Route\n          exact\n          path={PixRoutes.qrCodePixTransferScanner}\n          component={QrCodePixTransferScanner}\n        />\n        <Route\n          exact\n          path={PixRoutes.qrCodePixTransferValue}\n          component={QrCodePixTransferValue}\n        />\n        <Route\n          exact\n          path={PixRoutes.qrCodePixTransferDescription}\n          component={QrCodePixTransferDescription}\n        />\n        <Route\n          exact\n          path={PixRoutes.qrCodePixTransferSummary}\n          component={QrCodePixTransferSummary}\n        />\n        <Route\n          exact\n          path={PixRoutes.receivePixTransferQrCode}\n          component={ReceivePixTransferQrCode}\n        />\n        <Route\n          exact\n          path={PixRoutes.receivePixTransferQrCodeValue}\n          component={ReceivePixTransferQrCodeValue}\n        />\n        <Route\n          exact\n          path={PixRoutes.receivePixTransferQrCodeCheck}\n          component={ReceivePixTransferQrCodeCheck}\n        />\n      </Switch>\n    </BrowserRouter>\n  );\n};\n","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/schedulePayments/redux/state.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/pix/redux/state.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/pix/pages/index.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/pix/pages/PixTransfer/PixTransferProcess/index.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/pix/pages/ReceivePixTransfer/ReceivePixTransferQrCodeValue/index.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/pix/pages/ReceivePixTransfer/ReceivePixTransferQrCodeCheck/index.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/pix/pages/ReceivePixTransfer/ReceivePixTransferQrCode/index.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/pix/pages/PixTransfer/BankTransfer/BankPixTransferSummary/index.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/pix/pages/PixTransfer/BankTransfer/BankPixTransferDescription/index.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/pix/pages/PixTransfer/BankTransfer/BankPixTransferValue/index.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/pix/pages/PixTransfer/BankTransfer/BankDataPixTransferAccount/index.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/pix/pages/PixTransfer/BankTransfer/BankDataPixTransferBranch/index.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/pix/pages/PixTransfer/BankTransfer/BankPixTransferAccountType/index.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/pix/pages/PixTransfer/BankTransfer/BankPixTransferSelectBank/index.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/pix/pages/PixTransfer/BankTransfer/BankPixTransferPayeeTaxId/index.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/pix/pages/PixTransfer/BankTransfer/BankPixTransferPayeeName/index.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/pix/pages/PixTransfer/PixTransferHome/index.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/pix/pages/PixTransfer/QrCodeTransfer/QrCodePixTransferSummary/index.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/pix/pages/PixTransfer/QrCodeTransfer/QrCodePixTransferDescription/index.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/pix/pages/PixTransfer/QrCodeTransfer/QrCodePixTransferValue/index.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/pix/pages/PixTransfer/QrCodeTransfer/QrCodePixTransferScanner/index.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/pix/pages/FirstAccess/index.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/pix/pages/PixArea/index.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/pix/pages/PixTransfer/KeyTransfer/KeyPixTransferSummary/index.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/pix/pages/PixTransfer/KeyTransfer/KeyTransferDescription/index.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/pix/pages/PixTransfer/KeyTransfer/KeyPixTransferValue/index.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/pix/pages/PixTransfer/KeyTransfer/KeyPixTransferPayeeInfo/index.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/pix/pages/PixTransfer/KeyTransfer/KeyPixTransfer/index.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/pix/pages/PixKeyManagement/CreateRandomPixKey/index.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/pix/pages/PixKeyManagement/CreatePhoneNumberPixKey/index.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/pix/pages/PixKeyManagement/CreateEmailPixKey/index.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/pix/pages/PixKeyManagement/CreateTaxIdPixKey/index.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/pix/pages/PixKeyManagement/ConfirmPhoneNumberPixKey/index.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/pix/pages/PixKeyManagement/ConfirmEmailPixKey/index.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/pix/pages/PixKeyManagement/PixKeyList/index.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/pix/pages/PixKeyManagement/FirstAccessPixKeyList/index.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/pix/pages/PixTransfer/BankTransfer/BankPixTransferPayeeName/BankPixTransferPayeeName.controller.tsx",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/pix/pages/PixTransfer/PixTransferHome/PixTransferHome.controller.tsx",["4665"],"/* eslint-disable react-hooks/exhaustive-deps */\nimport React from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { PixRoutes } from \"features/pix\";\nimport { PixTransferHomeView } from \"./PixTransferHome.view\";\nimport { AccountRoutes } from \"features/account/constants/routes\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { StoreState } from \"redux/state\";\nimport {\n  closeAlert,\n  findPixQrCodeInfo,\n  updateState,\n  updatePixTransfer,\n} from \"features/pix/redux/actions\";\nimport { AccountType } from \"features/pix/redux/models/accountType\";\n\nexport const PixTransferHome: React.FC = () => {\n  const history = useHistory();\n  const dispatch = useDispatch();\n\n  const [hashValue, setHashValue] = React.useState(\"\");\n  const [sentRequest, setSentRequest] = React.useState(false);\n\n  const { pixTransfer, pixQrCodeInfo, loading, errorMessage } = useSelector(\n    (state: StoreState) => state.pix\n  );\n\n  React.useEffect(() => {\n    dispatch(updateState());\n  }, []);\n\n  React.useEffect(() => {\n    if (sentRequest && pixTransfer)\n      pixTransfer?.value\n        ? history.push(PixRoutes.qrCodePixTransferSummary)\n        : history.push(PixRoutes.qrCodePixTransferValue);\n  }, [pixTransfer]);\n\n  React.useEffect(() => {\n    if (sentRequest && pixQrCodeInfo)\n      dispatch(\n        updatePixTransfer({\n          toName: pixQrCodeInfo?.receiverName,\n          toTaxId: pixQrCodeInfo?.receiverTaxNumber,\n          toBank: pixQrCodeInfo?.receiverBank,\n          toBankBranch: pixQrCodeInfo?.receiverBankBranch,\n          toBankAccount: pixQrCodeInfo?.receiverBankAccount,\n          toBankAccountDigit: pixQrCodeInfo?.receiverBankAccountDigit,\n          value: parseFloat(pixQrCodeInfo?.originalValue!),\n          paymentDate: pixQrCodeInfo?.paymentDate ?? new Date(),\n          description: pixQrCodeInfo?.description,\n          accountType: convertAccountType(pixQrCodeInfo?.receiverAccountType),\n          searchProtocol: pixQrCodeInfo?.searchProtocol,\n        })\n      );\n  }, [pixQrCodeInfo]);\n\n  const convertAccountType = (accountType?: string) => {\n    switch (accountType) {\n      case \"0\":\n        return AccountType.normal;\n      case \"1\":\n        return AccountType.savings;\n    }\n  };\n\n  const onChangeHashValue = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setHashValue(e.target.value);\n  };\n\n  const onPixKeyClick = () => {\n    history.push(PixRoutes.keyPixTransfer);\n  };\n\n  const onHashSearchClick = () => {\n    dispatch(findPixQrCodeInfo(hashValue));\n    setSentRequest(true);\n  };\n\n  const onBankDataClick = () => {\n    history.push(PixRoutes.bankPixTransferPayeeName);\n  };\n\n  const onCancelButtonClick = () => {\n    history.push(PixRoutes.pixArea);\n  };\n\n  const onBackButtonClick = () => {\n    dispatch(updateState());\n    history.push(PixRoutes.pixArea);\n  };\n\n  const onAlertClose = () => {\n    dispatch(closeAlert());\n  };\n\n  return (\n    <PixTransferHomeView\n      hashValue={hashValue}\n      loading={loading}\n      errorMessage={errorMessage}\n      onPixKeyClick={onPixKeyClick}\n      onBankDataClick={onBankDataClick}\n      onCancelButtonClick={onCancelButtonClick}\n      onBackButtonClick={onBackButtonClick}\n      onAlertClose={onAlertClose}\n      onHashSearchClick={onHashSearchClick}\n      onChangeHashValue={onChangeHashValue}\n    />\n  );\n};\n","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/pix/pages/PixTransfer/QrCodeTransfer/QrCodePixTransferScanner/QrCodePixTransferScanner.controller.tsx",["4666","4667"],"import { PixRoutes } from \"features/pix/constants/routes\";\nimport React from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useHistory } from \"react-router-dom\";\nimport { StoreState } from \"redux/state\";\nimport {\n  closeAlert,\n  findPixQrCodeInfo,\n  updatePixTransfer,\n} from \"features/pix/redux/actions\";\nimport { QrCodePixTransferScannerView } from \"./QrCodePixTransferScanner.view\";\nimport { AccountType } from \"features/pix/redux/models/accountType\";\n\nexport const QrCodePixTransferScanner: React.FC = () => {\n  const history = useHistory();\n  const dispatch = useDispatch();\n\n  const [sentRequest, setSentRequest] = React.useState(false);\n\n  const { pixTransfer, pixQrCodeInfo, errorMessage, loading } = useSelector(\n    (state: StoreState) => state.pix\n  );\n\n  React.useEffect(() => {\n    if (sentRequest && pixTransfer)\n      pixTransfer?.value\n        ? history.push(PixRoutes.qrCodePixTransferSummary)\n        : history.push(PixRoutes.qrCodePixTransferValue);\n  }, [pixTransfer]);\n\n  React.useEffect(() => {\n    if (sentRequest && pixQrCodeInfo)\n      dispatch(\n        updatePixTransfer({\n          toName: pixQrCodeInfo?.receiverName,\n          toTaxId: pixQrCodeInfo?.receiverTaxNumber,\n          toBank: pixQrCodeInfo?.receiverBank,\n          toBankBranch: pixQrCodeInfo?.receiverBankBranch,\n          toBankAccount: pixQrCodeInfo?.receiverBankAccount,\n          toBankAccountDigit: pixQrCodeInfo?.receiverBankAccountDigit,\n          value: parseFloat(pixQrCodeInfo?.originalValue!),\n          paymentDate: pixQrCodeInfo?.paymentDate ?? new Date(),\n          description: pixQrCodeInfo?.description,\n          accountType: convertAccountType(pixQrCodeInfo?.receiverAccountType),\n          searchProtocol: pixQrCodeInfo?.searchProtocol,\n        })\n      );\n  }, [pixQrCodeInfo]);\n\n  const convertAccountType = (accountType?: string) => {\n    switch (accountType) {\n      case \"0\":\n        return AccountType.normal;\n      case \"1\":\n        return AccountType.savings;\n    }\n  };\n\n  const onAlertClose = () => {\n    dispatch(closeAlert());\n  };\n\n  const onScanFail = (e: any) => {};\n\n  const onScanComplete = (hash: string | null) => {\n    if (hash) {\n      dispatch(findPixQrCodeInfo(hash));\n      setSentRequest(true);\n    }\n  };\n\n  const onCancelButtonClick = () => {\n    history.push(PixRoutes.pixArea);\n  };\n\n  const onBackButtonClick = () => {\n    history.push(PixRoutes.pixArea);\n  };\n\n  return (\n    <QrCodePixTransferScannerView\n      loading={loading}\n      errorMessage={errorMessage}\n      onAlertClose={onAlertClose}\n      onScanFail={onScanFail}\n      onScanComplete={onScanComplete}\n      onCancelButtonClick={onCancelButtonClick}\n      onBackButtonClick={onBackButtonClick}\n    />\n  );\n};\n","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/pix/pages/PixTransfer/QrCodeTransfer/QrCodePixTransferValue/QrCodePixTransferValue.controller.tsx",["4668","4669"],"/* eslint-disable react-hooks/exhaustive-deps */\nimport React from \"react\";\nimport { PixRoutes } from \"features/pix\";\nimport { useHistory } from \"react-router-dom\";\nimport { QrCodePixTransferValueView } from \"./QrCodePixTransferValue.view\";\nimport { useValue } from \"hooks/useValue\";\nimport { casting, maskMoney } from \"_utils/masks/money\";\nimport { parseCurrency, ShortDateFormatter } from \"_translate\";\nimport { compareTransferDates } from \"features/transference/_utils\";\nimport { useSelector } from \"react-redux\";\nimport { StoreState } from \"redux/state\";\nimport { useDispatch } from \"react-redux\";\nimport { updatePixTransfer, updateState } from \"features/pix/redux/actions\";\n\nexport const QrCodePixTransferValue: React.FC = () => {\n  const history = useHistory();\n  const dispatch = useDispatch();\n\n  const [transferDate, setTransferDate] = React.useState<Date | null>(null);\n  const [openDatePicker, setOpenDatePicker] = React.useState(false);\n  const [displayDate, setDisplayDate] = React.useState(\"\");\n  const [maxDate, setMaxDate] = React.useState<Date>(new Date());\n  const [minDate, setMinDate] = React.useState<Date>(new Date());\n  const [valueInput, setValueInput] = useValue(maskMoney);\n  const [isValidValue, setIsValidValue] = React.useState(false);\n  const [balanceIsValid, setBalanceIsValid] = React.useState(Boolean);\n\n  const { pixTransfer } = useSelector((state: StoreState) => state.pix);\n\n  const { balance } = useSelector((store: StoreState) => ({\n    balance: store.account.dashboard!.balance,\n  }));\n\n  React.useEffect(() => {\n    setDisplayDate(_getDisplayDate());\n    const today = new Date();\n    setMaxDate(today);\n  }, [transferDate]);\n\n  React.useEffect(() => {\n    const convertedValue = casting(valueInput);\n    setIsValidValue(convertedValue > 0 && convertedValue <= balance);\n    setBalanceIsValid(convertedValue <= balance);\n  }, [valueInput]);\n\n  const onConfirmButtonClick = () => {\n    dispatch(\n      updatePixTransfer({\n        ...pixTransfer,\n        value: parseFloat(parseCurrency(valueInput).toFixed(2)),\n        paymentDate: !transferDate ? minDate : transferDate,\n      })\n    );\n    history.push(PixRoutes.keyPixTransferDescription);\n  };\n\n  const onCancelButtonClick = () => {\n    dispatch(updateState());\n    history.push(PixRoutes.pixArea);\n  };\n\n  const onSchedulingButtonClick = () => {\n    setOpenDatePicker(true);\n  };\n\n  const onDatePickerClose = () => {\n    setOpenDatePicker(false);\n  };\n\n  const onValueChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setValueInput(event.target.value);\n  };\n\n  const onDateChange = (date: Date | null) => {\n    setTransferDate(date);\n  };\n\n  const _getDisplayDate = () => {\n    const today = \"Hoje\";\n\n    if (!transferDate) return today;\n    else if (compareTransferDates(transferDate, new Date()) === 0) return today;\n    else return ShortDateFormatter.format(transferDate);\n  };\n\n  return (\n    <QrCodePixTransferValueView\n      valueInput={valueInput}\n      isValidValue={isValidValue}\n      displayDate={displayDate}\n      minDate={minDate}\n      balanceIsValid={balanceIsValid}\n      pixTransfer={pixTransfer}\n      openDatePicker={openDatePicker}\n      onDatePickerClose={onDatePickerClose}\n      onValueChange={onValueChange}\n      onSchedulingButtonClick={onSchedulingButtonClick}\n      onDateChange={onDateChange}\n      _getDisplayDate={_getDisplayDate}\n      onCancelButtonClick={onCancelButtonClick}\n      onConfirmButtonClick={onConfirmButtonClick}\n    />\n  );\n};\n","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/pix/pages/PixTransfer/QrCodeTransfer/QrCodePixTransferDescription/QrCodePixTransferDescription.controller.tsx",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/pix/pages/PixTransfer/QrCodeTransfer/QrCodePixTransferSummary/QrCodePixTransferSummary.controller.tsx",["4670","4671","4672","4673","4674","4675"],"import { PixRoutes } from \"features/pix/constants/routes\";\nimport {\n  createPixTransferAction,\n  updatePixTransfer,\n  updateState,\n} from \"features/pix/redux/actions\";\nimport { AccountType } from \"features/pix/redux/models/accountType\";\nimport React from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useHistory } from \"react-router-dom\";\nimport { StoreState } from \"redux/state\";\nimport { QrCodePixTransferSummaryView } from \"./QrCodePixTransferSummary.view\";\n\nexport const QrCodePixTransferSummary: React.FC = () => {\n  const history = useHistory();\n  const dispatch = useDispatch();\n\n  const [pixDate, setPixDate] = React.useState<Date>(new Date());\n  const [value, setValue] = React.useState(Number);\n  const [validatedToken, setValidatedToken] = React.useState(false);\n  const [openAuthorizationSheet, setOpenAuthorizationSheet] =\n    React.useState(false);\n\n  const pixState = useSelector((store: StoreState) => store.pix);\n\n  const {\n    pixQrCodeInfo,\n    pixTransfer,\n    createPixTransfer,\n    loading,\n    errorMessage,\n  } = pixState;\n\n  React.useEffect(() => {\n    if (validatedToken && createPixTransfer)\n      history.replace(PixRoutes.pixTransferProcess);\n  }, [createPixTransfer]);\n\n  React.useEffect(() => {\n    setPixDate(pixQrCodeInfo?.paymentDate ?? new Date());\n    setValue(parseFloat(pixQrCodeInfo?.originalValue!));\n  }, [pixQrCodeInfo]);\n\n  const onCancelButtonClick = React.useCallback(() => {\n    dispatch(updateState());\n    history.push(PixRoutes.pixTransferHome);\n  }, [pixState]);\n\n  const onConfirmButtonClick = () => {\n    setOpenAuthorizationSheet(true);\n  };\n\n  const convertAccountType = (accountType?: string) => {\n    switch (accountType) {\n      case \"0\":\n        return AccountType.normal;\n      case \"1\":\n        return AccountType.savings;\n    }\n  };\n\n  const onAuthorizationClose = (tokenIsValid: boolean) => {\n    if (tokenIsValid) {\n      setValidatedToken(true);\n      dispatch(createPixTransferAction());\n    }\n    setOpenAuthorizationSheet(false);\n  };\n\n  return (\n    <QrCodePixTransferSummaryView\n      pixTransfer={pixTransfer}\n      openAuthorizationSheet={openAuthorizationSheet}\n      errorMessage={errorMessage}\n      loading={loading}\n      onCancelButtonClick={onCancelButtonClick}\n      onAuthorizationClose={onAuthorizationClose}\n      onConfirmButtonClick={onConfirmButtonClick}\n    />\n  );\n};\n","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/pix/pages/PixArea/PixArea.controller.tsx",["4676","4677","4678","4679","4680","4681","4682"],"import React from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { PixAreaView } from \"./PixArea.view\";\nimport { PixRoutes } from \"features/pix/constants/routes\";\nimport { AccountRoutes } from \"features/account/constants/routes\";\nimport {\n  closeAlert,\n  createStaticPixQrCodeAction,\n  findFavoredListByAccountIdAndOperationType,\n  findPixKeyList,\n  findPixQrCode,\n  selectPixKey,\n  updatePixTransfer,\n  updateState,\n} from \"features/pix/redux/actions\";\nimport { StoreState } from \"redux/state\";\nimport { PixTransactionPurpose } from \"features/pix/redux/models/pixTransactionPurposeTest\";\nimport { PixKeyStatus } from \"features/pix/redux/models/pixKeyStatus\";\nimport { Favored } from \"features/pix/redux/models/favored\";\n\nexport const PixArea: React.FC = () => {\n  const history = useHistory();\n  const dispatch = useDispatch();\n\n  const {\n    pixKey,\n    pixKeyList,\n    createStaticPixQrCode,\n    staticPixQrCode,\n    favored,\n    loading,\n    errorMessage,\n  } = useSelector((state: StoreState) => state.pix);\n  const [sentFindPixKeyListRequest, setFindPixKeyListRequest] =\n    React.useState(false);\n  const [sentCreateStaticPixQrCode, setSentCreateStaticPixQrCode] =\n    React.useState(false);\n\n  React.useEffect(() => {\n    dispatch(updateState());\n  }, []);\n\n  React.useEffect(() => {\n    if (pixKeyList && sentFindPixKeyListRequest)\n      history.push(PixRoutes.pixKeyList);\n  }, [pixKeyList]);\n\n  React.useEffect(() => {\n    if (pixKeyList && sentCreateStaticPixQrCode)\n      dispatch(\n        selectPixKey(\n          pixKeyList.find((x) => x.status === PixKeyStatus.Registered)\n        )\n      );\n  }, [pixKeyList]);\n\n  React.useEffect(() => {\n    if (pixKeyList && pixKey)\n      if (pixKeyList && pixKey && sentCreateStaticPixQrCode)\n        dispatch(\n          createStaticPixQrCodeAction(\n            undefined,\n            pixKey.pixKeyValue,\n            pixKey.pixKeyType,\n            undefined,\n            PixTransactionPurpose.PurchaseOrTransfer\n          )\n        );\n  }, [pixKey]);\n\n  React.useEffect(() => {\n    if (createStaticPixQrCode) {\n      dispatch(findPixQrCode(createStaticPixQrCode));\n    }\n  }, [createStaticPixQrCode]);\n\n  React.useEffect(() => {\n    if (staticPixQrCode && sentCreateStaticPixQrCode)\n      history.push(PixRoutes.receivePixTransferQrCode);\n  }, [staticPixQrCode]);\n\n  React.useEffect(() => {\n    dispatch(findFavoredListByAccountIdAndOperationType());\n  }, []);\n\n  const onCloseAlert = () => {\n    dispatch(closeAlert());\n  };\n\n  const onCancelButton = () => {\n    history.push(AccountRoutes.home);\n  };\n\n  const onBackToHome = () => {\n    history.push(AccountRoutes.home);\n  };\n\n  const onTransferWithKeyClick = () => {\n    history.push(PixRoutes.pixTransferHome);\n  };\n\n  const onCopyPasteTransferClick = () => {\n    history.push(PixRoutes.pixTransferHome);\n  };\n\n  const onQrCodeTransferClick = () => {\n    history.push(PixRoutes.qrCodePixTransferScanner);\n  };\n\n  const onPixKeyListClick = () => {\n    dispatch(findPixKeyList());\n    setFindPixKeyListRequest(true);\n  };\n\n  const onReceivePixQRCodeClick = () => {\n    dispatch(findPixKeyList());\n    setSentCreateStaticPixQrCode(true);\n  };\n\n  const onSelectFavored = (favored?: Favored) => {\n    dispatch(\n      updatePixTransfer({\n        toTaxId: favored!.taxId,\n        toBankName: favored?.bankName,\n        toBank: favored?.bank,\n        toBankBranch: favored?.bankBranch,\n        toBankAccount: favored?.bankAccount,\n        toBankAccountDigit: favored?.bankAccountDigit,\n        toName: favored?.name,\n      })\n    );\n    history.push(PixRoutes.bankPixTransferValue);\n  };\n\n  return (\n    <PixAreaView\n      onReceivePixQRCodeClick={onReceivePixQRCodeClick}\n      // onHelpClick={onHelpClick}\n      // onMyLimitsPix={onMyLimitsPix}\n      loading={loading}\n      onQrCodeTransferClick={onQrCodeTransferClick}\n      onPixKeyListClick={onPixKeyListClick}\n      onTransferWithKeyClick={onTransferWithKeyClick}\n      onCopyPasteTransferClick={onCopyPasteTransferClick}\n      onSelectFavored={onSelectFavored}\n      favored={favored!}\n      errorMessage={errorMessage}\n      onCloseAlert={onCloseAlert}\n      onCancelButton={onCancelButton}\n      onBackToHome={onBackToHome}\n    />\n  );\n};\n","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/pix/pages/FirstAccess/FirstAccess.tsx",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/pix/pages/PixKeyManagement/FirstAccessPixKeyList/FirstAccessPixKeyList.tsx",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/pix/pages/PixKeyManagement/PixKeyList/PixKeyList.controller.tsx",["4683","4684","4685","4686","4687","4688","4689","4690","4691","4692","4693","4694"],"import React, { useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { PixKeyListView } from \"./PixKeyList.view\";\nimport { PixRoutes } from \"features/pix/constants/routes\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  cancelPixKeyAction,\n  closeAlert,\n  resendPixKeyTokenAction,\n  selectPixKey,\n  updateState,\n} from \"features/pix/redux/actions\";\nimport { StoreState } from \"redux/state\";\nimport { PixKey } from \"features/pix/redux/models/pixKey\";\nimport { PixKeyStatus } from \"features/pix/redux/models/pixKeyStatus\";\nimport { PixKeyType } from \"features/pix/redux/models/pixKeyType\";\n\nexport const PixKeyList: React.FC = () => {\n  const history = useHistory();\n  const dispatch = useDispatch();\n\n  const [email, setEmail] = useState(\"\");\n  const [phone, setPhone] = useState(\"\");\n  const [taxId, setTaxId] = useState(\"\");\n\n  const { user } = useSelector((store: StoreState) => store.auth);\n  const pixState = useSelector((state: StoreState) => state.pix);\n  const {\n    pixKey,\n    pixKeyList,\n    loading,\n    errorMessage,\n    resendPixKeyToken,\n    cancelPixKey,\n  } = pixState;\n\n  const [popUpPixKeyDeletionConfirmation, setPopUpPixKeyDeletionConfirmation] =\n    React.useState(false);\n\n  const [openAuthorizationSheet, setOpenAuthorizationSheet] =\n    React.useState(false);\n\n  const [sentRequest, setSentRequest] = React.useState(false);\n\n  const onSelectPixKeyAction = (pixKey: PixKey) => {\n    dispatch(selectPixKey(pixKey));\n\n    if (pixKey.status !== PixKeyStatus.Registering)\n      setPopUpPixKeyDeletionConfirmation(true);\n  };\n\n  //------------------------------------------------------\n\n  React.useEffect(() => {\n    if (\n      pixKey &&\n      pixKey.pixKeyType === PixKeyType.Email &&\n      pixKey.status === PixKeyStatus.Registering\n    ) {\n      dispatch(resendPixKeyTokenAction(pixState.pixKey));\n    }\n  }, [pixKey]);\n\n  React.useEffect(() => {\n    if (\n      pixState.pixKey &&\n      pixState.pixKey.pixKeyType === PixKeyType.PhoneNumber\n    ) {\n      dispatch(resendPixKeyTokenAction(pixState.pixKey));\n      setSentRequest(true);\n    }\n  }, [pixState.pixKey]);\n\n  React.useEffect(() => {\n    if (resendPixKeyToken && pixKey!.pixKeyType === PixKeyType.Email)\n      history.push(PixRoutes.confirmEmailPixKeyToken, {\n        pixKeyValue: pixState.pixKey?.pixKeyValue,\n      });\n  }, [resendPixKeyToken]);\n\n  React.useEffect(() => {\n    if (\n      resendPixKeyToken &&\n      pixKey!.pixKeyType === PixKeyType.PhoneNumber &&\n      pixKey!.status === PixKeyStatus.Registering\n    )\n      history.push(PixRoutes.confirmPhoneNumberPixKeyToken, {\n        pixKeyValue: pixState.pixKey?.pixKeyValue,\n      });\n  }, [resendPixKeyToken]);\n\n  React.useEffect(() => {\n    if (user?.mail) setEmail(user!.mail);\n    if (user?.phoneNumber) setPhone(user!.phoneNumber);\n    if (user?.taxId) setTaxId(user!.taxId);\n  }, []);\n\n  //------------------------------------------------------\n\n  React.useEffect(() => {\n    if (cancelPixKey) {\n      dispatch(updateState());\n      history.push(PixRoutes.pixArea);\n    }\n  }, [cancelPixKey]);\n\n  const closetPixKeyDeletionConfirmationPopUp = () => {\n    setPopUpPixKeyDeletionConfirmation(false);\n  };\n\n  const onConfirmPixKeyDeletion = React.useCallback(() => {\n    closetPixKeyDeletionConfirmationPopUp();\n    setOpenAuthorizationSheet(true);\n  }, []);\n\n  const onTaxIdPixKeyClick = React.useCallback(() => {\n    dispatch(updateState());\n    history.push(PixRoutes.createTaxIdPixKey);\n  }, []);\n\n  const onRandomPixKeyClick = React.useCallback(() => {\n    dispatch(updateState());\n    history.push(PixRoutes.createRandomPixKey);\n  }, []);\n\n  const onEmailPixKeyClick = React.useCallback(() => {\n    dispatch(updateState());\n    history.push(PixRoutes.createEmailPixKey);\n  }, []);\n\n  const onPhoneNumberPixKeyClick = React.useCallback(() => {\n    dispatch(updateState());\n    history.push(PixRoutes.createPhoneNumberPixKey);\n  }, []);\n\n  const onAuthorizationSheetClose = (tokenIsValid: boolean) => {\n    if (tokenIsValid) dispatch(cancelPixKeyAction(pixState.pixKey!));\n\n    setSentRequest(true);\n    setOpenAuthorizationSheet(false);\n  };\n\n  const onCancelButtonClick = React.useCallback(() => {\n    dispatch(updateState());\n    history.push(PixRoutes.pixArea);\n  }, []);\n\n  const onCloseAlert = () => {\n    dispatch(closeAlert());\n  };\n\n  return (\n    <PixKeyListView\n      pixKeyList={pixKeyList}\n      onSelectPixKeyAction={onSelectPixKeyAction}\n      openPopUpPixKeyDeletionConfirmation={popUpPixKeyDeletionConfirmation}\n      closetPixKeyDeletionConfirmationPopUp={\n        closetPixKeyDeletionConfirmationPopUp\n      }\n      onConfirmPixKeyDeletion={onConfirmPixKeyDeletion}\n      // loading={loading}\n      // showAlert={showAlert}\n      // onCloseAlert={onCloseAlert}\n      // onClickAlert={onClickAlert}\n      // errorMessage={errorMessage}\n      onTaxIdPixKeyClick={onTaxIdPixKeyClick}\n      onEmailPixKeyClick={onEmailPixKeyClick}\n      onPhoneNumberPixKeyClick={onPhoneNumberPixKeyClick}\n      onRandomPixKeyClick={onRandomPixKeyClick}\n      openAuthorizationSheet={openAuthorizationSheet}\n      onAuthorizationSheetClose={onAuthorizationSheetClose}\n      loading={loading}\n      errorMessage={errorMessage}\n      onCloseAlert={onCloseAlert}\n      onCancelButtonClick={onCancelButtonClick}\n      toRegisterEmail={email}\n      toRegisterPhone={phone}\n      toRegisterTaxId={taxId}\n    />\n  );\n};\n","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/pix/pages/PixKeyManagement/ConfirmEmailPixKey/ConfirmEmailPixKey.controller.tsx",["4695"],"import React from \"react\";\nimport { PixRoutes } from \"features/pix/constants/routes\";\nimport {\n  closeAlert,\n  confirmPixKeyHoldAction,\n  resendPixKeyTokenAction,\n  updateState,\n} from \"features/pix/redux/actions\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useHistory, useLocation } from \"react-router-dom\";\nimport { StoreState } from \"redux/state\";\nimport { ConfirmEmailPixKeyView } from \"./ConfirmEmailPixKey.view\";\nimport { PixKeyType } from \"features/pix/redux/models/pixKeyType\";\n\nexport const ConfirmEmailPixKey: React.FC = () => {\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const { state } = useLocation();\n  const [token, setToken] = React.useState(\"\");\n  const [message, setMessage] = React.useState(\"\");\n  const pixState = useSelector((store: StoreState) => store.pix);\n  const { errorMessage, loading, createPixKey, confirmPixKeyHold } = pixState;\n\n  const { pixKeyValue } = state as any;\n\n  const subtitle = `Confirmar e-mail ${pixKeyValue}`;\n\n  React.useEffect(() => {\n    if (confirmPixKeyHold) {\n      dispatch(updateState());\n      history.replace(PixRoutes.pixArea);\n    }\n  }, [pixState.confirmPixKeyHold]);\n\n  // React.useEffect(() => {\n  //   onResendTokenButtonClick()\n  // }, [])\n\n  // const onDefineClick = () => {\n  //   dispatch(\n  //     confirmPixKeyHold(pixKey?.pixKeyValue!, KeyType.email.value, token),\n  //   )\n  //   setSentRequest(true)\n  // }\n\n  const onCancelButtonClick = () => {\n    dispatch(updateState());\n    history.replace(PixRoutes.pixArea);\n  };\n\n  const onBackButtonClick = () => {\n    dispatch(updateState());\n    history.goBack();\n  };\n\n  const onConfirmButtonClick = () => {\n    dispatch(confirmPixKeyHoldAction(pixKeyValue, PixKeyType.Email, token));\n  };\n\n  const onTokenChange = (e: string) => setToken(e);\n\n  const onCloseAlert = () => {\n    dispatch(closeAlert());\n  };\n\n  const onResendTokenButtonClick = async () => {\n    dispatch(\n      resendPixKeyTokenAction({\n        pixKeyValue: createPixKey,\n        pixKeyType: PixKeyType.Email,\n      })\n    );\n    setMessage(\"Token Reenviado\");\n  };\n\n  return (\n    <ConfirmEmailPixKeyView\n      subtitle={subtitle}\n      token={token}\n      onTokenChange={onTokenChange}\n      loading={loading}\n      message={message}\n      errorMessage={errorMessage}\n      onCloseAlert={onCloseAlert}\n      onResendTokenButtonClick={onResendTokenButtonClick}\n      onCancelButtonClick={onCancelButtonClick}\n      onBackButtonClick={onBackButtonClick}\n      onConfirmButtonClick={onConfirmButtonClick}\n    />\n  );\n};\n","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/pix/pages/PixKeyManagement/ConfirmPhoneNumberPixKey/ConfirmPhoneNumberPixKey.controller.tsx",["4696"],"import React from \"react\";\nimport { PixRoutes } from \"features/pix/constants/routes\";\nimport {\n  confirmPixKeyHoldAction,\n  resendPixKeyTokenAction,\n  updateState,\n} from \"features/pix/redux/actions\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useHistory, useLocation } from \"react-router-dom\";\nimport { StoreState } from \"redux/state\";\nimport { ConfirmPhoneNumberPixKeyView } from \"./ConfirmPhoneNumberPixKey.view\";\nimport { PixKeyType } from \"features/pix/redux/models/pixKeyType\";\n\nexport const ConfirmPhoneNumberPixKey: React.FC = () => {\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const { state } = useLocation();\n  const [token, setToken] = React.useState(\"\");\n  const [message, setMessage] = React.useState(\"\");\n  const pixState = useSelector((store: StoreState) => store.pix);\n\n  const { errorMessage, loading, pixKey, confirmPixKeyHold } = pixState;\n\n  const { pixKeyValue } = state as any;\n\n  const subtitle = `Confirmar telefone ${pixKeyValue}`;\n\n  React.useEffect(() => {\n    if (confirmPixKeyHold) {\n      dispatch(updateState());\n      history.replace(PixRoutes.pixArea);\n    }\n  }, [confirmPixKeyHold]);\n\n  const onCancelButtonClick = () => {\n    dispatch(updateState());\n    history.replace(PixRoutes.pixArea);\n  };\n\n  const onBackButtonClick = () => {\n    dispatch(updateState());\n    history.goBack();\n  };\n\n  const onConfirmButtonClick = () => {\n    dispatch(\n      confirmPixKeyHoldAction(pixKeyValue, PixKeyType.PhoneNumber, token)\n    );\n  };\n\n  const onTokenChange = (e: string) => setToken(e);\n\n  const onCloseAlert = () => {\n    dispatch(updateState());\n  };\n\n  const onResendTokenButtonClick = async () => {\n    dispatch(\n      resendPixKeyTokenAction({\n        pixKeyValue: pixKey?.pixKeyValue,\n        pixKeyType: PixKeyType.PhoneNumber,\n      })\n    );\n    setMessage(\"Token Reenviado\");\n  };\n\n  return (\n    <ConfirmPhoneNumberPixKeyView\n      subtitle={subtitle}\n      token={token}\n      onTokenChange={onTokenChange}\n      message={message}\n      errorMessage={errorMessage}\n      loading={loading}\n      onCloseAlert={onCloseAlert}\n      onResendTokenButtonClick={onResendTokenButtonClick}\n      onCancelButtonClick={onCancelButtonClick}\n      onBackButtonClick={onBackButtonClick}\n      onConfirmButtonClick={onConfirmButtonClick}\n    />\n  );\n};\n","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/pix/pages/PixKeyManagement/CreateTaxIdPixKey/CreateTaxIdPixKey.controller.tsx",["4697","4698"],"import React from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { CreateTaxIdPixKeyView } from \"./CreateTaxIdPixKey.view\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { StoreState } from \"redux/state\";\nimport { PixRoutes } from \"features/pix/constants/routes\";\nimport {\n  closeAlert,\n  createPixKeyAction,\n  updateState,\n} from \"features/pix/redux/actions\";\nimport { useMask } from \"hooks/useMask\";\nimport { maskTaxPayer } from \"_utils/masks/taxPayer\";\n\nexport const CreateTaxIdPixKey: React.FC = () => {\n  const history = useHistory();\n  const dispatch = useDispatch();\n  const [openAuthorizationSheet, setOpenAuthorizationSheet] =\n    React.useState(false);\n  const [onShowAlert, setShowAlert] = React.useState(false);\n  const [taxId, setTaxId] = useMask(maskTaxPayer);\n\n  const { loading, errorMessage, createPixKey } = useSelector(\n    (store: StoreState) => store.pix\n  );\n  const { account } = useSelector((store: StoreState) => store.account);\n\n  React.useEffect(() => {\n    if (createPixKey !== undefined) {\n      dispatch(updateState());\n      history.push(PixRoutes.pixArea);\n    }\n  }, [createPixKey]);\n\n  React.useEffect(() => {\n    if (account!.taxId) setTaxId(account!.taxId);\n    else setTaxId(\"\");\n  }, []);\n\n  const onCancelButtonClick = () => {\n    history.replace(PixRoutes.pixArea);\n  };\n\n  const onBackButtonClick = () => {\n    dispatch(updateState());\n    history.goBack();\n  };\n\n  const onCloseAlert = () => {\n    setShowAlert(false);\n  };\n\n  const onAlertClose = () => {\n    dispatch(closeAlert());\n  };\n\n  const onRedirectAlert = () => history.replace(PixRoutes.pixKeyList);\n\n  const onConfirmButtonClick = React.useCallback(() => {\n    setOpenAuthorizationSheet(true);\n  }, []);\n\n  const onAuthorizationSheetClose = (tokenIsValid: boolean) => {\n    setOpenAuthorizationSheet(false);\n    tokenIsValid && dispatch(createPixKeyAction(undefined, account?.taxId!));\n  };\n\n  const onTaxIdChange = (event: React.ChangeEvent<HTMLInputElement>) =>\n    setTaxId(event.target.value);\n\n  return (\n    <CreateTaxIdPixKeyView\n      onAlertClose={onAlertClose}\n      loading={loading}\n      errorMessage={errorMessage}\n      onShowAlert={onShowAlert}\n      onCloseAlert={onCloseAlert}\n      onClickAlert={onRedirectAlert}\n      openAuthorizationSheet={openAuthorizationSheet}\n      onAuthorizationSheetClose={onAuthorizationSheetClose}\n      account={account!}\n      inputValue={taxId}\n      onTaxIdChange={onTaxIdChange}\n      onConfirmButtonClick={onConfirmButtonClick}\n      onCancelButtonClick={onCancelButtonClick}\n      onBackButtonClick={onBackButtonClick}\n    />\n  );\n};\n","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/pix/pages/PixKeyManagement/CreateEmailPixKey/CreateEmailPixKey.controller.tsx",["4699","4700","4701","4702"],"import React from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { CreateEmailPixKeyView } from \"./CreateEmailPixKey.view\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { StoreState } from \"redux/state\";\nimport { PixRoutes } from \"features/pix/constants/routes\";\nimport {\n  closeAlert,\n  createPixKeyAction,\n  resendPixKeyTokenAction,\n  updateState,\n} from \"features/pix/redux/actions\";\nimport { PixKeyType } from \"features/pix/redux/models/pixKeyType\";\nimport { validateEmail } from \"_utils/validate\";\n\nexport const CreateEmailPixKey: React.FC = () => {\n  const history = useHistory();\n  const dispatch = useDispatch();\n  const [mail, setEmail] = React.useState(\"\");\n  const [error, setError] = React.useState<boolean>(false);\n\n  const [onShowAlert, setShowAlert] = React.useState(false);\n  const { loading, errorMessage, createPixKey, resendPixKeyToken } =\n    useSelector((store: StoreState) => store.pix);\n  const { account } = useSelector((store: StoreState) => store.account);\n\n  const { user } = useSelector((store: StoreState) => store.auth);\n\n  React.useEffect(() => {\n    if (createPixKey !== undefined) {\n      dispatch(\n        resendPixKeyTokenAction({\n          pixKeyValue: mail,\n          pixKeyType: PixKeyType.Email,\n        })\n      );\n    }\n  }, [createPixKey]);\n\n  React.useEffect(() => {\n    if (resendPixKeyToken) {\n      history.push(PixRoutes.confirmEmailPixKeyToken, {\n        pixKeyValue: mail,\n      });\n    }\n  }, [resendPixKeyToken]);\n\n  React.useEffect(() => {\n    if (user?.mail) setEmail(user!.mail);\n    else setEmail(\"\");\n  }, []);\n\n  React.useEffect(() => {\n    validateError();\n  }, [mail]);\n\n  const validateError = () => {\n    if (validateEmail(mail)) setError(false);\n    else setError(true);\n  };\n\n  const onEmailChange = (event: React.ChangeEvent<HTMLInputElement>) =>\n    setEmail(event.target.value);\n\n  const onCancelButtonClick = () => {\n    history.replace(PixRoutes.pixArea);\n  };\n\n  const onBackButtonClick = () => {\n    dispatch(updateState());\n    history.goBack();\n  };\n\n  const onCloseAlert = () => {\n    setShowAlert(false);\n  };\n\n  const onAlertClose = () => {\n    dispatch(closeAlert());\n  };\n\n  const onRedirectAlert = () => history.replace(PixRoutes.pixKeyList);\n\n  const onConfirmButtonClick = () => {\n    dispatch(createPixKeyAction(PixKeyType.Email, mail));\n  };\n\n  return (\n    <CreateEmailPixKeyView\n      onAlertClose={onAlertClose}\n      loading={loading}\n      errorMessage={errorMessage}\n      onShowAlert={onShowAlert}\n      onCloseAlert={onCloseAlert}\n      onClickAlert={onRedirectAlert}\n      inputValue={mail}\n      account={account!}\n      error={error}\n      onEmailChange={onEmailChange}\n      onConfirmButtonClick={onConfirmButtonClick}\n      onCancelButtonClick={onCancelButtonClick}\n      onBackButtonClick={onBackButtonClick}\n    />\n  );\n};\n","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/pix/pages/PixKeyManagement/CreatePhoneNumberPixKey/CreatePhoneNumberPixKey.controller.tsx",["4703","4704","4705"],"import React from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { CreatePhoneNumberPixKeyView } from \"./CreatePhoneNumberPixKey.view\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { StoreState } from \"redux/state\";\nimport { PixRoutes } from \"features/pix/constants/routes\";\nimport {\n  closeAlert,\n  createPixKeyAction,\n  resendPixKeyTokenAction,\n  updateState,\n} from \"features/pix/redux/actions\";\nimport { maskPhone } from \"_utils/masks/phone\";\nimport { useMask } from \"hooks/useMask\";\nimport { PixKeyType } from \"features/pix/redux/models/pixKeyType\";\n\nexport const CreatePhoneNumberPixKey: React.FC = () => {\n  const history = useHistory();\n  const dispatch = useDispatch();\n  const [phone, setPhone] = useMask(maskPhone);\n\n  const [onShowAlert, setShowAlert] = React.useState(false);\n  const { loading, errorMessage, createPixKey, resendPixKeyToken } =\n    useSelector((store: StoreState) => store.pix);\n  const { account } = useSelector((store: StoreState) => store.account);\n\n  const { user } = useSelector((store: StoreState) => store.auth);\n\n  React.useEffect(() => {\n    if (createPixKey !== undefined) {\n      dispatch(\n        resendPixKeyTokenAction({\n          pixKeyValue: phone,\n          pixKeyType: PixKeyType.PhoneNumber,\n        })\n      );\n    }\n  }, [createPixKey]);\n\n  React.useEffect(() => {\n    if (resendPixKeyToken) {\n      history.push(PixRoutes.confirmPhoneNumberPixKeyToken, {\n        pixKeyValue: phone,\n      });\n    }\n  }, [resendPixKeyToken]);\n\n  React.useEffect(() => {\n    if (user?.phoneNumber) setPhone(user!.phoneNumber);\n    else setPhone(\"\");\n  }, []);\n\n  const onPhoneNumberChange = (event: React.ChangeEvent<HTMLInputElement>) =>\n    setPhone(event.target.value);\n\n  const onCancelButtonClick = () => {\n    history.replace(PixRoutes.pixArea);\n  };\n\n  const onBackButtonClick = () => {\n    dispatch(updateState());\n    history.goBack();\n  };\n\n  const onCloseAlert = () => {\n    setShowAlert(false);\n  };\n\n  const onAlertClose = () => {\n    dispatch(closeAlert());\n  };\n\n  const onRedirectAlert = () => history.replace(PixRoutes.pixKeyList);\n\n  const onConfirmButtonClick = () => {\n    dispatch(createPixKeyAction(PixKeyType.PhoneNumber, phone));\n  };\n\n  return (\n    <CreatePhoneNumberPixKeyView\n      onAlertClose={onAlertClose}\n      loading={loading}\n      errorMessage={errorMessage}\n      onShowAlert={onShowAlert}\n      onCloseAlert={onCloseAlert}\n      onClickAlert={onRedirectAlert}\n      inputValue={phone}\n      account={account!}\n      onPhoneNumberChange={onPhoneNumberChange}\n      onConfirmButtonClick={onConfirmButtonClick}\n      onCancelButtonClick={onCancelButtonClick}\n      onBackButtonClick={onBackButtonClick}\n    />\n  );\n};\n","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/pix/pages/PixKeyManagement/CreateRandomPixKey/CreateRandomPixKey.controller.tsx",["4706"],"import React from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { CreateRandomPixKeyView } from \"./CreateRandomPixKey.view\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { StoreState } from \"redux/state\";\nimport { PixRoutes } from \"features/pix/constants/routes\";\nimport {\n  closeAlert,\n  createPixKeyAction,\n  updateState,\n} from \"features/pix/redux/actions\";\nimport { PixKeyType } from \"features/pix/redux/models/pixKeyType\";\n\nexport const CreateRandomPixKey: React.FC = () => {\n  const history = useHistory();\n  const dispatch = useDispatch();\n  const [openAuthorizationSheet, setOpenAuthorizationSheet] =\n    React.useState(false);\n\n  const [onShowAlert, setShowAlert] = React.useState(false);\n  const { loading, errorMessage, createPixKey } = useSelector(\n    (store: StoreState) => store.pix\n  );\n  const { account } = useSelector((store: StoreState) => store.account);\n\n  React.useEffect(() => {\n    if (createPixKey !== undefined) {\n      dispatch(updateState());\n      history.push(PixRoutes.pixArea);\n    }\n  }, [createPixKey]);\n\n  const onCancelButtonClick = () => {\n    history.replace(PixRoutes.pixArea);\n  };\n\n  const onBackButtonClick = () => {\n    dispatch(updateState());\n    history.goBack();\n  };\n\n  const onCloseAlert = () => {\n    setShowAlert(false);\n  };\n\n  const onAlertClose = () => {\n    dispatch(closeAlert());\n  };\n\n  const onRedirectAlert = () => history.replace(PixRoutes.pixKeyList);\n\n  const onConfirmButtonClick = React.useCallback(() => {\n    setOpenAuthorizationSheet(true);\n  }, []);\n\n  const onAuthorizationSheetClose = (tokenIsValid: boolean) => {\n    setOpenAuthorizationSheet(false);\n    tokenIsValid && dispatch(createPixKeyAction(PixKeyType.RandomKeyCode));\n  };\n\n  return (\n    <CreateRandomPixKeyView\n      onAlertClose={onAlertClose}\n      loading={loading}\n      errorMessage={errorMessage}\n      onShowAlert={onShowAlert}\n      onCloseAlert={onCloseAlert}\n      onClickAlert={onRedirectAlert}\n      openAuthorizationSheet={openAuthorizationSheet}\n      onAuthorizationSheetClose={onAuthorizationSheetClose}\n      account={account!}\n      onConfirmButtonClick={onConfirmButtonClick}\n      onCancelButtonClick={onCancelButtonClick}\n      onBackButtonClick={onBackButtonClick}\n    />\n  );\n};\n","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/pix/pages/PixTransfer/KeyTransfer/KeyPixTransfer/KeyPixTransfer.controller.tsx",["4707"],"/* eslint-disable no-control-regex */\n/* eslint-disable react-hooks/exhaustive-deps */\nimport React from \"react\";\nimport { maskPhone } from \"_utils/masks/phone\";\nimport { KeyPixTransferView } from \"./KeyPixTransfer.view\";\nimport { maskTaxPayer } from \"_utils/masks/taxPayer\";\nimport { useHistory } from \"react-router-dom\";\nimport { PixRoutes } from \"features/pix/constants/routes\";\nimport { StoreState } from \"redux/state\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { KeyType } from \"features/pix/redux/models/keyType\";\nimport { findPixKeyInfo, updateState } from \"features/pix/redux/actions\";\n\nexport const KeyPixTransfer: React.FC = () => {\n  const [pixKeyValue, setPixKeyValue] = React.useState(\"\");\n  const [selectedKeyType, setSelectedKeyType] = React.useState(KeyType.phone);\n  const history = useHistory();\n  const dispatch = useDispatch();\n  const pixState = useSelector((state: StoreState) => state.pix);\n  const { pixKeyInfo, loading, errorMessage } = pixState;\n\n  const [sentRequest, setSentRequest] = React.useState(false);\n\n  React.useEffect(() => {\n    dispatch(updateState());\n  }, []);\n\n  React.useEffect(() => {\n    if (pixKeyInfo && sentRequest)\n      history.push(PixRoutes.keyPixTransferPayeeInfo);\n  }, [pixKeyInfo]);\n\n  const keyIsValid = React.useMemo(() => {\n    switch (selectedKeyType) {\n      case KeyType.phone:\n        return pixKeyValue.length === 16;\n\n      case KeyType.taxId:\n        return pixKeyValue.length === 14 || pixKeyValue.length === 18;\n\n      case KeyType.email:\n        const regex = new RegExp(\n          /(?:[a-zA-Z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-zA-Z0-9!#$%&'*+/=?^_`{|}~-]+)*|\"(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21\\x23-\\x5b\\x5d-\\x7f]|\\\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])*\")@(?:(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?|\\[(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?|[a-z0-9-]*[a-z0-9]:(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21-\\x5a\\x53-\\x7f]|\\\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])+)\\])/\n        );\n        return pixKeyValue.length > 0 && regex.test(pixKeyValue);\n\n      case KeyType.random:\n        return pixKeyValue.length >= 32;\n    }\n  }, [selectedKeyType, pixKeyValue]);\n\n  const validateKey = React.useCallback(() => {\n    return keyIsValid;\n  }, [selectedKeyType, pixKeyValue]);\n\n  const onKeyTypeChange = React.useCallback(\n    (key: KeyType) => {\n      setSelectedKeyType(key);\n      setPixKeyValue(\"\");\n    },\n    [selectedKeyType]\n  );\n\n  const onKeyValueChange = React.useCallback(\n    (e: React.ChangeEvent<HTMLInputElement>) => {\n      const value = e.target.value;\n\n      switch (selectedKeyType) {\n        case KeyType.phone:\n          return setPixKeyValue(maskPhone(value));\n\n        case KeyType.taxId:\n          return setPixKeyValue(maskTaxPayer(value));\n\n        case KeyType.email:\n          return setPixKeyValue(value);\n\n        case KeyType.random:\n          return setPixKeyValue(value.substring(0, 36));\n      }\n    },\n    [selectedKeyType]\n  );\n\n  // const onSubmit = React.useCallback(\n  //   (e: React.FormEvent) => {\n  //     e.preventDefault()\n  //     if (!validateKey) return\n\n  //     dispatch(\n  //       updatePixTransfer({\n  //         pixKey: keyValue,\n  //         pixKeyType: selectedKeyType,\n  //       }),\n  //     )\n  //     dispatch(getPixKeyDetails(keyValue, selectedKeyType.value!))\n  //     setValidKey(true)\n  //     if (pixState instanceof SuccessPixState)\n  //       history.push(PixRoutes.keyTransferPayeeInfo)\n  //   },\n  //   [validateKey],\n  // )\n\n  const onCancelButtonClick = () => {\n    dispatch(updateState());\n    history.replace(PixRoutes.pixArea);\n  };\n\n  const onConfirmButtonClick = () => {\n    dispatch(findPixKeyInfo(pixKeyValue, selectedKeyType.value!));\n    setSentRequest(true);\n  };\n\n  const onAlertClose = React.useCallback(() => {\n    dispatch(updateState());\n  }, []);\n\n  return (\n    <KeyPixTransferView\n      selectedKeyType={selectedKeyType}\n      onKeyTypeChange={onKeyTypeChange}\n      pixKeyValue={pixKeyValue}\n      loading={loading}\n      onKeyValueChange={onKeyValueChange}\n      keyIsValid={keyIsValid}\n      errorMessage={errorMessage}\n      onAlertClose={onAlertClose}\n      // onSubmit={onSubmit}\n      onCancelButtonClick={onCancelButtonClick}\n      onConfirmButtonClick={onConfirmButtonClick}\n    />\n  );\n};\n","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/pix/pages/PixTransfer/KeyTransfer/KeyPixTransferPayeeInfo/KeyPixTransferPayeeInfo.controller.tsx",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/pix/pages/PixTransfer/KeyTransfer/KeyPixTransferValue/KeyPixTransferValue.controller.tsx",["4708","4709"],"/* eslint-disable react-hooks/exhaustive-deps */\nimport React from \"react\";\nimport { PixRoutes } from \"features/pix\";\nimport { useHistory } from \"react-router-dom\";\nimport { KeyPixTransferValueView } from \"./KeyPixTransferValue.view\";\nimport { useValue } from \"hooks/useValue\";\nimport { maskMoney } from \"_utils/masks/money\";\nimport { parseCurrency, ShortDateFormatter } from \"_translate\";\nimport { compareTransferDates } from \"features/transference/_utils\";\nimport { useSelector } from \"react-redux\";\nimport { StoreState } from \"redux/state\";\nimport { useDispatch } from \"react-redux\";\nimport { updatePixTransfer, updateState } from \"features/pix/redux/actions\";\n\nexport const KeyPixTransferValue: React.FC = () => {\n  const history = useHistory();\n  const dispatch = useDispatch();\n  const [transferDate, setTransferDate] = React.useState<Date | null>(null);\n  const [openDatePicker, setOpenDatePicker] = React.useState(false);\n  const [displayDate, setDisplayDate] = React.useState(\"\");\n  const [maxDate, setMaxDate] = React.useState<Date>(new Date());\n  const [minDate, setMinDate] = React.useState<Date>(new Date());\n  const [valueInput, setValueInput] = useValue(maskMoney);\n  const [isValidValue, setIsValidValue] = React.useState(false);\n  const [balanceIsValid, setBalanceIsValid] = React.useState(Boolean);\n\n  const { pixKeyInfo, pixTransfer } = useSelector(\n    (state: StoreState) => state.pix\n  );\n\n  const { balance } = useSelector((store: StoreState) => ({\n    balance: store.account.dashboard!.balance,\n  }));\n\n  const onConfirmButtonClick = () => {\n    dispatch(\n      updatePixTransfer({\n        ...pixTransfer,\n        value: parseFloat(parseCurrency(valueInput).toFixed(2)),\n        paymentDate: !transferDate ? minDate : transferDate,\n      })\n    );\n    history.push(PixRoutes.keyPixTransferDescription);\n  };\n\n  const onBackButtonClick = () => {\n    dispatch(\n      updatePixTransfer({\n        ...pixTransfer,\n        value: undefined,\n        paymentDate: undefined,\n      })\n    );\n    history.goBack();\n  };\n\n  const onCancelButtonClick = () => {\n    dispatch(updateState());\n    history.push(PixRoutes.pixArea);\n  };\n\n  const onSchedulingButtonClick = () => {\n    setOpenDatePicker(true);\n  };\n\n  const onDatePickerClose = () => {\n    setOpenDatePicker(false);\n  };\n\n  const onValueChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setValueInput(event.target.value);\n  };\n\n  const onDateChange = (date: Date | null) => {\n    setTransferDate(date);\n  };\n\n  const _getDisplayDate = () => {\n    const today = \"Hoje\";\n\n    if (!transferDate) return today;\n    else if (compareTransferDates(transferDate, new Date()) === 0) return today;\n    else return ShortDateFormatter.format(transferDate);\n  };\n\n  React.useEffect(() => {\n    setDisplayDate(_getDisplayDate());\n    const today = new Date();\n    setMaxDate(today);\n  }, [transferDate]);\n\n  React.useEffect(() => {\n    const convertedValue = casting(valueInput);\n    setIsValidValue(convertedValue > 0 && convertedValue <= balance);\n    setBalanceIsValid(convertedValue <= balance);\n  }, [valueInput]);\n\n  const casting = (valueInString: string) => {\n    const valueCents = Number(valueInString.split(\",\")[1]) / 100 || 0;\n    return (\n      Number(valueInString.split(\",\")[0].replace(/[^0-9]+/g, \"\")) + valueCents\n    );\n  };\n\n  return (\n    <KeyPixTransferValueView\n      valueInput={valueInput}\n      isValidValue={isValidValue}\n      displayDate={displayDate}\n      minDate={minDate}\n      balanceIsValid={balanceIsValid}\n      payeeName={pixKeyInfo?.payeeName}\n      payeePixKeyValue={pixKeyInfo?.pixKeyValue}\n      openDatePicker={openDatePicker}\n      onDatePickerClose={onDatePickerClose}\n      onValueChange={onValueChange}\n      onSchedulingButtonClick={onSchedulingButtonClick}\n      onDateChange={onDateChange}\n      _getDisplayDate={_getDisplayDate}\n      onCancelButtonClick={onCancelButtonClick}\n      onConfirmButtonClick={onConfirmButtonClick}\n      onBackButtonClick={onBackButtonClick}\n    />\n  );\n};\n","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/pix/pages/PixTransfer/KeyTransfer/KeyTransferDescription/KeyPixTransferDescription.controller.tsx",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/pix/pages/PixTransfer/KeyTransfer/KeyPixTransferSummary/KeyPixTransferSummary.controller.tsx",["4710"],"import { PixRoutes } from \"features/pix/constants/routes\";\nimport React from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useHistory } from \"react-router-dom\";\nimport { KeyPixTransferSummaryView } from \"./KeyPixTransferSummary.view\";\nimport { StoreState } from \"redux/state\";\nimport {\n  createPixTransferAction,\n  updateState,\n} from \"features/pix/redux/actions\";\n\nexport const KeyPixTransferSummary: React.FC = () => {\n  const history = useHistory();\n\n  const dispatch = useDispatch();\n\n  const [validatedToken, setValidatedToken] = React.useState(false);\n\n  const [openAuthorizationSheet, setOpenAuthorizationSheet] =\n    React.useState(false);\n\n  const { pixTransfer, createPixTransfer, loading, errorMessage } = useSelector(\n    (state: StoreState) => state.pix\n  );\n\n  React.useEffect(() => {\n    if (validatedToken && createPixTransfer)\n      history.replace(PixRoutes.pixTransferProcess);\n  }, [createPixTransfer]);\n\n  // React.useEffect(() => {\n  //   setPixKeyType(pixState.pixKeyType?.displayString!)\n  // }, [pixState])\n\n  // React.useEffect(() => {\n  //   setPixDate(pixState?.paymentDate!)\n  //   setValue(pixState?.value!)\n  // }, [pixState])\n\n  const onConfirmButtonClick = () => {\n    setOpenAuthorizationSheet(true);\n  };\n\n  const onCancelButtonClick = () => {\n    dispatch(updateState());\n    history.push(PixRoutes.pixArea);\n  };\n\n  const onAuthorizationClose = (tokenIsValid: boolean) => {\n    if (tokenIsValid) {\n      setValidatedToken(true);\n      dispatch(createPixTransferAction());\n    }\n    setOpenAuthorizationSheet(false);\n  };\n\n  return (\n    <KeyPixTransferSummaryView\n      onCancelButtonClick={onCancelButtonClick}\n      onConfirmButtonClick={onConfirmButtonClick}\n      pixTransfer={pixTransfer}\n      openAuthorizationSheet={openAuthorizationSheet}\n      onAuthorizationClose={onAuthorizationClose}\n      errorMessage={errorMessage}\n      loading={loading}\n    />\n  );\n};\n","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/pix/pages/FirstAccess/FirstAccess.style.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/pix/pages/PixTransfer/PixTransferHome/PixTransferHome.view.tsx",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/pix/pages/PixTransfer/BankTransfer/BankPixTransferPayeeName/BankPixTransferPayeeName.view.tsx",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/pix/pages/PixTransfer/QrCodeTransfer/QrCodePixTransferDescription/QrCodePixTransferDescription.view.tsx",["4711","4712","4713","4714","4715","4716","4717","4718"],"import React from \"react\";\nimport { AppBar } from \"components/AppBar\";\nimport { ProcessDescriptionHeader } from \"components/ProcessDescriptionHeader\";\nimport { ProcessPageLayout } from \"components/ProcessPageLayout\";\nimport { Button } from \"components/Button\";\nimport { Close } from \"@material-ui/icons\";\nimport { cancelLabel } from \"constants/buttons/labels\";\nimport { PageContainer } from \"components/PageContainer\";\nimport { TextField } from \"components/TextField\";\nimport { ButtonWithFloatingIcon } from \"components/ButtonWithFloatingIcon/ButtonWithFloatingIcon\";\nimport { TagEditPopUp } from \"components/TagEditPopUp\";\nimport { Box, Grid, Typography } from \"@material-ui/core\";\nimport { ProcessPageFooterButton } from \"components\";\nimport { AccountRoutes } from \"features/account/constants/routes\";\nimport { TagChip } from \"features/tags/components/TagChip\";\nimport { useStyles } from \"./QrCodePixTransferDescription.style\";\nimport { Loader } from \"components/Loader\";\nimport { updatePixTransfer } from \"features/pix/redux/actions\";\nimport { useDispatch } from \"react-redux\";\n\ninterface QrCodePixTransferDescriptionViewProps {\n  onDescriptionChange: (event: React.ChangeEvent<HTMLInputElement>) => void;\n  onEditTagsClose: VoidFunction;\n  onEditTagsButtonClick: VoidFunction;\n  onConfirmButtonClick: VoidFunction;\n  onCancelButtonClick: VoidFunction;\n  onTagClick: (event: string) => void;\n  transferenceTags?: string[];\n  description: string;\n  openTagEditPopUp: boolean;\n  loading?: boolean;\n}\n\nexport const QrCodePixTransferDescriptionView: React.FC<\n  QrCodePixTransferDescriptionViewProps\n> = ({\n  onDescriptionChange,\n  onEditTagsClose,\n  onEditTagsButtonClick,\n  onConfirmButtonClick,\n  onCancelButtonClick,\n  onTagClick,\n  transferenceTags,\n  description,\n  openTagEditPopUp,\n  loading,\n}) => {\n  const styles = useStyles();\n  const dispatch = useDispatch();\n\n  return (\n    <PageContainer>\n      <ProcessPageLayout\n        appBar={\n          <AppBar\n            homeRoute={AccountRoutes.home}\n            action={\n              <Button\n                palette=\"secondary\"\n                size=\"small\"\n                startIcon={<Close color=\"inherit\" />}\n                onClick={onCancelButtonClick}\n              >\n                {cancelLabel}\n              </Button>\n            }\n          />\n        }\n        header={\n          <ProcessDescriptionHeader\n            title=\"Transferência com Pix\"\n            subtitle=\"Quer enviar uma mensagem?\"\n            description=\"Você pode inserir uma descrição ou mensagem para o recebedor\"\n          />\n        }\n        main={\n          <React.Fragment>\n            <Box component=\"form\" onSubmit={onConfirmButtonClick}>\n              <TextField\n                label=\"Envie uma mensagem(opcional)\"\n                placeholder=\"Escreva sua mensagem\"\n                value={description}\n                onChange={onDescriptionChange}\n              />\n              {/* <Typography\n                variant=\"subtitle1\"\n                className={styles.importantWarning}\n              >\n                <strong>Tags (opcional)</strong>\n              </Typography>\n              <Typography className={styles.alertMessage}>\n                Insira marcações para identificar seus gastos. Use nossa\n                sugestão ou personalize as tags.\n              </Typography>\n              <Grid container spacing={1}>\n                {transferenceTags?.map(tag => (\n                  <Grid item key={tag}>\n                    <TagChip label={tag} onClick={onTagClick} />\n                  </Grid>\n                ))}\n              </Grid>\n              <Box className={styles.buttonTagFloating}>\n                <ButtonWithFloatingIcon onClick={onEditTagsButtonClick}>\n                  Editar TAG\n                </ButtonWithFloatingIcon>\n              </Box>\n              <TagEditPopUp\n                open={openTagEditPopUp}\n                onSaveTags={tags => dispatch(updatePixTransfer({ tags }))}\n                onClose={onEditTagsClose}\n              /> */}\n            </Box>\n          </React.Fragment>\n        }\n        footer={\n          <Box className={styles.footer}>\n            <ProcessPageFooterButton backButton />\n            <ProcessPageFooterButton\n              forwardButton\n              onClick={onConfirmButtonClick}\n            />\n          </Box>\n        }\n      />\n      {/* <Loader open={loading!} /> */}\n    </PageContainer>\n  );\n};\n","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/pix/pages/PixTransfer/QrCodeTransfer/QrCodePixTransferSummary/QrCodePixTransferSummary.view.tsx",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/pix/pages/PixArea/PixArea.view.tsx",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/pix/pages/PixTransfer/KeyTransfer/KeyTransferDescription/KeyPixTransferDescription.view.tsx",["4719","4720","4721","4722","4723","4724","4725","4726"],"import React from \"react\";\nimport { AppBar } from \"components/AppBar\";\nimport { ProcessDescriptionHeader } from \"components/ProcessDescriptionHeader\";\nimport { ProcessPageLayout } from \"components/ProcessPageLayout\";\nimport { Button } from \"components/Button\";\nimport { Close } from \"@material-ui/icons\";\nimport { cancelLabel } from \"constants/buttons/labels\";\nimport { PageContainer } from \"components/PageContainer\";\nimport { TextField } from \"components/TextField\";\nimport { ButtonWithFloatingIcon } from \"components/ButtonWithFloatingIcon/ButtonWithFloatingIcon\";\nimport { TagEditPopUp } from \"components/TagEditPopUp\";\nimport { Box, Grid, Typography } from \"@material-ui/core\";\nimport { ProcessPageFooterButton } from \"components\";\nimport { AccountRoutes } from \"features/account/constants/routes\";\nimport { TagChip } from \"features/tags/components/TagChip\";\nimport { useStyles } from \"./KeyPixTransferDescription.style\";\nimport { Loader } from \"components/Loader\";\nimport { updatePixTransfer } from \"features/pix/redux/actions\";\nimport { useDispatch } from \"react-redux\";\n\ninterface KeyPixTransferDescriptionViewProps {\n  onDescriptionChange: (event: React.ChangeEvent<HTMLInputElement>) => void;\n  onEditTagsClose: VoidFunction;\n  onEditTagsButtonClick: VoidFunction;\n  onConfirmButtonClick: VoidFunction;\n  onCancelButtonClick: VoidFunction;\n  onTagClick: (event: string) => void;\n  transferenceTags?: string[];\n  description: string;\n  openTagEditPopUp: boolean;\n  loading?: boolean;\n}\n\nexport const KeyPixTransferDescriptionView: React.FC<\n  KeyPixTransferDescriptionViewProps\n> = ({\n  onDescriptionChange,\n  onEditTagsClose,\n  onEditTagsButtonClick,\n  onConfirmButtonClick,\n  onCancelButtonClick,\n  onTagClick,\n  transferenceTags,\n  description,\n  openTagEditPopUp,\n  loading,\n}) => {\n  const styles = useStyles();\n  const dispatch = useDispatch();\n\n  return (\n    <PageContainer>\n      <ProcessPageLayout\n        appBar={\n          <AppBar\n            homeRoute={AccountRoutes.home}\n            action={\n              <Button\n                palette=\"secondary\"\n                size=\"small\"\n                startIcon={<Close color=\"inherit\" />}\n                onClick={onCancelButtonClick}\n              >\n                {cancelLabel}\n              </Button>\n            }\n          />\n        }\n        header={\n          <ProcessDescriptionHeader\n            title=\"Transferência com Pix\"\n            subtitle=\"Quer enviar uma mensagem?\"\n            description=\"Você pode inserir uma descrição ou mensagem para o recebedor\"\n          />\n        }\n        main={\n          <React.Fragment>\n            <Box component=\"form\" onSubmit={onConfirmButtonClick}>\n              <TextField\n                label=\"Envie uma mensagem(opcional)\"\n                placeholder=\"Escreva sua mensagem\"\n                value={description}\n                onChange={onDescriptionChange}\n              />\n              {/* <Typography\n                variant=\"subtitle1\"\n                className={styles.importantWarning}\n              >\n                <strong>Tags (opcional)</strong>\n              </Typography>\n              <Typography className={styles.txtalert}>\n                Insira marcações para identificar seus gastos. Use nossa\n                sugestão ou personalize as tags.\n              </Typography>\n              <Grid container spacing={1}>\n                {transferenceTags?.map(tag => (\n                  <Grid item key={tag}>\n                    <TagChip label={tag} onClick={onTagClick} />\n                  </Grid>\n                ))}\n              </Grid>\n              <Box className={styles.buttonTagFloating}>\n                <ButtonWithFloatingIcon onClick={onEditTagsButtonClick}>\n                  Editar TAG\n                </ButtonWithFloatingIcon>\n              </Box>\n              <TagEditPopUp\n                open={openTagEditPopUp}\n                onSaveTags={tags => dispatch(updatePixTransfer({ tags }))}\n                onClose={onEditTagsClose}\n              /> */}\n            </Box>\n          </React.Fragment>\n        }\n        footer={\n          <Box className={styles.footer}>\n            <ProcessPageFooterButton backButton />\n            <ProcessPageFooterButton\n              forwardButton\n              onClick={onConfirmButtonClick}\n            />\n          </Box>\n        }\n      />\n      {/* <Loader open={loading!} /> */}\n    </PageContainer>\n  );\n};\n","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/pix/pages/PixTransfer/KeyTransfer/KeyPixTransferSummary/KeyPixTransferSummary.view.tsx",["4727","4728","4729"],"import { Box, Typography } from \"@material-ui/core\";\nimport { Close } from \"@material-ui/icons\";\nimport {\n  AppBar,\n  Button,\n  PageContainer,\n  ProcessDescriptionHeader,\n  ProcessPageFooterButton,\n  ProcessPageLayout,\n} from \"components\";\nimport { LabelWithValueKeyPix } from \"components/LabelWithValueKeyPix\";\nimport { cancelLabel } from \"constants/buttons/labels\";\nimport { AccountRoutes } from \"features/account/constants/routes\";\nimport { TagChip } from \"features/tags/components/TagChip\";\nimport React from \"react\";\nimport { useStyles } from \"./KeyPixTransferSummary.style\";\nimport { AuthorizationSheet } from \"components/AuthorizationSheet\";\nimport { Loader } from \"components/Loader\";\nimport { Alert } from \"components/Alert\";\nimport { PixKeyType } from \"features/pix/redux/models/pixKeyType\";\nimport { PixTransfer } from \"features/pix/redux/models/pixTransfer\";\n\ninterface KeyPixTransferSummaryViewProps {\n  pixTransfer?: PixTransfer;\n  openAuthorizationSheet?: any;\n  onAuthorizationClose?: Function;\n  errorMessage?: string;\n  loading: boolean;\n  onConfirmButtonClick: VoidFunction;\n  onCancelButtonClick: VoidFunction;\n}\n\nexport const KeyPixTransferSummaryView: React.FC<\n  KeyPixTransferSummaryViewProps\n> = ({\n  pixTransfer,\n  openAuthorizationSheet,\n  onAuthorizationClose,\n  errorMessage,\n  loading,\n  onConfirmButtonClick,\n  onCancelButtonClick,\n}) => {\n  const styles = useStyles();\n\n  // const tagsView = React.useMemo(() => {\n  //   return tags?.map(t => <TagChip label={t} key={t} />)\n  // }, [])\n\n  return (\n    <PageContainer>\n      <ProcessPageLayout\n        appBar={\n          <AppBar\n            homeRoute={AccountRoutes.home}\n            action={\n              <Button\n                palette=\"secondary\"\n                size=\"small\"\n                startIcon={<Close color=\"inherit\" />}\n                onClick={onCancelButtonClick}\n              >\n                {cancelLabel}\n              </Button>\n            }\n          />\n        }\n        header={\n          <ProcessDescriptionHeader\n            title=\"Transferência com Pix\"\n            subtitle=\"Hora de conferir\"\n            description=\"Confira, cuidadosamente, os dados da transferência.\"\n          />\n        }\n        main={\n          <React.Fragment>\n            <Box>\n              <LabelWithValueKeyPix pixTransfer={pixTransfer} />\n            </Box>\n            {/*<Typography className={styles.txtalert}>Suas TAGs</Typography>\n             <Box\n              id=\"tags\"\n              display=\"grid\"\n              gridAutoRows=\"1fr\"\n              gridColumnGap={4}\n              gridTemplateColumns=\"repeat(5, 1fr)\"\n            >\n              {tagsView}\n            </Box> */}\n          </React.Fragment>\n        }\n        footer={\n          <Box className={styles.footer}>\n            <ProcessPageFooterButton backButton />\n            <ProcessPageFooterButton\n              forwardButton\n              onClick={onConfirmButtonClick}\n            />\n          </Box>\n        }\n      />\n      <AuthorizationSheet\n        open={openAuthorizationSheet}\n        onClose={onAuthorizationClose!}\n      />\n      <Loader open={loading} />\n      {errorMessage && (\n        <Alert title=\"Error\" message={errorMessage} severity=\"error\" />\n      )}\n    </PageContainer>\n  );\n};\n","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/pix/pages/PixTransfer/KeyTransfer/KeyPixTransferValue/KeyPixTransferValue.view.tsx",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/pix/pages/PixTransfer/KeyTransfer/KeyPixTransferPayeeInfo/KeyPixTransferPayeeInfo.view.tsx",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/pix/pages/PixTransfer/KeyTransfer/KeyPixTransfer/KeyPixTransfer.view.tsx",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/pix/pages/PixKeyManagement/CreateRandomPixKey/CreateRandomPixKey.view.tsx",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/pix/pages/PixKeyManagement/CreatePhoneNumberPixKey/CreatePhoneNumberPixKey.view.tsx",["4730"],"import React from \"react\";\nimport { PageContainer } from \"components/PageContainer\";\nimport { AccountRoutes } from \"features/account/constants/routes\";\nimport { AppBar } from \"components/AppBar\";\nimport { ProcessDescriptionHeader } from \"components/ProcessDescriptionHeader\";\nimport { ProcessPageLayout } from \"components/ProcessPageLayout\";\nimport { cancelLabel } from \"constants/buttons/labels\";\nimport { Button } from \"components/Button\";\nimport { Close } from \"@material-ui/icons\";\nimport { Box, Typography } from \"@material-ui/core\";\nimport { ProcessPageFooterButton, TextField } from \"components\";\nimport { useStyles } from \"./CreatePhoneNumberPixKey.styles\";\nimport { AuthorizationSheet } from \"components/AuthorizationSheet\";\nimport { Loader } from \"components/Loader\";\nimport { Alert } from \"components/Alert\";\nimport { AlertConcluded } from \"components/AlertConcluded\";\nimport { maskTaxId } from \"_utils/masks/taxId\";\nimport { Account } from \"features/account/redux/models/account\";\n\ninterface CreatePhoneNumberPixKeyProps {\n  onAlertClose: VoidFunction;\n  errorMessage?: string;\n  loading: boolean;\n  onShowAlert: boolean;\n  inputValue: string;\n  account: Account;\n  onPhoneNumberChange: (event: React.ChangeEvent<HTMLInputElement>) => void;\n  onCloseAlert: VoidFunction;\n  onClickAlert: VoidFunction;\n  onConfirmButtonClick: VoidFunction;\n  onBackButtonClick: VoidFunction;\n  onCancelButtonClick: VoidFunction;\n}\nexport const CreatePhoneNumberPixKeyView: React.FC<\n  CreatePhoneNumberPixKeyProps\n> = ({\n  onAlertClose,\n  loading,\n  errorMessage,\n  onShowAlert,\n  inputValue,\n  account,\n  onPhoneNumberChange,\n  onCloseAlert,\n  onClickAlert,\n  onConfirmButtonClick,\n  onBackButtonClick,\n  onCancelButtonClick,\n}) => {\n  const styles = useStyles();\n\n  return (\n    <PageContainer>\n      <ProcessPageLayout\n        appBar={\n          <AppBar\n            homeRoute={AccountRoutes.home}\n            action={\n              <Button\n                palette=\"secondary\"\n                size=\"small\"\n                startIcon={<Close color=\"primary\" />}\n                onClick={onCancelButtonClick}\n                data-test-id=\"cancel-button\"\n              >\n                {cancelLabel}\n              </Button>\n            }\n          />\n        }\n        header={\n          <ProcessDescriptionHeader\n            title=\"Registrar Chave Pix\"\n            subtitle=\"Registrar seu celular como chave Pix\"\n            description=\"Você receberá um código via SMS para confirmar a solicitação\"\n          />\n        }\n        main={\n          <Box component=\"form\" className={styles.phoneInput}>\n            <TextField\n              label=\"Número de celular\"\n              placeholder=\"(XX) XXXX.XXXX\"\n              value={inputValue}\n              onChange={onPhoneNumberChange}\n              inputMode={\"numeric\"}\n              disabled={inputValue ? true : false}\n            />\n            <Typography\n              variant=\"subtitle1\"\n              className={styles.importantWarning}\n              data-test-id=\"section-description\"\n            >\n              <strong>Aviso importante</strong>\n            </Typography>\n            <Typography\n              className={styles.txtalert}\n              data-test-id=\"alert-description\"\n            >\n              Todos os demais usuário do Pix poderão saber que você tem uma\n              chave Pix de e-mail ou de número de telefone celular registrada,\n              porém, sua chave não será exibida. Mesmo usando essa chave para\n              realizar uma transferência para você, o pagador verá as seguintes\n              informações:\n            </Typography>\n            <Box>\n              <Typography\n                className={styles.componentName}\n                data-test-id=\"account-name-description\"\n              >\n                {account!.name}\n              </Typography>\n              <Typography\n                className={styles.componentCpf_Cnpj}\n                data-test-id=\"identify-description\"\n              >\n                CPF/CNPJ:{maskTaxId(account!.taxId)}\n              </Typography>\n            </Box>\n          </Box>\n        }\n        footer={\n          <Box className={styles.footer}>\n            <ProcessPageFooterButton backButton onClick={onBackButtonClick} />\n            <ProcessPageFooterButton\n              forwardButton\n              disabled={!(inputValue.length === 16)}\n              onClick={onConfirmButtonClick}\n            />\n          </Box>\n        }\n      />\n      <AlertConcluded\n        open={onShowAlert}\n        onClose={onCloseAlert}\n        onClick={onClickAlert}\n        title={\"Chave Cadastrada\"}\n      />\n      <Loader open={loading} />\n      {errorMessage && (\n        <Alert\n          title=\"Erro\"\n          message={errorMessage}\n          severity={\"error\"}\n          onClose={onAlertClose}\n        />\n      )}\n    </PageContainer>\n  );\n};\n","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/pix/redux/actions.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/pix/pages/PixKeyManagement/CreateEmailPixKey/CreateEmailPixKey.view.tsx",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/hooks/useMask.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/pix/pages/PixTransfer/QrCodeTransfer/QrCodePixTransferDescription/QrCodePixTransferDescription.style.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/pix/pages/PixTransfer/QrCodeTransfer/QrCodePixTransferSummary/QrCodePixTransferSummary.style.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/pix/redux/models/accountType.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/pix/redux/models/pixKeyStatus.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/pix/redux/models/pixTransactionPurposeTest.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/pix/redux/models/pixKeyType.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/pix/pages/FirstAccess/components/index.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/pix/constants/routes.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/_utils/validate.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/_utils/masks/money.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/_utils/masks/generics.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/_utils/masks/taxPayer.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/pix/pages/PixTransfer/KeyTransfer/KeyTransferDescription/KeyPixTransferDescription.style.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/hooks/useValue.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/_utils/masks/taxId.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/constants/buttons/labels.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/account/constants/routes.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/pix/redux/models/keyType.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/pix/pages/PixTransfer/KeyTransfer/KeyPixTransferValue/KeyPixTransferValue.style.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/pix/pages/PixTransfer/KeyTransfer/KeyPixTransferSummary/KeyPixTransferSummary.style.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/_utils/masks/phone.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/pix/pages/PixTransfer/KeyTransfer/KeyPixTransfer/KeyPixTransfer.style.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/pix/pages/PixKeyManagement/CreateRandomPixKey/CreateRandomPixKey.styles.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/pix/pages/PixKeyManagement/CreatePhoneNumberPixKey/CreatePhoneNumberPixKey.styles.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/pix/index.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/pix/redux/models/addressType.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/pix/redux/actionTypes.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/components/index.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/pix/pages/PixTransfer/KeyTransfer/KeyPixTransferPayeeInfo/KeyPixTransferPayeeInfo.style.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/pix/pages/PixKeyManagement/CreateEmailPixKey/CreateEmailPixKey.styles.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/components/Button/index.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/transference/_utils/index.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/pix/pages/PixArea/PixArea.style.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/pix/pages/PixTransfer/BankTransfer/BankPixTransferPayeeName/BankPixTransferPayeeName.style.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/pix/pages/PixTransfer/PixTransferHome/PixTransferHome.styles.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/pix/pages/PixKeyManagement/FirstAccessPixKeyList/FirstAccessPixKeyList.styles.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/_utils/http.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/_config/http.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/pix/pages/PixKeyManagement/CreateTaxIdPixKey/CreateTaxIdPixKey.view.tsx",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/pix/pages/PixKeyManagement/ConfirmPhoneNumberPixKey/ConfirmPhoneNumberPixKey.view.tsx",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/pix/pages/PixKeyManagement/ConfirmEmailPixKey/ConfirmEmailPixKey.view.tsx",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/pix/pages/PixKeyManagement/PixKeyList/PixKeyList.view.tsx",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/pix/pages/PixTransfer/QrCodeTransfer/QrCodePixTransferValue/QrCodePixTransferValue.view.tsx",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/pix/pages/PixTransfer/QrCodeTransfer/QrCodePixTransferScanner/QrCodePixTransferScanner.view.tsx",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/pix/pages/PixTransfer/KeyTransfer/KeyPixTransfer/components/index.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/pix/pages/FirstAccess/components/SlideIndicator/index.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/pix/pages/FirstAccess/components/ThirdSlide/index.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/pix/pages/FirstAccess/components/SecondSlide/index.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/pix/pages/FirstAccess/components/FirstSlide/index.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/components/Loader/index.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/account/redux/models/operationType.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/components/Button/Button.tsx",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/components/Alert/index.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/components/TransparentDateFild/index.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/components/SchedulingButton/index.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/components/AuthorizationSheet/index.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/components/ErrorMessage/index.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/pix/pages/PixArea/components/PixButtonConfig/index.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/components/AlertConcluded/index.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/components/ProcessPageLayout/index.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/components/ProcessDescriptionHeader/index.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/components/AppBar/index.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/components/PageContainer/index.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/pix/pages/PixKeyManagement/FirstAccessPixKeyList/components/index.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/pix/pages/PixTransfer/QrCodeTransfer/QrCodePixTransferValue/QrCodePixTransferValue.style.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/pix/pages/PixTransfer/QrCodeTransfer/QrCodePixTransferScanner/QrCodePixTransferScanner.style.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/components/TransparentTextField/index.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/components/TextField/index.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/components/SelectionCard/index.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/components/ProcessPageFooterButton/index.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/components/ProcessPageFooter/index.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/components/LabelWithValueKeyPix/index.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/components/Button/Button.style.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/pix/pages/PixKeyManagement/PixKeyList/Keys.styles.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/components/Loader/Loader.tsx",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/pix/pages/FirstAccess/components/FirstSlide/FirstSlide.tsx",["4731"],"import React from \"react\";\nimport { Typography } from \"@material-ui/core\";\nimport { useStyles } from \"./FirstSlide.style\";\nimport { SlideContent } from \"../SlideContent\";\nimport { Icon } from \"components/Icon\";\n\nexport const FirstSlide: React.FC = () => {\n  const styles = useStyles();\n\n  const pixIcon = React.useMemo(() => {\n    return <Icon name={\"pixFilled\"} className={styles.pixIcon} />;\n  }, []);\n\n  return (\n    <SlideContent>\n      <>\n        {pixIcon}\n        <Typography variant=\"h1\" className={styles.title}>\n          <Icon name=\"pixWelcomeMessage\" />\n        </Typography>\n      </>\n      Aqui você terá acesso ao novo produto de pagamentos instantâneos do Banco\n      Central do Brasil. Com ele você poderá realizar, em poucos segundos,\n      pagamentos e recebimentos a qualquer dia e horário, inclusive finais de\n      semana.\n    </SlideContent>\n  );\n};\n","/home/danielvitor/Documentos/Develop/stonebank_front/src/components/ButtonWithFloatingIcon/index.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/pix/pages/PixKeyManagement/ConfirmEmailPixKey/ConfirmEmailPixKey.styles.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/pix/pages/PixKeyManagement/ConfirmPhoneNumberPixKey/ConfirmPhoneNumberPixKey.styles.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/pix/pages/PixKeyManagement/CreateTaxIdPixKey/CreateTaxIdPixKey.styles.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/pix/pages/FirstAccess/components/SecondSlide/SecondSlide.tsx",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/pix/pages/FirstAccess/components/ThirdSlide/ThirdSlide.tsx",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/pix/pages/FirstAccess/components/SlideIndicator/SlideIndicator.tsx",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/components/Alert/Alert.tsx",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/components/RecentFavoredCard/index.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/components/Icon/index.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/components/ErrorMessage/ErrorMessage.tsx",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/components/AuthorizationSheet/AuthorizationSheet.tsx",["4732","4733","4734"],"import React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { useHistory } from \"react-router-dom\";\nimport { Box, Drawer, Grid, Typography } from \"@material-ui/core\";\nimport { Close } from \"@material-ui/icons\";\nimport { Alert } from \"components/Alert\";\nimport { Button } from \"components/Button\";\nimport { ButtonWithFloatingIcon } from \"components/ButtonWithFloatingIcon\";\nimport { Loader } from \"components/Loader\";\nimport { PageContainer } from \"components/PageContainer\";\nimport { getBaseRequestData } from \"_utils/http\";\nimport { StoreState } from \"redux/state\";\nimport { HttpClient } from \"_config/http\";\nimport { ApiResponse } from \"_config/api\";\nimport { useStyles } from \"./AuthorizationSheet.style\";\nimport { OtpInput } from \"components/OtpInput/OtpInput\";\nimport { Icon } from \"components/Icon\";\n\ninterface AuthorizationSheetState {\n  loading: boolean;\n  message?: string;\n  success?: boolean;\n  validatedToken?: boolean;\n}\n\ninterface AuthorizationSheetProps {\n  description?: string;\n  nextRoute?: string;\n  open: boolean;\n  onClose: Function | ((tokenIsValid: boolean) => void);\n}\n\nexport const AuthorizationSheet: React.FC<AuthorizationSheetProps> = ({\n  description,\n  nextRoute,\n  open,\n  onClose,\n}) => {\n  const [{ loading, success, validatedToken, message }, setState] =\n    React.useState<AuthorizationSheetState>({\n      loading: false,\n    });\n  const [token, setToken] = React.useState(\"\");\n  const [disableConfirmButton, setDisableConfirmButton] = React.useState(true);\n  const [accountId, userId, requestToken] = useSelector((state: StoreState) => {\n    return [\n      state.account.account!.accountId,\n      state.auth.user!.id,\n      state.auth.token,\n    ];\n  });\n  const history = useHistory();\n  const styles = useStyles();\n\n  React.useEffect(() => {\n    if (open) generateToken();\n  }, [open]);\n\n  React.useEffect(() => {\n    if (loading) setDisableConfirmButton(true);\n    if (token.length === 6 && !loading) setDisableConfirmButton(false);\n    else setDisableConfirmButton(true);\n  }, [history, loading, nextRoute, token.length]);\n\n  React.useEffect(() => {\n    if (validatedToken) onClose(validatedToken);\n  }, [validatedToken]);\n\n  const generateToken = async () => {\n    setState({ loading: true });\n\n    try {\n      const { url, defaultHeaders } = await getBaseRequestData(\n        \"/AuthorizationToken\"\n      );\n      const data = {\n        userId,\n        accountId,\n      };\n\n      await HttpClient.post(url, data, {\n        headers: {\n          ...defaultHeaders,\n          Authorization: `Bearer ${requestToken}`,\n        },\n      });\n      setState({\n        loading: false,\n        success: true,\n        message: \"Token gerado com sucesso, por favor aguarde o envio.\",\n      });\n    } catch (error: any) {\n      let response: ApiResponse | undefined;\n      if (error.response) response = error.response?.data;\n      setState({\n        loading: false,\n        message: response?.message ?? error.message,\n      });\n    }\n  };\n\n  const onTokenChange = (newValue: string) => {\n    setToken(newValue);\n  };\n\n  const onCloseButtonClick = () => {\n    onClose(validatedToken ?? false);\n  };\n\n  const onResendTokenButtonClick = () => {\n    generateToken();\n  };\n\n  const onConfirmButtonClick = async () => {\n    setState({ loading: true });\n    try {\n      const { url, defaultHeaders } = await getBaseRequestData(\n        \"/AuthorizationToken/ValidateAuthorizationToken\"\n      );\n      const data = {\n        code: token,\n        userId,\n        accountId,\n      };\n      await HttpClient.post(url, data, {\n        headers: {\n          ...defaultHeaders,\n          Authorization: `Bearer ${requestToken}`,\n        },\n      });\n      setState({\n        loading: false,\n        success: true,\n        validatedToken: true,\n        message: undefined,\n      });\n    } catch (error: any) {\n      let response: ApiResponse | undefined;\n      if (error.response) response = error.response?.data;\n      setState({\n        loading: false,\n        validatedToken: false,\n        message: \"Não foi possível validar seu token.\",\n      });\n    }\n  };\n\n  const onShowSuccessMessageClose = () => {\n    if (nextRoute) history.push(nextRoute);\n  };\n\n  return (\n    <React.Fragment>\n      <Drawer\n        className={styles.drawer}\n        anchor=\"bottom\"\n        elevation={0}\n        open={open}\n        onClose={() => onClose(validatedToken ?? false)}\n      >\n        <PageContainer>\n          <Box className={styles.content}>\n            <Box className={styles.closeButton}>\n              <Button\n                size=\"small\"\n                palette=\"secondary\"\n                onClick={onCloseButtonClick}\n                startIcon={<Close color=\"primary\" />}\n                data-test-id=\"close-button\"\n              >\n                Fechar\n              </Button>\n            </Box>\n            <Grid\n              container\n              direction=\"column\"\n              spacing={4}\n              data-test-id=\"auth-sheet\"\n            >\n              <Grid item>\n                <Typography variant=\"h6\" gutterBottom>\n                  Digite seu token\n                </Typography>\n                <Typography variant=\"body2\" className={styles.subtitle}>\n                  Está tudo certo? Agora é só inserir seu token para confirmar a\n                  operação.\n                </Typography>\n              </Grid>\n              <Grid item>\n                <OtpInput\n                  isInputNum\n                  className={styles.OtpInput}\n                  value={token}\n                  onChange={onTokenChange}\n                  isInputSecure\n                  numInputs={6}\n                  data-test-id=\"change-token\"\n                />\n              </Grid>\n\n              <Grid item className={styles.buttonsRow}>\n                <Grid container justify=\"center\" spacing={4}>\n                  <Grid item>\n                    <ButtonWithFloatingIcon\n                      onClick={onResendTokenButtonClick}\n                      data-test-id=\"resend-token\"\n                      icon={<Icon name=\"buttonBg\" />}\n                    >\n                      Reenviar Token\n                    </ButtonWithFloatingIcon>\n                  </Grid>\n                  <Grid item>\n                    <ButtonWithFloatingIcon\n                      icon={<Icon name=\"confirm\" />}\n                      disabled={disableConfirmButton}\n                      onClick={onConfirmButtonClick}\n                      data-test-id=\"confirm-button\"\n                    >\n                      Confirmar\n                    </ButtonWithFloatingIcon>\n                  </Grid>\n                </Grid>\n              </Grid>\n            </Grid>\n          </Box>\n        </PageContainer>\n      </Drawer>\n      <Loader open={loading} />\n      {message && (\n        <Alert\n          title={success ? \"Sucesso\" : \"Erro\"}\n          message={message}\n          severity={success ? \"success\" : \"error\"}\n          onClose={validatedToken ? onShowSuccessMessageClose : undefined}\n        />\n      )}\n    </React.Fragment>\n  );\n};\n","/home/danielvitor/Documentos/Develop/stonebank_front/src/components/SchedulingButton/SchedulingButton.tsx",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/components/TransparentDateFild/TransparentDateField.tsx",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/pix/pages/PixArea/components/PixButtonConfig/PixButtonConfig.tsx",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/components/AlertConcluded/AlertConcluded.tsx",["4735"],"import React from \"react\";\nimport { useStyle } from \"./AlertConcluded.style\";\nimport { Icon } from \"components/Icon\";\nimport { Drawer, Box, Typography } from \"@material-ui/core\";\nimport { RestaurantSharp } from \"@material-ui/icons\";\n\ninterface AlertProps {\n  open: boolean;\n  onClose?: (args: boolean) => void;\n  onClick?: React.MouseEventHandler<HTMLElement>;\n  title: string;\n}\n\nexport const AlertConcluded: React.FC<AlertProps> = ({\n  open,\n  onClose = () => {},\n  onClick,\n  title,\n  ...rest\n}) => {\n  const styles = useStyle();\n  return (\n    <Drawer\n      className={styles.drawer}\n      anchor=\"top\"\n      elevation={5}\n      open={open}\n      onClose={() => onClose(true)}\n      onClick={onClick}\n      data-test-id=\"alert\"\n    >\n      <Box\n        className={styles.alertcontainer}\n        data-test-id=\"alert-concluded\"\n        {...rest}\n      >\n        <Icon name=\"conclude\" className={styles.imgalert} />\n        <Typography className={styles.txtalert}>{title}</Typography>\n      </Box>\n    </Drawer>\n  );\n};\n","/home/danielvitor/Documentos/Develop/stonebank_front/src/components/PageContainer/PageContainer.tsx",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/components/AppBar/AppBar.tsx",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/components/ProcessDescriptionHeader/ProcessDescriptionHeader.tsx",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/components/ProcessPageLayout/ProcessPageLayout.tsx",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/pix/pages/PixTransfer/KeyTransfer/KeyPixTransfer/components/PixKeyTypeButtonList/index.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/authentication/utils.ts",["4736"],"import { ConfigProvider } from \"_config/configProvider\";\nimport { HttpClient } from \"_config/http\";\n\nconst CryptoJS = require(\"crypto-js\");\n\nexport async function getApplicationToken() {\n  // let key = { applicationKey: ConfigProvider.config.application.key, expirationDate: new Date(new Date().setMinutes(new Date().getMinutes() + 1)) }\n\n  // let encryptedKey = CryptoJS.AES.encrypt(JSON.stringify(key), ConfigProvider.config.application.aesKey, {\n  //   iv: ConfigProvider.config.application.aesIV,\n  //   mode: CryptoJS.mode.CBC,\n  //   padding: CryptoJS.pad.Pkcs7\n  // }).toString();\n\n  const { key } = ConfigProvider.config.application;\n  const url = `${ConfigProvider.config.api.baseUrl}/auth`;\n\n  const response = await HttpClient.get(url, {\n    headers: {\n      ...ConfigProvider.config.api.defaultHeaders,\n      // 'x-application-key': encryptedKey\n      \"x-application-key\": key,\n    },\n  });\n\n  return {\n    // 'x-application-key': encryptedKey,\n    \"x-application-key\": key,\n    \"x-application-token\": response.headers[\"x-application-token\"],\n  };\n}\n\nexport const validateToken = (token: string) => {\n  if (!token) return false;\n\n  const decoded: any = JSON.parse(atob(token.split(\".\")[1]));\n  const exp = decoded.exp * 1000;\n\n  return Date.now() < exp;\n};\n","/home/danielvitor/Documentos/Develop/stonebank_front/src/components/TextField/TextField.tsx",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/components/TransparentTextField/TransparentTextField.tsx",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/components/ProcessPageFooter/ProcessPageFooter.tsx",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/components/ProcessPageFooterButton/ProcessPageFooterButton.tsx",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/components/SelectionCard/SelectionCard.tsx",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/components/LabelWithValueKeyPix/LabelWithValueKeyPix.tsx",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/pix/pages/FirstAccess/components/FirstSlide/FirstSlide.style.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/pix/pages/FirstAccess/components/SlideIndicator/SlideIndicator.style.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/pix/pages/FirstAccess/components/ThirdSlide/ThirdSlide.style.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/pix/pages/FirstAccess/components/SecondSlide/SecondSlide.style.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/pix/pages/FirstAccess/components/SlideContent.tsx",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/components/ButtonWithFloatingIcon/ButtonWithFloatingIcon.tsx",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/pix/pages/PixKeyManagement/PixKeyList/components/EmptyListMessage/index.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/components/ErrorMessage/ErrorMessage.style.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/components/TransparentDateFild/TransparentDateField.style.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/components/AuthorizationSheet/AuthorizationSheet.style.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/components/RecentFavoredCard/RecentFavoredCard.tsx",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/pix/pages/PixArea/components/PixButtonConfig/PixButtonConfig.style.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/components/AlertConcluded/AlertConcluded.style.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/components/Icon/Icon.tsx",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/components/PageContainer/PageContainter.style.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/components/AppBar/AppBar.style.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/components/ProcessDescriptionHeader/ProcessDescriptionHeader.style.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/components/ProcessPageLayout/ProcessPageLayout.style.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/pix/pages/PixKeyManagement/FirstAccessPixKeyList/components/SlideIndicator/index.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/pix/pages/PixKeyManagement/FirstAccessPixKeyList/components/SecondSlide/index.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/pix/pages/PixKeyManagement/FirstAccessPixKeyList/components/FirstSlide/index.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/components/TextField/TextField.style.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/components/TransparentTextField/TransparentTextField.style.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/components/ProcessPageFooter/ProcessPageFooter.style.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/components/ProcessPageFooterButton/ProcessPageFooterButton.style.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/components/SelectionCard/SelectionCard.style.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/pix/components/ConfirmPixKeyDeletionSheet/index.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/pix/pages/PixTransfer/KeyTransfer/KeyPixTransfer/components/PixKeyTypeButtonList/PixKeyTypeButtonList.controller.tsx",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/components/QrCodeReader/index.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/components/ButtonWithFloatingIcon/ButtonWIthFloatingIcon.style.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/components/RecentFavoredCard/RecentFavoredCard.style.ts",["4737"],"import { makeStyles } from \"@material-ui/core\";\nimport { colors, theme } from \"_config/theme\";\n\nexport const useStyles = makeStyles({\n  recentFavored: {\n    \"& button\": {\n      top: \"0\",\n      height: \"50px\",\n      width: \"120px\",\n      borderRadius: \"6px\",\n      border: `1px solid ${colors.neutral.shade30}`,\n      boxShadow: `0px 2px 4px 0px ${colors.readOnly.light.black}40`,\n      padding: 0,\n      color: colors.neutral.shade40,\n      display: \"block\",\n      \"& .expressionsWrapper\": {\n        marginTop: \"3px\",\n        display: \"block\",\n        lineHeight: \"1.2\",\n        marginLeft: \"8px\",\n        \"& .name\": {\n          fontSize: \"11px\",\n          padding: \"0 0 4px\",\n          fontStyle: \"normal\",\n          letterSpacing: \"0em\",\n          textAlign: \"left\",\n          display: \"block\",\n        },\n        \"& .bankName\": {\n          fontSize: \"11px\",\n          fontStyle: \"normal\",\n          letterSpacing: \"0em\",\n          textAlign: \"left\",\n          display: \"block\",\n        },\n      },\n    },\n  },\n});\n","/home/danielvitor/Documentos/Develop/stonebank_front/src/components/Icon/Icon.style.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/pix/pages/PixKeyManagement/PixKeyList/components/EmptyListMessage/EmptyListMessage.tsx",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/components/OtpInput/OtpInput.tsx",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/pix/pages/PixKeyManagement/FirstAccessPixKeyList/components/FirstSlide/FirstSlide.tsx",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/pix/pages/PixKeyManagement/FirstAccessPixKeyList/components/SecondSlide/SecondSlide.tsx",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/pix/pages/PixKeyManagement/FirstAccessPixKeyList/components/SlideIndicator/SlideIndicator.tsx",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/components/LabelWithValueKeyPix/LabelWithValueKeyPix.style.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/pix/pages/PixTransfer/KeyTransfer/KeyPixTransfer/components/PixKeyTypeButtonList/PixKeyTypeButtonList.view.tsx",["4738"],"/* eslint-disable react-hooks/exhaustive-deps */\nimport { Box } from \"@material-ui/core\";\nimport { Button } from \"components\";\nimport { KeyType } from \"features/pix/redux/models/keyType\";\nimport React from \"react\";\nimport { useStyles } from \"./PixKeyTypeButtonList.style\";\n\ninterface PixKeyTypeButtonListViewProps {\n  selectedKeyType: KeyType;\n  setKeyType: (_: KeyType) => void;\n}\n\nexport const PixKeyTypeButtonListView: React.FC<\n  PixKeyTypeButtonListViewProps\n> = ({ selectedKeyType, setKeyType }) => {\n  const styles = useStyles();\n\n  const mapKeyTypeToButton = React.useCallback(\n    (key: KeyType) => {\n      const isActive = selectedKeyType.value === key.value;\n\n      return (\n        <Button\n          key={key.value}\n          size=\"small\"\n          variant={isActive ? \"contained\" : \"outlined\"}\n          //className={styles.button}\n          onClick={() => setKeyType(key)}\n          data-test-id=\"typekey-pix\"\n        >\n          {key.displayString}\n        </Button>\n      );\n    },\n    [selectedKeyType]\n  );\n\n  const buttons = React.useMemo(() => {\n    return KeyType.values.map(mapKeyTypeToButton);\n  }, [selectedKeyType]);\n\n  return (\n    <Box\n      display=\"grid\"\n      gridTemplateColumns=\"repeat(4, 1fr)\"\n      gridColumnGap={4}\n      height={36}\n    >\n      {buttons}\n    </Box>\n  );\n};\n","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/pix/pages/FirstAccess/components/SlideBottomText/index.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/components/QrCodeReader/QrCodeReader.tsx",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/components/PopUpErrorMessage/index.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/pix/components/ConfirmPixKeyDeletionSheet/ConfirmPixKeyDeletionSheet.tsx",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/pix/pages/PixKeyManagement/PixKeyList/components/EmptyListMessage/EmptyListMessage.style.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/components/OtpInput/OptInput.style.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/components/OtpInput/SingleOtp.tsx",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/pix/pages/PixKeyManagement/FirstAccessPixKeyList/components/SlideIndicator/SlideIndicator.style.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/pix/pages/PixKeyManagement/FirstAccessPixKeyList/components/SecondSlide/SecondSlide.style.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/pix/pages/PixKeyManagement/FirstAccessPixKeyList/components/FirstSlide/FirstSlide.style.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/pix/pages/PixKeyManagement/FirstAccessPixKeyList/components/SlideContent.tsx",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/pix/pages/PixTransfer/KeyTransfer/KeyPixTransfer/components/PixKeyTypeButtonList/PixKeyTypeButtonList.style.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/pix/components/ConfirmPixKeyDeletionSheet/ConfirmPixKeyDeletionSheet.style.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/pix/pages/FirstAccess/components/SlideBottomText/SlideBottomText.tsx",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/components/PopUpErrorMessage/PopUpErrorMessage.tsx",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/pix/pages/FirstAccess/components/SlideBottomText/SlideBottomText.style.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/components/PopUpErrorMessage/PopUpErrorMessage.style.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/pix/_utils/masks/maskKeys.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/hooks/usePrevious.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/pix/pages/PixKeyManagement/FirstAccessPixKeyList/components/SlideBottomText/index.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/pix/pages/PixKeyManagement/FirstAccessPixKeyList/components/SlideBottomText/SlideBottomText.tsx",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/pix/pages/PixKeyManagement/FirstAccessPixKeyList/components/SlideBottomText/SlideBottomText.style.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/pix/pages/PixTransfer/BankTransfer/BankPixTransferPayeeTaxId/BankPixTransferPayeeTaxId.controller.tsx",["4739"],"import React from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { PixRoutes } from \"features/pix\";\nimport { BankPixTransferPayeeTaxIdView } from \"./BankPixTransferPayeeTaxId.view\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  findBankList,\n  updatePixTransfer,\n  updateState,\n} from \"features/pix/redux/actions\";\nimport { useMask } from \"hooks/useMask\";\nimport { maskTaxPayer } from \"_utils/masks/taxPayer\";\nimport { StoreState } from \"redux/state\";\nimport { maskTransference } from \"_utils/masks/transferenceNumber\";\n\nexport const BankPixTransferPayeeTaxId: React.FC = () => {\n  const history = useHistory();\n  const dispatch = useDispatch();\n\n  const pixState = useSelector((state: StoreState) => state.pix);\n  const { bankList, pixTransfer, loading, errorMessage } = pixState;\n\n  const [toTaxId, setToTaxId] = useMask(maskTaxPayer);\n  const [isValidValue, setIsValidValue] = React.useState(false);\n\n  React.useEffect(() => {\n    if (pixTransfer?.toTaxId && bankList)\n      history.push(PixRoutes.bankPixTransferSelectBank);\n  }, [pixTransfer?.toTaxId, bankList]);\n\n  React.useEffect(() => {\n    setIsValidValue(toTaxId.length === 14 || toTaxId.length === 18);\n  }, [toTaxId]);\n\n  const onTaxIdChange = (event: React.ChangeEvent<HTMLInputElement>) =>\n    setToTaxId(event.target.value);\n\n  const onCancelButtonClick = () => {\n    dispatch(updateState());\n    history.push(PixRoutes.pixArea);\n  };\n\n  const onBackButtonClick = () => {\n    dispatch(updatePixTransfer({ toName: undefined }));\n    history.goBack();\n  };\n\n  const onConfirmButtonClick = () => {\n    dispatch(\n      updatePixTransfer({ ...pixTransfer, toTaxId: maskTransference(toTaxId) })\n    );\n    dispatch(findBankList());\n  };\n\n  return (\n    <BankPixTransferPayeeTaxIdView\n      toTaxId={toTaxId}\n      isValidValue={isValidValue}\n      loading={loading}\n      errorMessage={errorMessage}\n      onConfirmButtonClick={onConfirmButtonClick}\n      onBackButtonClick={onBackButtonClick}\n      onTaxIdChange={onTaxIdChange}\n      onCancelButtonClick={onCancelButtonClick}\n    />\n  );\n};\n","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/pix/pages/PixTransfer/BankTransfer/BankPixTransferSelectBank/BankPixTransferSelectBank.controller.tsx",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/pix/pages/PixTransfer/BankTransfer/BankDataPixTransferBranch/BankDataPixTransferBranch.controller.tsx",["4740"],"import React from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { PixRoutes } from \"features/pix\";\nimport { BankDataPixTransferBranchView } from \"./BankDataPixTransferBranch.view\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { updatePixTransfer, updateState } from \"features/pix/redux/actions\";\nimport { maskTransference } from \"_utils/masks/transferenceNumber\";\nimport { useMask } from \"hooks/useMask\";\nimport { StoreState } from \"redux/state\";\n\nexport const BankDataPixTransferBranch: React.FC = () => {\n  const history = useHistory();\n  const dispatch = useDispatch();\n\n  const [toBankBranch, setToBankBranch] = useMask(maskTransference);\n\n  const { pixTransfer } = useSelector((state: StoreState) => state.pix);\n\n  const onToBankBranchChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    if (event.target.value.length <= 4) setToBankBranch(event.target.value);\n  };\n\n  const onCancelButtonClick = () => {\n    dispatch(updateState());\n    history.push(PixRoutes.pixArea);\n  };\n\n  const onConfirmButtonClick = React.useCallback(() => {\n    dispatch(updatePixTransfer({ ...pixTransfer, toBankBranch: toBankBranch }));\n    history.push(PixRoutes.bankDataPixTransferAccount);\n  }, [toBankBranch]);\n\n  return (\n    <BankDataPixTransferBranchView\n      toBankBranch={toBankBranch}\n      isValidValue={toBankBranch.length === 0}\n      onConfirmButtonClick={onConfirmButtonClick}\n      onToBankBranchChange={onToBankBranchChange}\n      onCancelButtonClick={onCancelButtonClick}\n    />\n  );\n};\n","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/pix/pages/PixTransfer/BankTransfer/BankPixTransferAccountType/BankPixTransferAccountType.controller.tsx",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/pix/pages/PixTransfer/BankTransfer/BankDataPixTransferAccount/BankDataPixTransferAccount.controller.tsx",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/pix/pages/PixTransfer/BankTransfer/BankPixTransferValue/BankPixTransferValue.controller.tsx",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/pix/pages/PixTransfer/BankTransfer/BankPixTransferDescription/BankPixTransferDescription.controller.tsx",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/pix/pages/PixTransfer/BankTransfer/BankPixTransferSummary/BankPixTransferSummary.controller.tsx",["4741"],"import { PixRoutes } from \"features/pix/constants/routes\";\nimport React from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useHistory } from \"react-router-dom\";\nimport { BankPixTransferSummaryView } from \"./BankPixTransferSummary.view\";\nimport { StoreState } from \"redux/state\";\nimport {\n  createPixTransferAction,\n  updateState,\n} from \"features/pix/redux/actions\";\n\nexport const BankPixTransferSummary: React.FC = () => {\n  const history = useHistory();\n\n  const dispatch = useDispatch();\n\n  const [validatedToken, setValidatedToken] = React.useState(false);\n\n  const [openAuthorizationSheet, setOpenAuthorizationSheet] =\n    React.useState(false);\n\n  const { pixTransfer, createPixTransfer, loading, errorMessage } = useSelector(\n    (state: StoreState) => state.pix\n  );\n\n  React.useEffect(() => {\n    if (validatedToken && createPixTransfer)\n      history.replace(PixRoutes.keyPixTransferProcess);\n  }, [createPixTransfer]);\n\n  // React.useEffect(() => {\n  //   setPixKeyType(pixState.pixKeyType?.displayString!)\n  // }, [pixState])\n\n  // React.useEffect(() => {\n  //   setPixDate(pixState?.paymentDate!)\n  //   setValue(pixState?.value!)\n  // }, [pixState])\n\n  const onConfirmButtonClick = () => {\n    setOpenAuthorizationSheet(true);\n  };\n\n  const onCancelButtonClick = () => {\n    dispatch(updateState());\n    history.push(PixRoutes.pixArea);\n  };\n\n  const onAuthorizationClose = (tokenIsValid: boolean) => {\n    if (tokenIsValid) {\n      setValidatedToken(true);\n      dispatch(createPixTransferAction());\n    }\n    setOpenAuthorizationSheet(false);\n  };\n\n  return (\n    <BankPixTransferSummaryView\n      loading={loading}\n      pixTransfer={pixTransfer}\n      errorMessage={errorMessage}\n      openAuthorizationSheet={openAuthorizationSheet}\n      onCancelButtonClick={onCancelButtonClick}\n      onConfirmButtonClick={onConfirmButtonClick}\n      onAuthorizationClose={onAuthorizationClose}\n    />\n  );\n};\n","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/pix/pages/ReceivePixTransfer/ReceivePixTransferQrCodeCheck/ReceivePixTransferQrCodeCheck.controller.tsx",["4742","4743"],"import React from \"react\";\nimport { useHistory, useLocation } from \"react-router-dom\";\nimport { PixRoutes } from \"features/pix\";\nimport { ReceivePixTransferQrCodeCheckView } from \"./ReceivePixTransferQrCodeCheck.view\";\nimport { useSelector } from \"react-redux\";\nimport { StoreState } from \"redux/state\";\nimport { PixKeyType } from \"features/pix/redux/models/pixKeyType\";\n\nexport const ReceivePixTransferQrCodeCheck: React.FC = () => {\n  const history = useHistory();\n\n  const { state } = useLocation();\n\n  const { principalValue } = state as any;\n\n  const onCancelButtonClick = React.useCallback(() => {\n    history.push(PixRoutes.pixArea);\n  }, []);\n\n  const [pixKeyType, setPixKeyType] = React.useState(\"\");\n  const [onSharePixQrCode, setSharePixQrCode] = React.useState(false);\n  const [validatedSharePixQrCodeSheet, setSharePixQrCodeSheet] =\n    React.useState(false);\n\n  const { staticPixQrCode, pixKey } = useSelector(\n    (state: StoreState) => state.pix\n  );\n\n  React.useEffect(() => {\n    switch (pixKey) {\n      case PixKeyType.CPF === pixKey?.pixKeyType:\n        setPixKeyType(\"CPF\");\n        break;\n      case PixKeyType.CNPJ === pixKey?.pixKeyType:\n        setPixKeyType(\"CNPJ\");\n        break;\n\n      case PixKeyType.Email === pixKey?.pixKeyType:\n        setPixKeyType(\"Email\");\n        break;\n\n      case PixKeyType.PhoneNumber === pixKey?.pixKeyType:\n        setPixKeyType(\"Celular\");\n        break;\n    }\n  }, [pixKey]);\n\n  const onBackButtonClick = () => {\n    history.push(PixRoutes.pixArea);\n  };\n\n  const onSharePixQrCodeClick = React.useCallback(() => {\n    setSharePixQrCode(true);\n  }, []);\n\n  const onSharePixQrCodeClose = (SharePixQrCodeValid: boolean) => {\n    if (SharePixQrCodeValid) setSharePixQrCodeSheet(true);\n    setSharePixQrCode(false);\n  };\n\n  const onConfirmButtonClick = () => {\n    history.push(PixRoutes.pixArea);\n  };\n\n  return (\n    <ReceivePixTransferQrCodeCheckView\n      onBackButtonClick={onBackButtonClick}\n      onCancelButtonClick={onCancelButtonClick}\n      onConfirmButtonClick={onConfirmButtonClick}\n      qrCodeBase64={staticPixQrCode?.qrCode}\n      value={principalValue!}\n      pixKey={pixKey!}\n      pixKeyType={pixKeyType!}\n      onSharePixQrCodeClick={onSharePixQrCodeClick}\n      onSharePixQrCode={onSharePixQrCode}\n      onSharePixQrCodeClose={onSharePixQrCodeClose}\n    />\n  );\n};\n","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/pix/pages/ReceivePixTransfer/ReceivePixTransferQrCode/ReceivePixTransferQrCode.controller.tsx",["4744","4745","4746","4747"],"import React from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { PixRoutes } from \"features/pix\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { StoreState } from \"redux/state\";\nimport { ReceivePixTransferQrCodeView } from \"./ReceivePixTransferQrCode.view\";\n// import { SelectPixKey } from 'features/pix/redux/models/selectPixKey'\n// import { updatePix, updateStaticPixQRCode } from 'features/pix/redux/actions'\n\nexport const ReceivePixTransferQrCode: React.FC = () => {\n  const history = useHistory();\n  const dispatch = useDispatch();\n  const { pixKey, pixKeyList, staticPixQrCode } = useSelector(\n    (state: StoreState) => state.pix\n  );\n\n  const [onSharePixQrCode, setSharePixQrCode] = React.useState(false);\n  const [validatedSharePixQrCodeSheet, setSharePixQrCodeSheet] =\n    React.useState(false);\n\n  const [onPixKeySelection, setPixKeySelection] = React.useState(false);\n  const [validatedPixKeySelectionSheet, setPixKeySelectionSheet] =\n    React.useState(false);\n\n  const onCancelButtonClick = React.useCallback(() => {\n    history.push(PixRoutes.pixArea);\n  }, []);\n\n  const onBackButtonClick = () => {\n    // dispatch(updatePix())\n    // dispatch(updateStaticPixQRCode())\n  };\n\n  const onSetValue = () => {\n    history.push(PixRoutes.receivePixTransferQrCodeValue);\n  };\n\n  const onSharePixQrCodeClick = React.useCallback(() => {\n    setSharePixQrCode(true);\n  }, []);\n\n  const onSharePixQrCodeClose = (SharePixQrCodeValid: boolean) => {\n    if (SharePixQrCodeValid) setSharePixQrCodeSheet(true);\n    setSharePixQrCode(false);\n  };\n\n  const onPixKeySelectionClick = React.useCallback(() => {\n    setPixKeySelection(true);\n  }, []);\n\n  const onPixKeySelectionClose = (PixKeySelectionValid: boolean) => {\n    if (PixKeySelectionValid) setPixKeySelectionSheet(true);\n    setPixKeySelection(false);\n  };\n\n  // const onKeyClick = (pix: SelectPixKey) => {\n  //   dispatch(updatePix(pix))\n  // }\n\n  return (\n    <ReceivePixTransferQrCodeView\n      onBackButtonClick={onBackButtonClick}\n      onCancelButtonClick={onCancelButtonClick}\n      staticPixQrCode={staticPixQrCode}\n      onSetValue={onSetValue}\n      onSharePixQrCodeClick={onSharePixQrCodeClick}\n      onSharePixQrCode={onSharePixQrCode}\n      onSharePixQrCodeClose={onSharePixQrCodeClose}\n      onPixKeySelectionClick={onPixKeySelectionClick}\n      onPixKeySelection={onPixKeySelection}\n      onPixKeySelectionClose={onPixKeySelectionClose}\n      // onKeyClick={onKeyClick}\n      pixKeyList={pixKeyList!}\n      pixKey={pixKey!}\n    />\n  );\n};\n","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/pix/pages/ReceivePixTransfer/ReceivePixTransferQrCodeValue/ReceivePixTransferQrCodeValue.controller.tsx",["4748","4749","4750","4751","4752","4753","4754","4755"],"import React from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { PixRoutes } from \"features/pix\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { parseCurrency } from \"_translate\";\nimport { maskMoney } from \"_utils/masks/money\";\nimport { useValue } from \"hooks/useValue\";\nimport { StoreState } from \"redux/state\";\nimport { ReceivePixTransferQrCodeValueView } from \"./ReceivePixTransferQrCodeValue.view\";\nimport {\n  createStaticPixQrCodeAction,\n  findPixQrCode,\n} from \"features/pix/redux/actions\";\n\nexport const ReceivePixTransferQrCodeValue: React.FC = () => {\n  const [valueInput, setValueInput] = useValue(maskMoney);\n  const [isValidValue, setIsValidValue] = React.useState(false);\n  const history = useHistory();\n  const dispatch = useDispatch();\n  const [onNextPixQRCode, setOnNextPixQRCode] = React.useState(false);\n  const [optionalIdentifier, setOptionalIdentifier] = React.useState(\"\");\n\n  const [description, setDescription] = React.useState(\"\");\n  const [onHelpPixQRCode, setHelpPixQRCode] = React.useState(false);\n  const [validatedHelpPixQRCodeSheet, setHelpPixQRCodeSheet] =\n    React.useState(false);\n\n  const [sentCreateStaticPixQrCode, setSentCreateStaticPixQrCode] =\n    React.useState(false);\n\n  const {\n    pixKey,\n    staticPixQrCode,\n    createStaticPixQrCode,\n    loading,\n    errorMessage,\n  } = useSelector((state: StoreState) => state.pix);\n\n  React.useEffect(() => {\n    const parsedValue = parseCurrency(valueInput);\n    setIsValidValue(Number.isNaN(parsedValue) || parsedValue <= 0);\n  }, [valueInput]);\n\n  const onDoubtClick = () => {\n    // history.push(PixRoutes.keyTransferMessage)\n  };\n\n  const { balance } = useSelector((store: StoreState) => ({\n    balance: store.account.dashboard!.balance,\n  }));\n\n  const casting = (valueInString: string) => {\n    const valueCents = Number(valueInString.split(\",\")[1]) / 100 || 0;\n    return (\n      Number(valueInString.split(\",\")[0].replace(/[^0-9]+/g, \"\")) + valueCents\n    );\n  };\n\n  const Identifier = [\n    { id: \"0\", value: \"Compra ou transferência\" },\n    { id: \"1\", value: \"Retirar\" },\n    { id: \"2\", value: \"Compra com troco\" },\n  ];\n\n  const onDescriptionChange = (event: React.ChangeEvent<HTMLInputElement>) =>\n    setDescription(event.target.value);\n\n  const onIdentifierChange = (event: React.ChangeEvent<HTMLInputElement>) =>\n    setOptionalIdentifier(event.target.value);\n\n  const onValueChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setValueInput(event.target.value);\n  };\n  const onHelpClick = React.useCallback(() => {\n    setHelpPixQRCode(true);\n  }, []);\n\n  const onHelpPixQRCodeClose = (HelpPixQRCodeValid: boolean) => {\n    if (HelpPixQRCodeValid) setHelpPixQRCodeSheet(true);\n    setHelpPixQRCode(false);\n  };\n\n  // React.useEffect(() => {\n  //   if (onNextPixQRCode && qrCodeState instanceof SuccessPixState) {\n  //     history.push(PixRoutes.checkPixQRCode)\n  //   }\n  // }, [history, onNextPixQRCode, qrCodeState])\n\n  const onAlertClose = () => {\n    // dispatch(closeAlert())\n  };\n\n  const onSubmit = (e: React.FormEvent) => {\n    // e.preventDefault()\n    // setOnNextPixQRCode(true)\n    // dispatch(\n    //   updateStaticPixQRCode({\n    //     ...pixQrCodeStatic,\n    //     additionalData: description,\n    //     pixTransactionPurpose: Number(optionalIdentifier),\n    //     principalValue: casting(valueInput),\n    //   }),\n    // )\n    // dispatch(\n    //   generateStaticPixQRCode({\n    //     additionalData: description,\n    //     pixTransactionPurpose: Number(optionalIdentifier),\n    //     principalValue: casting(valueInput),\n    //   }),\n    // )\n  };\n\n  //-------------------------------------------------------------------------------------\n\n  const onConfirmButtonClick = () => {\n    dispatch(\n      createStaticPixQrCodeAction(\n        casting(valueInput),\n        pixKey?.pixKeyValue,\n        pixKey?.pixKeyType,\n        undefined,\n        Number(optionalIdentifier),\n        description\n      )\n    );\n    setSentCreateStaticPixQrCode(true);\n  };\n\n  React.useEffect(() => {\n    if (createStaticPixQrCode && sentCreateStaticPixQrCode)\n      dispatch(findPixQrCode(createStaticPixQrCode));\n  }, [createStaticPixQrCode]);\n\n  React.useEffect(() => {\n    if (staticPixQrCode && sentCreateStaticPixQrCode) {\n      history.push(PixRoutes.receivePixTransferQrCodeCheck, {\n        principalValue: casting(valueInput),\n      });\n    }\n  }, [staticPixQrCode]);\n\n  //-------------------------------------------------------------------------------------\n\n  React.useEffect(() => {\n    setIsValidValue(!valueInput);\n  }, []);\n\n  const onCancelButtonClick = React.useCallback(() => {\n    history.replace(PixRoutes.pixArea);\n  }, []);\n\n  return (\n    <ReceivePixTransferQrCodeValueView\n      onValueChange={onValueChange}\n      onCancelButtonClick={onCancelButtonClick}\n      isValidValue={isValidValue}\n      valueInput={valueInput}\n      onSubmit={onSubmit}\n      onConfirmButtonClick={onConfirmButtonClick}\n      onDescriptionChange={onDescriptionChange}\n      description={description}\n      onIdentifierChange={onIdentifierChange}\n      onDoubtClick={onDoubtClick}\n      onHelpClick={onHelpClick}\n      onHelpPixQRCode={onHelpPixQRCode}\n      onHelpPixQRCodeClose={onHelpPixQRCodeClose}\n      loading={loading}\n      errorMessage={errorMessage}\n      onAlertClose={onAlertClose}\n      Identifier={Identifier}\n      optionalIdentifier={optionalIdentifier}\n      pixKey={pixKey!}\n    />\n  );\n};\n","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/pix/pages/PixTransfer/PixTransferProcess/PixTransferProcess.controller.tsx",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/pix/pages/PixTransfer/BankTransfer/BankPixTransferSelectBank/BankPixTransferSelectBank.view.tsx",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/pix/pages/PixTransfer/BankTransfer/BankPixTransferAccountType/BankPixTransferAccountType.view.tsx",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/pix/pages/PixTransfer/BankTransfer/BankPixTransferValue/BankPixTransferValue.view.tsx",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/pix/pages/PixTransfer/BankTransfer/BankPixTransferDescription/BankPixTransferDescription.view.tsx",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/pix/pages/PixTransfer/BankTransfer/BankPixTransferSummary/BankPixTransferSummary.view.tsx",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/pix/pages/PixTransfer/BankTransfer/BankDataPixTransferAccount/BankDataPixTransferAccount.view.tsx",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/pix/pages/PixTransfer/BankTransfer/BankDataPixTransferBranch/BankDataPixTransferBranch.view.tsx",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/pix/pages/ReceivePixTransfer/ReceivePixTransferQrCodeCheck/ReceivePixTransferQrCodeCheck.view.tsx",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/pix/pages/ReceivePixTransfer/ReceivePixTransferQrCode/ReceivePixTransferQrCode.view.tsx",["4756"],"import React from \"react\";\nimport { AppBar } from \"components/AppBar\";\nimport { ProcessDescriptionHeader } from \"components/ProcessDescriptionHeader\";\nimport { ProcessPageFooter } from \"components/ProcessPageFooter\";\nimport { AccountRoutes } from \"features/account/constants/routes\";\nimport { cancelLabel } from \"constants/buttons/labels\";\nimport { PageContainer } from \"components/PageContainer\";\nimport { ProcessPageLayout } from \"components/ProcessPageLayout\";\nimport { Button } from \"components/Button\";\nimport { Close } from \"@material-ui/icons\";\nimport { Box, Grid, Typography } from \"@material-ui/core\";\nimport { ButtonWithFloatingIcon, SelectionCard } from \"components\";\nimport { useStyles } from \"./ReceivePixTransferQrCode.style\";\n// import { PixKeySelection } from '../components/PixKeySelection'\n// import { SelectPixKey } from 'features/pix/redux/models/selectPixKey'\n// import { PixKey } from 'features/pix/redux/models/PixKey'\nimport { maskCnpj, maskCpf } from \"_utils/masks/taxPayer\";\nimport { maskPhone } from \"_utils/masks/phone\";\nimport { PixKeyType } from \"features/pix/redux/models/pixKeyType\";\n// import { ReactComponent as PixKey } from '_assets/icons/pix-key.svg'\n// import { EmptyListMessage } from '../../Keys/components/EmptyListMessage'\nimport { PixQrCode } from \"features/pix/redux/models/pixQrCode\";\nimport { PixKey } from \"features/pix/redux/models/pixKey\";\nimport { PixKeySelection } from \"./components/PixKeySelection\";\nimport { SharePixQrCode } from \"../ReceivePixTransferQrCode/components/SharePixQrCode\";\n// import { PixKeysDetails } from 'features/pix/redux/models/response/pixKeysDetailsResponse'\n\ninterface ReceivePixTransferQrCodeViewProps {\n  onBackButtonClick: VoidFunction;\n  onCancelButtonClick: VoidFunction;\n  staticPixQrCode?: PixQrCode;\n  onSetValue: VoidFunction;\n  onSharePixQrCodeClick: VoidFunction;\n  onSharePixQrCode: boolean;\n  onSharePixQrCodeClose: Function | ((onPixKeySelectionValid: boolean) => void);\n  onPixKeySelectionClick: VoidFunction;\n  onPixKeySelection: boolean;\n  onPixKeySelectionClose:\n    | Function\n    | ((onPixKeySelectionValid: boolean) => void);\n  // onKeyClick: (pix: SelectPixKey) => void\n  pixKeyList?: PixKey[];\n  pixKey?: PixKey;\n}\n\nexport const ReceivePixTransferQrCodeView: React.FC<\n  ReceivePixTransferQrCodeViewProps\n> = ({\n  onBackButtonClick,\n  onCancelButtonClick,\n  staticPixQrCode,\n  onSetValue,\n  onSharePixQrCodeClick,\n  onSharePixQrCode,\n  onSharePixQrCodeClose,\n  onPixKeySelectionClick,\n  onPixKeySelection,\n  onPixKeySelectionClose,\n  pixKeyList,\n  pixKey,\n}) => {\n  const styles = useStyles();\n\n  const applyMaskPixKey = (keyType: number, keyValue: string) =>\n    keyType === PixKeyType.CPF\n      ? maskCpf(keyValue)\n      : keyType === PixKeyType.CNPJ\n      ? maskCnpj(keyValue)\n      : maskPhone(keyValue);\n\n  const mapPixKeyTypeToIcon = (keyType: number) =>\n    PixKeyType.CPF === keyType || PixKeyType.CNPJ === keyType\n      ? \"pixTaxId\"\n      : PixKeyType.Email === keyType\n      ? \"pixMail\"\n      : PixKeyType.PhoneNumber === keyType\n      ? \"pixPhone\"\n      : \"pixKey\";\n\n  const isRegistered = (keyType?: number) => {\n    const verifyIfKeyExist = pixKeyList?.some((pixKey) => {\n      if (keyType === 0 && pixKey.pixKeyType === 1) return true;\n\n      return pixKey.pixKeyType === keyType;\n    });\n    return verifyIfKeyExist;\n  };\n\n  return (\n    <PageContainer>\n      <ProcessPageLayout\n        appBar={\n          <AppBar\n            homeRoute={AccountRoutes.home}\n            action={\n              <Button\n                palette=\"secondary\"\n                size=\"small\"\n                startIcon={<Close color=\"inherit\" />}\n                onClick={onCancelButtonClick}\n                data-test-id=\"cancel-button\"\n              >\n                {cancelLabel}\n              </Button>\n            }\n          />\n        }\n        header={\n          <React.Fragment>\n            <ProcessDescriptionHeader title=\"Receber pagamento via PIX\" />\n            <Grid\n              container\n              direction=\"column\"\n              spacing={1}\n              className={styles.subheader}\n            ></Grid>\n          </React.Fragment>\n        }\n        main={\n          <Grid container direction=\"column\">\n            <Grid className={styles.muiGrid_item} data-test-id=\"receive-QRcode\">\n              <Grid item className={styles.qrCodeWrapper}>\n                <img\n                  className={styles.qrCode}\n                  src={`data:image/png;base64,${staticPixQrCode?.qrCode}`}\n                  alt=\"qr code\"\n                />\n              </Grid>\n            </Grid>\n            <Grid item>\n              <Typography className={styles.subtitle} align=\"center\">\n                Mostre esse QR Code para o pagador <br></br> ou\n              </Typography>\n            </Grid>\n            <Box display=\"Flex\" justifyContent=\"center\">\n              <Button\n                onClick={onSharePixQrCodeClick}\n                data-test-id=\"share-button\"\n              >\n                Compartilhe\n              </Button>\n            </Box>\n            <Grid item>\n              <Typography className={styles.subtitle} align=\"center\">\n                Ao ler o QR Code o pagador verá os dados do pagamento\n              </Typography>\n            </Grid>\n            <Box display=\"Flex\" justifyContent=\"center\">\n              <ButtonWithFloatingIcon\n                className={styles.button}\n                onClick={onSetValue}\n              >\n                Definir valor\n              </ButtonWithFloatingIcon>\n            </Box>\n            <Typography className={styles.text} data-test-id=\"select-key\">\n              Selecione a chave\n            </Typography>\n            <Box\n              display=\"grid\"\n              gridRowGap={1}\n              margin=\"0 -16px\"\n              className={styles.keyTypesList}\n            >\n              {!pixKey ? (\n                pixKeyList?.slice(0, 1).map((pixKey, key) => {\n                  return (\n                    <SelectionCard\n                      title={PixKeyType[pixKey.pixKeyType!]}\n                      key={key}\n                      subtitle={\n                        pixKey.pixKeyType! === PixKeyType.CPF ||\n                        pixKey.pixKeyType! === PixKeyType.CNPJ ||\n                        pixKey.pixKeyType! === PixKeyType.PhoneNumber\n                          ? applyMaskPixKey(\n                              pixKey.pixKeyType!,\n                              pixKey.pixKeyValue!\n                            )\n                          : pixKey.pixKeyValue\n                      }\n                      startIcon={mapPixKeyTypeToIcon(pixKey.pixKeyType!)}\n                      onClick={onPixKeySelectionClick}\n                    />\n                  );\n                })\n              ) : (\n                <SelectionCard\n                  title={PixKeyType[pixKey?.pixKeyType!]}\n                  subtitle={\n                    pixKey?.pixKeyType! === PixKeyType.CPF ||\n                    pixKey?.pixKeyType! === PixKeyType.CNPJ ||\n                    pixKey?.pixKeyType! === PixKeyType.PhoneNumber\n                      ? applyMaskPixKey(\n                          pixKey?.pixKeyType!,\n                          pixKey?.pixKeyValue!\n                        )\n                      : pixKey?.pixKeyValue\n                  }\n                  startIcon={mapPixKeyTypeToIcon(pixKey?.pixKeyType!)}\n                  onClick={onPixKeySelectionClick}\n                />\n              )}\n            </Box>\n          </Grid>\n        }\n        footer={\n          <Grid className={styles.footer}>\n            <ProcessPageFooter onBackButtonClick={onBackButtonClick} />\n          </Grid>\n        }\n      />\n      <PixKeySelection\n        open={onPixKeySelection}\n        onClose={onPixKeySelectionClose}\n      />\n      <SharePixQrCode open={onSharePixQrCode} onClose={onSharePixQrCodeClose} />\n    </PageContainer>\n  );\n};\n","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/pix/pages/ReceivePixTransfer/ReceivePixTransferQrCodeValue/ReceivePixTransferQrCodeValue.view.tsx",["4757"],"import React from \"react\";\nimport { AppBar } from \"components/AppBar\";\nimport { ProcessDescriptionHeader } from \"components/ProcessDescriptionHeader\";\nimport { AccountRoutes } from \"features/account/constants/routes\";\nimport { cancelLabel } from \"constants/buttons/labels\";\nimport { PageContainer } from \"components/PageContainer\";\nimport { ProcessPageLayout } from \"components/ProcessPageLayout\";\nimport { Button } from \"components/Button\";\nimport { Close } from \"@material-ui/icons\";\nimport { Box, Grid, MenuItem } from \"@material-ui/core\";\nimport {\n  ProcessPageFooterButton,\n  TextField,\n  TransparentTextField,\n} from \"components\";\nimport { ErrorMessage } from \"components/ErrorMessage\";\nimport { ActionListItem } from \"components/ActionListItem\";\nimport { Loader } from \"components/Loader\";\nimport { Alert } from \"components/Alert\";\nimport { useStyles } from \"./ReceivePixTransferQrCodeValue.style\";\nimport { SelectionButton } from \"features/pix/components/SelectionButton\";\nimport { maskCnpj, maskCpf } from \"_utils/masks/taxPayer\";\nimport { PixKeyType } from \"features/pix/redux/models/pixKeyType\";\nimport { maskPhone } from \"_utils/masks/phone\";\nimport { Icon } from \"components/Icon\";\nimport { HelpPixQrCode } from \"./components/HelpPixQrCode\";\nimport { PixKey } from \"features/pix/redux/models/pixKey\";\n\ninterface ReceivePixTransferQrCodeValueViewProps {\n  onCancelButtonClick: VoidFunction;\n  isValidValue: boolean;\n  valueInput: string;\n  onSubmit: (e: React.FormEvent) => void;\n  onConfirmButtonClick: VoidFunction;\n  onValueChange: (event: React.ChangeEvent<HTMLInputElement>) => void;\n  onDescriptionChange: (event: React.ChangeEvent<HTMLInputElement>) => void;\n  description: string;\n  onIdentifierChange: (event: React.ChangeEvent<HTMLInputElement>) => void;\n  onDoubtClick: VoidFunction;\n  onHelpClick: VoidFunction;\n  onHelpPixQRCode: boolean;\n  onHelpPixQRCodeClose: Function | ((HelpPixQRCodeValid: boolean) => void);\n  loading: boolean;\n  errorMessage: string | undefined;\n  onAlertClose: VoidFunction;\n  Identifier: { id: string; value: string }[];\n  optionalIdentifier: string;\n  pixKeyType?: number;\n  payeeValue?: string;\n  pixKey: PixKey;\n}\n\nexport const ReceivePixTransferQrCodeValueView: React.FC<\n  ReceivePixTransferQrCodeValueViewProps\n> = ({\n  onCancelButtonClick,\n  isValidValue,\n  valueInput,\n  onSubmit,\n  onConfirmButtonClick,\n  onValueChange,\n  onDescriptionChange,\n  description,\n  onIdentifierChange,\n  onHelpClick,\n  onHelpPixQRCode,\n  onHelpPixQRCodeClose,\n  loading,\n  errorMessage,\n  onAlertClose,\n  Identifier,\n  optionalIdentifier,\n  pixKey,\n}) => {\n  const styles = useStyles();\n\n  const applyMaskPixKey = (keyType: number, keyValue: string) =>\n    keyType === PixKeyType.CPF\n      ? maskCpf(keyValue)\n      : keyType === PixKeyType.CNPJ\n      ? maskCnpj(keyValue)\n      : maskPhone(keyValue);\n\n  return (\n    <PageContainer>\n      <ProcessPageLayout\n        appBar={\n          <AppBar\n            homeRoute={AccountRoutes.home}\n            action={\n              <Button\n                palette=\"secondary\"\n                size=\"small\"\n                startIcon={<Close color=\"inherit\" />}\n                onClick={onCancelButtonClick}\n              >\n                {cancelLabel}\n              </Button>\n            }\n          />\n        }\n        header={\n          <React.Fragment>\n            <ProcessDescriptionHeader title=\"Receber pagamento via PIX\" />\n            <Grid\n              container\n              direction=\"column\"\n              spacing={1}\n              className={styles.subheader}\n            >\n              <TransparentTextField\n                label=\"Qual o valor do Pix?\"\n                value={valueInput}\n                onChange={onValueChange}\n              />\n            </Grid>\n          </React.Fragment>\n        }\n        main={\n          <Grid container direction=\"column\">\n            <Box className={styles.text}>\n              <TextField\n                label=\"Envie uma mensagem(opcional)\"\n                placeholder=\"Escreva sua mensagem\"\n                value={description}\n                onChange={onDescriptionChange}\n              />\n            </Box>\n\n            <Grid item className={styles.optionalIdentifier}>\n              <TextField\n                label=\"Identificador\"\n                value={optionalIdentifier}\n                onChange={onIdentifierChange}\n                select\n              >\n                {Identifier.map((option) => (\n                  <MenuItem key={option.id} value={option.id}>\n                    {option.value}\n                  </MenuItem>\n                ))}\n              </TextField>\n            </Grid>\n            <Box>\n              <ActionListItem onClick={onHelpClick}>Dúvida?</ActionListItem>\n            </Box>\n            <Box className={styles.receiverSection}>\n              <SelectionButton\n                id=\"receiver-info-card\"\n                title=\"Chave Selecionada\"\n                subtitle={\n                  pixKey.pixKeyType! === PixKeyType.CPF ||\n                  pixKey.pixKeyType! === PixKeyType.CNPJ ||\n                  pixKey.pixKeyType! === PixKeyType.PhoneNumber\n                    ? applyMaskPixKey(pixKey.pixKeyType!, pixKey.pixKeyValue!)\n                    : pixKey.pixKeyValue\n                }\n                startIcon={<Icon name=\"check\" />}\n              />\n            </Box>\n          </Grid>\n        }\n        footer={\n          <Box className={styles.footer}>\n            <ProcessPageFooterButton backButton />\n            <ProcessPageFooterButton\n              forwardButton\n              onClick={onConfirmButtonClick}\n            />\n          </Box>\n        }\n      />\n      <Loader open={loading} />\n      {errorMessage && (\n        <Alert\n          title=\"Erro\"\n          message={errorMessage}\n          severity={\"error\"}\n          onClose={onAlertClose}\n        />\n      )}\n      <HelpPixQrCode open={onHelpPixQRCode} onClose={onHelpPixQRCodeClose} />\n    </PageContainer>\n  );\n};\n","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/pix/pages/PixTransfer/PixTransferProcess/PixTransferProcess.view.tsx",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/pix/pages/PixTransfer/BankTransfer/BankPixTransferPayeeTaxId/BankPixTransferPayeeTaxId.view.tsx",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/authentication/pages/RecoverPassword/RecoverPassword.tsx",["4758","4759","4760","4761","4762","4763"],"import React from 'react'\nimport { Container, Grid } from '@material-ui/core'\nimport { AppBar } from 'components/AppBar'\nimport { Button } from 'components/Button'\nimport { StoreState } from 'redux/state'\nimport {\n  logout,\n  resetPassword,\n  updateAuthData,\n} from \"features/authentication/redux/actions\";\nimport {\n  ErrorAuthState,\n  SuccessResetPasswordState,\n} from 'features/authentication/redux/state'\nimport { ProcessDescriptionHeader } from 'components/ProcessDescriptionHeader'\nimport { ProcessPageLayout } from 'components/ProcessPageLayout'\nimport { PageContainer } from 'components/PageContainer'\nimport { AccountRoutes } from 'features/account/constants/routes'\nimport { AuthenticationRoutes } from 'features/authentication/constants/routes'\nimport { useHistory } from 'react-router-dom'\nimport { useMask } from 'hooks/useMask'\nimport { maskCpf } from '_utils/masks/taxPayer'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { KeyboardArrowRight } from '@material-ui/icons'\nimport { nextLabel } from 'constants/buttons/labels'\nimport { ProcessPageFooter } from 'components/ProcessPageFooter'\nimport { TextField } from 'components/TextField'\nimport { Loader } from 'components/Loader'\nimport { Alert } from 'components/Alert'\nimport { ConfirmTokenSheet } from 'components/ConfirmTokenSheet'\nimport { useStyles } from './RecoverPassword.style'\n\nexport const RecoverPassword: React.FC = () => {\n  const styles = useStyles()\n  const history = useHistory()\n  const dispatch = useDispatch()\n  const [taxIdInput, setCpfInput] = useMask(maskCpf)\n  const [openAuthorizationSheet, setOpenAuthorizationSheet] =\n    React.useState(false);\n\n  const authState = useSelector((state: StoreState) => state.auth);\n  const { resetPasswordForm, loading } = authState;\n\n  const isValid = taxIdInput.length === 14 || taxIdInput.length === 18;\n\n  React.useEffect(() => {\n    if (authState instanceof ErrorAuthState) dispatch(updateAuthData({}));\n  }, []);\n\n  React.useEffect(() => {\n    if (authState instanceof SuccessResetPasswordState)\n      history.push(AuthenticationRoutes.confirmRecoverPwd);\n  }, [authState]);\n\n  const _resetState = () => dispatch(logout());\n\n  const onCpfChange = (event: any) => {\n    setCpfInput(event.target.value);\n  };\n\n  const onSubmit = () => {\n    setOpenAuthorizationSheet(true);\n  };\n\n  const onAuthorizationClose = (tokenIsValid: boolean) => {\n    if (tokenIsValid) {\n      dispatch(\n        resetPassword({\n          ...resetPasswordForm,\n          taxId: taxIdInput,\n        })\n      );\n    }\n    setOpenAuthorizationSheet(false);\n  };\n\n  return (\n    <Container maxWidth=\"xs\" className={styles.container}>\n      {authState.errorMessage && (\n        <Alert\n          title=\"Erro\"\n          message={authState.errorMessage}\n          severity={\"error\"}\n        />\n      )}\n      \n    \n      <ProcessDescriptionHeader\n        title=\"Recuperar senha\"\n        description=\"Você receberá uma senha temporária para acessar o aplicativo, essa senha deve ser mudada após o primeiro acesso.\"\n      />\n    \n  \n      <Grid item component=\"form\" className={styles.input}>\n        <TextField\n          variant=\"outlined\"\n          value={taxIdInput}\n          inputMode=\"numeric\"\n          label=\"CPF\"\n          placeholder=\"Digite apenas números\"\n          onChange={onCpfChange}\n        />\n      </Grid>\n    \n    \n      <ProcessPageFooter\n        primaryButton={\n          <Button\n            endIcon={<KeyboardArrowRight color=\"secondary\" />}\n            onClick={onSubmit}\n            disabled={!isValid}\n            data-test-id=\"next-button\"\n          >\n            {nextLabel}\n          </Button>\n        }\n        onBackButtonClick={_resetState}\n      />\n        \n      <Loader open={loading} />\n      <ConfirmTokenSheet\n        open={openAuthorizationSheet}\n        onClose={onAuthorizationClose}\n        taxId={taxIdInput}\n      />\n    </Container>\n  )\n}\n","/home/danielvitor/Documentos/Develop/stonebank_front/src/_utils/masks/transferenceNumber.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/pix/pages/PixTransfer/BankTransfer/BankPixTransferAccountType/BankPixTransferAccountType.style.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/pix/pages/PixTransfer/BankTransfer/BankPixTransferValue/BankPixTransferValue.style.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/pix/pages/PixTransfer/BankTransfer/BankPixTransferDescription/BankPixTransferDescription.style.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/pix/pages/PixTransfer/BankTransfer/BankPixTransferSummary/BankPixTransferSummary.style.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/pix/pages/PixTransfer/BankTransfer/BankDataPixTransferAccount/BankDataPixTransferAccount.style.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/pix/pages/PixTransfer/BankTransfer/BankPixTransferSelectBank/BankPixTransferSelectBank.style.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/card/pages/AssociateNewCard/AssociateMaritalStatusCard/AssociateMaritalStatusCard.tsx",["4764"],"import React from \"react\";\nimport { AppBar } from \"components/AppBar\";\nimport { PageContainer } from \"components/PageContainer\";\nimport { AccountRoutes } from \"features/account/constants/routes\";\nimport { ProcessDescriptionHeader } from \"components/ProcessDescriptionHeader\";\nimport { ProcessPageLayout } from \"components/ProcessPageLayout\";\nimport { ProcessPageFooter } from \"components/ProcessPageFooter\";\nimport { Button } from \"components/Button\";\nimport { cancelLabel } from \"constants/buttons/labels\";\nimport { useHistory } from \"react-router-dom\";\nimport { Close, KeyboardArrowRight } from \"@material-ui/icons\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Box } from \"@material-ui/core\";\nimport { StoreState } from \"redux/state\";\nimport { useStyles } from \"./SearchFilter.style\";\nimport { CardRoutes } from \"features/card/constants/routes\";\nimport { Card } from \"features/card/redux/models/card\";\nimport { SearchFilter } from \"./SearchFilter\";\nimport { updateCard } from \"features/card/redux/actions\";\n\nexport const AssociateMaritalStatusCard: React.FC = () => {\n  const [] = useSelector<\n    StoreState,\n    [Card | undefined, Card[] | undefined, boolean, string | undefined]\n  >((state) => [\n    state.card.card,\n    state.card.cards,\n    state.card.loading,\n    state.card.errorMessage,\n  ]);\n  const [marital, setMarital] = React.useState<{\n    maritalStatus: string;\n    maritalStatuss: string;\n  }>({\n    maritalStatus: \"\",\n    maritalStatuss: \"\",\n  });\n  const history = useHistory();\n  const styles = useStyles();\n  const dispatch = useDispatch();\n\n  const onCancelButtonClick = () => {\n    history.replace(AccountRoutes.home);\n    dispatch(updateCard());\n  };\n  const onNextButtonClick = () => {\n    history.push(CardRoutes.associateNewCardCheck);\n  };\n\n  return (\n    <PageContainer>\n      <ProcessPageLayout\n        appBar={\n          <AppBar\n            homeRoute={AccountRoutes.home}\n            action={\n              <Button\n                palette=\"secondary\"\n                size=\"small\"\n                startIcon={<Close color=\"primary\" />}\n                onClick={onCancelButtonClick}\n              >\n                {cancelLabel}\n              </Button>\n            }\n          />\n        }\n        header={\n          <ProcessDescriptionHeader\n            title=\"Associar novo cartão\"\n            subtitle=\"Quase lá! Precisamos confirmar alguns dados pessoais\"\n            description=\"Qual seu estado civil?\"\n          />\n        }\n        main={\n          <Box component=\"form\">\n            <SearchFilter\n              marital={marital}\n              setMarital={setMarital}\n            ></SearchFilter>\n          </Box>\n        }\n        footer={\n          <ProcessPageFooter\n            primaryButton={\n              <Button\n                onClick={onNextButtonClick}\n                endIcon={<KeyboardArrowRight color=\"secondary\" />}\n                disabled={!marital.maritalStatus}\n              >\n                <span className={styles.nextButtonLabel}> Próximo </span>\n              </Button>\n            }\n          />\n        }\n      />\n    </PageContainer>\n  );\n};\n","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/card/pages/AssociateNewCard/AssociateGenderUserCard/AssociateGenderUserCard.tsx",["4765","4766"],"import React from \"react\";\nimport { AppBar } from \"components/AppBar\";\nimport { PageContainer } from \"components/PageContainer\";\nimport { AccountRoutes } from \"features/account/constants/routes\";\nimport { ProcessDescriptionHeader } from \"components/ProcessDescriptionHeader\";\nimport { ProcessPageLayout } from \"components/ProcessPageLayout\";\nimport { ProcessPageFooter } from \"components/ProcessPageFooter\";\nimport { Button } from \"components/Button\";\nimport { cancelLabel } from \"constants/buttons/labels\";\nimport { nextLabel } from \"constants/buttons/labels\";\nimport { useHistory } from \"react-router-dom\";\nimport { Close, KeyboardArrowRight } from \"@material-ui/icons\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Box } from \"@material-ui/core\";\nimport { StoreState } from \"redux/state\";\nimport { useStyles } from \"./SearchFilter.style\";\nimport { CardRoutes } from \"features/card/constants/routes\";\nimport { Card } from \"features/card/redux/models/card\";\nimport { SearchFilter } from \"./SearchFilter\";\nimport { updateCard } from \"features/card/redux/actions\";\n\nexport const AssociateGenderUserCard: React.FC = () => {\n  const [] = useSelector<\n    StoreState,\n    [Card | undefined, boolean, string | undefined]\n  >((state) => [state.card.card, state.card.loading, state.card.errorMessage]);\n  const [gender, setGender] = React.useState<{\n    genderdiversity: string;\n    genderdiversitys: string;\n  }>({\n    genderdiversity: \"\",\n    genderdiversitys: \"\",\n  });\n  const history = useHistory();\n  const styles = useStyles();\n  const dispatch = useDispatch();\n\n  const onCancelButtonClick = () => {\n    history.replace(AccountRoutes.home);\n    dispatch(updateCard());\n  };\n  const onNextButtonClick = () => {\n    history.push(CardRoutes.associateMaritalStatusCard);\n  };\n\n  return (\n    <PageContainer>\n      <ProcessPageLayout\n        appBar={\n          <AppBar\n            homeRoute={AccountRoutes.home}\n            action={\n              <Button\n                palette=\"secondary\"\n                size=\"small\"\n                startIcon={<Close color=\"primary\" />}\n                onClick={onCancelButtonClick}\n                data-test-id=\"cancel-button\"\n              >\n                {cancelLabel}\n              </Button>\n            }\n          />\n        }\n        header={\n          <ProcessDescriptionHeader\n            title=\"Associar novo cartão\"\n            subtitle=\"Quase lá! Precisamos confirmar alguns dados pessoais\"\n            description=\"Com qual gênero você se identifica?\"\n          />\n        }\n        main={\n          <Box component=\"form\">\n            <SearchFilter gender={gender} setGender={setGender}></SearchFilter>\n          </Box>\n        }\n        footer={\n          <ProcessPageFooter\n            primaryButton={\n              <Button\n                onClick={onNextButtonClick}\n                endIcon={<KeyboardArrowRight color=\"secondary\" />}\n                disabled={!gender.genderdiversity}\n                data-test-id=\"next-button\"\n              >\n                {nextLabel}\n              </Button>\n            }\n          />\n        }\n      />\n    </PageContainer>\n  );\n};\n","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/pix/pages/PixTransfer/BankTransfer/BankDataPixTransferBranch/BankDataPixTransferBranch.style.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/pix/pages/PixTransfer/PixTransferProcess/PixTransferProcess.style.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/pix/pages/PixTransfer/BankTransfer/BankPixTransferPayeeTaxId/BankPixTransferPayeeTaxId.style.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/pix/pages/ReceivePixTransfer/ReceivePixTransferQrCodeValue/ReceivePixTransferQrCodeValue.style.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/pix/pages/ReceivePixTransfer/ReceivePixTransferQrCode/ReceivePixTransferQrCode.style.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/pix/pages/ReceivePixTransfer/ReceivePixTransferQrCodeCheck/ReceivePixTransferQrCodeCheck.style.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/components/WithFirstAccessControl/index.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/digitalWithdrawal/index.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/payment/index.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/components/ConclusionFlow/index.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/authentication/pages/ConfirmRecoverPwd/index.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/authentication/pages/TemporaryPassword/index.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/topUp/pages/CancelPeriodicTopUp/index.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/authentication/pages/FirstAccess/ChangePasswordCompleted/index.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/card/pages/AssociateNewCard/InvalidDataForAssociateCard/index.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/card/pages/AssociateNewCard/AssociateBirthDateCard/index.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/card/pages/AssociateNewCard/ConcludeAssociateCard/index.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/card/pages/AssociateNewCard/AssociateMotherNameCard/index.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/card/pages/AssociateNewCard/AssociateNationalityCard/index.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/card/pages/AssociateNewCard/AssociateNameUserCard/index.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/authentication/pages/RecoverPassword/RecoverPassword.style.ts",["4767"],"import { makeStyles } from '@material-ui/core'\nimport { theme, colors } from '_config/theme'\n\nexport const useStyles = makeStyles({\n  \n  container: {\n    minHeight: '100vh',    \n    backgroundColor: colors.system.light.secondaryContainer,\n  },\n\n  input: {\n    marginTop: 60,\n    marginBottom: 80,\n  },\n  \n  description: {\n    color: colors.readOnly.light.blackLight,\n    paddingTop: 30,\n    fontWeight: 300,\n    fontSize: 12,\n    lineHeight: '15.6px',\n  },\n})\n","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/smsTransfer/pages/SmsTransferName/index.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/smsTransfer/pages/SmsAccountsExibition/index.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/onboarding/pages/ActivateBySMS/EnterMailForSms/index.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/schedulePayments/constants/routes.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/smsTransfer/constants/routes.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/topUp/constants/routes.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/card/pages/AssociateNewCard/AssociateGenderUserCard/SearchFilter.style.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/card/pages/AssociateNewCard/AssociateMaritalStatusCard/SearchFilter.style.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/card/pages/AssociateNewCard/AssociateGenderUserCard/SearchFilter.tsx",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/card/pages/AssociateNewCard/AssociateMaritalStatusCard/SearchFilter.tsx",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/pix/pages/ReceivePixTransfer/ReceivePixTransferQrCode/components/SharePixQrCode/index.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/pix/pages/ReceivePixTransfer/ReceivePixTransferQrCode/components/PixKeySelection/index.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/pix/pages/ReceivePixTransfer/ReceivePixTransferQrCodeValue/components/HelpPixQrCode/index.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/taxPayment/constants/routes.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/components/ConclusionFlow/ConclusionFlow.tsx",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/taxPayment/pages/Gare/PaymentGareValues/PaymentGareValues.tsx",["4768","4769","4770"],"import React, { useEffect, useState, FormEvent } from \"react\";\nimport { ProcessPageLayout } from \"components/ProcessPageLayout\";\nimport { AppBar } from \"components/AppBar\";\nimport { Button } from \"components/Button\";\nimport { Close, KeyboardArrowRight } from \"@material-ui/icons\";\nimport { cancelLabel, nextLabel } from \"constants/buttons/labels\";\nimport { AccountRoutes } from \"features/account/constants/routes\";\nimport { ProcessDescriptionHeader } from \"components/ProcessDescriptionHeader\";\nimport { PageContainer } from \"components/PageContainer\";\nimport { ProcessPageFooter } from \"components/ProcessPageFooter\";\nimport { Box, Grid } from \"@material-ui/core\";\nimport { TextField } from \"components/TextField\";\nimport { TaxPaymentRoutes } from \"features/taxPayment/constants/routes\";\nimport { maskMoney } from \"_utils/masks/money\";\nimport { StoreState } from \"redux/state\";\nimport { useHistory } from \"react-router-dom\";\nimport { useMask } from \"hooks/useMask\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { CurrencyFormatter, parseCurrency } from \"_translate\";\nimport { updateGarePaymentData } from \"features/taxPayment/redux/actions\";\nimport { ErrorMessage } from \"components/ErrorMessage\";\n\nexport const PaymentGareValues: React.FC = () => {\n  const [principalValue, setPrincipalValue] = useMask(maskMoney);\n  const [fineValue, setFineValue] = useMask(maskMoney);\n  const [interestValue, setInterestValue] = useMask(maskMoney);\n  const [isValidTotalValue, setIsValidTotalValue] = useState(true);\n\n  const history = useHistory();\n  const dispatch = useDispatch();\n  const [valueInput, setValueInput] = React.useState(Number);\n  const [balanceIsInvalid, setBalanceIsInvalid] = React.useState(false);\n  const { balance } = useSelector((store: StoreState) => ({\n    balance: store.account.dashboard!.balance,\n  }));\n\n  const onValueGare = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setPrincipalValue(event.target.value);\n  };\n  const onFineValueGare = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setFineValue(event.target.value);\n  };\n  const onInterestValueGare = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setInterestValue(event.target.value);\n  };\n\n  const onNextButtonClick = () => {\n    dispatch(\n      updateGarePaymentData({\n        principalValue: parseFloat(parseCurrency(principalValue).toFixed(2)),\n        fineValue: parseFloat(parseCurrency(fineValue).toFixed(2)),\n        interestValue: parseFloat(parseCurrency(interestValue).toFixed(2)),\n      })\n    );\n    history.push(TaxPaymentRoutes.paymentGareDueDate);\n  };\n  const onCancelButtonClick = () => {\n    dispatch(updateGarePaymentData());\n    history.replace(AccountRoutes.home);\n  };\n\n  React.useEffect(() => {\n    setValueInput(\n      Number(\n        (isNaN(parseCurrency(principalValue))\n          ? 0\n          : parseCurrency(principalValue)) +\n          (isNaN(parseCurrency(fineValue)) ? 0 : parseCurrency(fineValue)) +\n          (isNaN(parseCurrency(interestValue))\n            ? 0\n            : parseCurrency(interestValue))\n      )\n    );\n    setIsValidTotalValue(\n      Number(valueInput) > 0 && Number(valueInput) <= balance\n    );\n    setBalanceIsInvalid(Number(valueInput) > balance);\n  }, [principalValue, fineValue, interestValue, valueInput]);\n\n  return (\n    <PageContainer>\n      <ProcessPageLayout\n        appBar={\n          <AppBar\n            homeRoute={AccountRoutes.home}\n            action={\n              <Button\n                palette=\"secondary\"\n                size=\"small\"\n                startIcon={<Close color=\"primary\" />}\n                onClick={onCancelButtonClick}\n                data-test-id=\"cancel-button\"\n              >\n                {cancelLabel}\n              </Button>\n            }\n          />\n        }\n        header={<ProcessDescriptionHeader title=\"Impostos - Gare\" />}\n        main={\n          <Grid container direction=\"column\" spacing={2}>\n            <Grid item>\n              <TextField\n                label=\"Valor Principal\"\n                value={\n                  isNaN(parseCurrency(principalValue))\n                    ? CurrencyFormatter.format(0)\n                    : principalValue\n                }\n                placeholder=\"R$ 0,00\"\n                onChange={onValueGare}\n                data-test-id=\"gare-value\"\n              />\n            </Grid>\n\n            <Grid item>\n              <TextField\n                label=\"Multa\"\n                value={\n                  isNaN(parseCurrency(fineValue))\n                    ? CurrencyFormatter.format(0)\n                    : fineValue\n                }\n                onChange={onFineValueGare}\n                placeholder=\"R$ 0,00\"\n                data-test-id=\"fine-value-gare\"\n              />\n            </Grid>\n\n            <Grid item>\n              <TextField\n                label=\"Juros\"\n                value={\n                  isNaN(parseCurrency(interestValue))\n                    ? CurrencyFormatter.format(0)\n                    : interestValue\n                }\n                placeholder=\"R$ 0,00\"\n                onChange={onInterestValueGare}\n                data-test-id=\"interest-value-gare\"\n              />\n            </Grid>\n            <Box>\n              {balanceIsInvalid && (\n                <ErrorMessage message={\"Saldo insuficiente\"} />\n              )}\n            </Box>\n          </Grid>\n        }\n        footer={\n          <ProcessPageFooter\n            primaryButton={\n              <Button\n                endIcon={<KeyboardArrowRight color=\"secondary\" />}\n                onClick={onNextButtonClick}\n                disabled={!isValidTotalValue}\n                data-test-id=\"next-button\"\n              >\n                {nextLabel}\n              </Button>\n            }\n          />\n        }\n      />\n    </PageContainer>\n  );\n};\n","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/authentication/pages/TemporaryPassword/TemporaryPassword.tsx",["4771","4772"],"import React from 'react'\nimport { useHistory } from 'react-router'\nimport { Grid, Typography } from '@material-ui/core'\nimport { PageContainer } from 'components/PageContainer'\nimport { AuthenticationRoutes } from 'features/authentication/constants/routes'\nimport { useOnboardingStyles } from './TemporaryPassword.style'\nimport { Button } from 'components/Button'\nimport { Icon } from 'components/Icon'\nimport { GreatButton } from 'components/GreatButton'\n\nexport const TemporaryPassword: React.FC = () => {\n  const styles = useOnboardingStyles();\n  const history = useHistory();\n\n  const createPass = () => {\n    history.push(AuthenticationRoutes.changePasswordFirstAccess)\n  }\n\n  return (\n    <PageContainer className={styles.container}>\n      <Grid\n        container\n        direction=\"column\"\n        alignItems=\"center\"\n        className={styles.content}\n      >\n        <Grid>\n          <Icon name=\"forgotPassword\" className={styles.logo} />\n        </Grid>\n\n        <Grid\n          item\n          className={styles.gridTitle}\n          data-test-id=\"description-title\"\n        >\n          <Typography variant=\"h5\" className={styles.title}>\n            Você entrou com uma <br />\n            senha temporária\n          </Typography>\n          <Typography variant=\"h5\" className={styles.subtitle} data-test-id=\"description-subtitle\" >\n            Agora você precisa criar uma nova<br />\n            senha\n          </Typography>\n        </Grid>\n\n        <Grid item className={styles.buttonWrapper}>\n          <GreatButton\n            size=\"large\"\n            palette=\"secondary\"\n            route={AuthenticationRoutes.changePasswordFirstAccess}\n            id=\"create-password\"\n          >\n            Nova senha\n          </GreatButton>\n        </Grid>\n      </Grid>\n    </PageContainer>\n  );\n};\n","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/authentication/pages/ConfirmRecoverPwd/ConfirmRecoverPwd.tsx",["4773","4774"],"import React from \"react\";\nimport { Box, Grid, Typography } from \"@material-ui/core\";\nimport { PageContainer } from \"components/PageContainer\";\nimport { useHistory } from \"react-router-dom\";\nimport { Button } from \"components/Button\";\nimport { StoreState } from \"redux/state\";\nimport { useStyles } from \"./ConfirmRecoverPwd.style\";\nimport { ProcessPageLayout } from \"components/ProcessPageLayout\";\nimport { AccountRoutes } from \"features/account/constants/routes\";\nimport { useSelector } from \"react-redux\";\nimport { RecoverType } from \"features/authentication/redux/models/recoverType\";\nimport { Icon } from \"components/Icon\";\n\nexport const ConfirmRecoverPwd: React.FC = () => {\n  const history = useHistory();\n  const styles = useStyles();\n\n  const onHomeButtonClick = () => {\n    history.replace(AccountRoutes.home);\n  };\n\n  const resetPasswordForm = useSelector(\n    (store: StoreState) => store.auth.resetPasswordForm\n  );\n\n  return (\n    <PageContainer>\n      <ProcessPageLayout\n        main={\n          <React.Fragment>\n\n            <Box\n              display=\"flex\"\n              justifyContent=\"center\"\n              data-test-id=\"completed-recover-password\"\n            >\n              <Icon className={styles.img} name=\"conclude\" />\n            </Box>\n\n            <Typography\n              variant=\"h3\"\n              className={styles.title}\n              data-test-id=\"temp-password\"\n            >\n              Senha temporária enviada\n            </Typography>\n            \n          </React.Fragment>\n        }\n        footer={\n          <Grid\n            container\n            spacing={4}\n            className={styles.buttonAccess}\n            data-test-id=\"access-button\"\n          >\n            <Grid item>\n              <Button size=\"large\" onClick={onHomeButtonClick}>\n                Acessar sua conta\n              </Button>\n            </Grid>\n          </Grid>\n        }\n      />\n    </PageContainer>\n  );\n};\n","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/authentication/pages/FirstAccess/ConfirmPasswordFirstAccess/index.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/authentication/pages/FirstAccess/ChangePasswordFirstAccess/index.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/authentication/pages/FirstAccess/ChangePasswordCompleted/ChangePasswordCompleted.tsx",["4775","4776","4777","4778","4779"],"import React from 'react'\nimport { Container, Typography, Box, Grid } from '@material-ui/core'\nimport { PageTitle } from 'components/PageTitle'\nimport { AccessAccountButton } from 'features/authentication/components/AccessAccountButton'\nimport { useStyles } from './ChangePasswordCompleted.style'\nimport { StoreState } from 'redux/state'\nimport { useSelector } from 'react-redux'\nimport '_assets/css/onboarding/finish-activation.scss'\nimport { Icon } from 'components/Icon'\nimport { PageContainer } from 'components'\nimport { GreatButton } from 'components/GreatButton'\n\nexport const ChangePasswordCompleted: React.FC = () => {\n  const style = useStyles();\n  const userName = useSelector((store: StoreState) => store.auth.user?.name);\n\n  return (\n    <PageContainer className={style.container}>\n      <Grid\n        container\n        direction=\"column\"\n        alignItems=\"center\"\n        className={style.content}\n      >\n        <Grid>\n          <Icon name=\"accountActivationCompleted\"/>\n        </Grid>\n\n        <Grid item className={style.gridTitle} data-test-id=\"description-title\" >\n          <Typography variant=\"h5\" className={style.title}>\n            Muito Bem!\n          </Typography>\n\n          <Typography variant=\"h5\" className={style.subtitle} data-test-id=\"description-subtitle\" >\n            Nova senha definida com sucesso\n          </Typography>\n        </Grid>\n\n        <Grid item className={style.buttonWrapper}>\n          <AccessAccountButton \n            palette='secondary'\n            size=\"large\"\n          />\n        </Grid>\n      </Grid>\n    </PageContainer>\n  )\n}\n","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/smsTransfer/pages/SmsTransferSummary/index.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/topUp/pages/CancelPeriodicTopUp/CancelPeriodicTopUp.tsx",["4780","4781","4782","4783","4784","4785","4786"],"import React from \"react\";\nimport { Close, KeyboardArrowRight } from \"@material-ui/icons\";\nimport { PageContainer } from \"components/PageContainer\";\nimport { ProcessPageLayout } from \"components/ProcessPageLayout\";\nimport { AppBar } from \"components/AppBar\";\nimport { Button } from \"components/Button\";\nimport { cancelLabel } from \"constants/buttons/labels\";\nimport { ProcessDescriptionHeader } from \"components/ProcessDescriptionHeader\";\nimport { ProcessPageFooter } from \"components/ProcessPageFooter\";\n// import TimIcon from \"_assets/icons/TimIcon.svg\";\nimport { AccountRoutes } from \"features/account/constants/routes\";\nimport { useHistory } from \"react-router-dom\";\nimport { Box, Typography } from \"@material-ui/core\";\nimport { useStyles } from \"./CancelPeriodicTopUp.style\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { StoreState } from \"redux/state\";\nimport { CurrencyFormatter, DateFormatter } from \"_translate\";\nimport { AuthorizationSheet } from \"components/AuthorizationSheet\";\nimport {\n  generateTopUp,\n  getTopUpPeriodic,\n  updateTopUpData,\n} from \"features/topUp/redux/actions\";\nimport { TopUpRoutes } from \"features/topUp/constants/routes\";\nimport { Loader } from \"components/Loader\";\nimport { Alert } from \"components/Alert\";\nimport { SuccessTopUpState } from \"features/topUp/redux/state\";\nimport { OperationType } from \"features/account/redux/models/operationType\";\n\nexport const CancelPeriodicRepetition: React.FC = () => {\n  const topUp = useSelector((state: StoreState) => state.topUp.topUp);\n  const topUpState = useSelector((state: StoreState) => state.topUp);\n  const topUpPeriodicList = useSelector(\n    (state: StoreState) => state.topUp.topUpPeriodicList.topUpPeriodicList!\n  );\n\n  const [openAuthorizationSheet, setOpenAuthorizationSheet] =\n    React.useState(false);\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const styles = useStyles();\n\n  const { errorMessage, loading } = topUpState;\n\n  const onCancelButtonClick = () => {\n    history.replace(AccountRoutes.home);\n  };\n\n  const onConcludeButtonClick = () => {\n    setOpenAuthorizationSheet(true);\n  };\n\n  const onAuthorizationClose = (tokenIsValid: boolean) => {\n    if (tokenIsValid) dispatch(generateTopUp());\n    setOpenAuthorizationSheet(false);\n  };\n\n  return (\n    <PageContainer>\n      <ProcessPageLayout\n        appBar={\n          <AppBar\n            homeRoute={AccountRoutes.home}\n            action={\n              <Button\n                palette=\"secondary\"\n                size=\"small\"\n                startIcon={<Close color=\"primary\" />}\n                onClick={onCancelButtonClick}\n                data-test-id=\"cancel-button\"\n              >\n                {cancelLabel}\n              </Button>\n            }\n          />\n        }\n        header={\n          <Box className={styles.headerContent}>\n            <ProcessDescriptionHeader\n              title=\"Recargas\"\n              subtitle=\"Celular pré-pago\"\n              description={\"Cancelar recarga\" + topUp?.phoneNumber}\n            />\n          </Box>\n        }\n        main={\n          <React.Fragment>\n            {topUpState instanceof SuccessTopUpState\n              ? topUpPeriodicList.map((item: any) => {\n                  return (\n                    <>\n                      <Box>Numero: {item.contractIdentifier}</Box>\n                      <Box>a cada: {item.periodic} dias</Box>\n                    </>\n                  );\n                })\n              : \"Não há recargas agendadas.\"}\n          </React.Fragment>\n        }\n        footer={\n          <ProcessPageFooter\n            primaryButton={\n              <Button\n                onClick={onConcludeButtonClick}\n                size=\"medium\"\n                endIcon={<KeyboardArrowRight color=\"secondary\" />}\n                data-test-id=\"conclude-button\"\n              >\n                Concluir\n              </Button>\n            }\n          />\n        }\n      />\n      <AuthorizationSheet\n        description=\"Está tudo certo? Agora é só inserir seu token para confirmar a recarga\"\n        open={openAuthorizationSheet}\n        onClose={onAuthorizationClose}\n      />\n      <Loader open={loading} />\n      {errorMessage && (\n        <Alert title=\"Error\" message={errorMessage} severity=\"error\" />\n      )}\n    </PageContainer>\n  );\n};\n","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/smsTransfer/pages/SmsTransferValue/index.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/smsTransfer/pages/SmsTransferNumber/index.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/card/pages/AssociateNewCard/AssociateNameUserCard/AssociateNameUserCard.tsx",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/card/pages/AssociateNewCard/AssociateNationalityCard/AssociateNationalityCard.tsx",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/card/pages/AssociateNewCard/AssociateMotherNameCard/AssociateMotherNameCard.tsx",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/card/pages/AssociateNewCard/ConcludeAssociateCard/ConcludeAssociateCard.tsx",["4787","4788"],"import React from \"react\";\nimport { useStyles } from \"./ConcludeAssociateCard.style\";\nimport { PageContainer } from \"components/PageContainer\";\nimport { useHistory } from \"react-router-dom\";\nimport { AddBoxOutlined, KeyboardArrowRight } from \"@material-ui/icons\";\nimport { Button } from \"components/Button\";\nimport { ProcessPageLayout } from \"components/ProcessPageLayout\";\nimport { CardRoutes } from \"features/card/constants/routes\";\nimport { Typography, Box, Grid } from \"@material-ui/core\";\nimport { Icon } from \"components/Icon\";\n\nexport const ConcludeAssociateCard: React.FC = () => {\n  const styles = useStyles();\n  const history = useHistory();\n\n  const onNextButtonClick = () => {\n    history.push(CardRoutes.activateCard);\n  };\n\n  return (\n    <PageContainer>\n      <ProcessPageLayout\n        main={\n          <Box>\n            <Box className={styles.cardImg}>\n              <Icon name=\"activateCard\" />\n            </Box>\n            <Box>\n              <Typography className={styles.title}>Cartão Associado</Typography>\n            </Box>\n            <Box className={styles.boxDescription}>\n              <Box className={styles.description}>\n                Agora precisamos <strong> ativar </strong> o seu cartão\n              </Box>\n            </Box>\n          </Box>\n        }\n        footer={\n          <Box className={styles.buttonsWrapper}>\n            <Box className={styles.footer}>\n              <Button\n                onClick={onNextButtonClick}\n                endIcon={<KeyboardArrowRight color=\"secondary\" />}\n              >\n                Próximo\n              </Button>\n            </Box>\n          </Box>\n        }\n      />\n    </PageContainer>\n  );\n};\n","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/card/pages/AssociateNewCard/AssociateBirthDateCard/AssociateBirthDateCard.tsx",["4789"],"import React from \"react\";\nimport { Grid } from \"@material-ui/core\";\nimport { AppBar } from \"components/AppBar\";\nimport { AccountRoutes } from \"features/account/constants/routes\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { cancelLabel, nextLabel } from \"constants/buttons/labels\";\nimport { Button } from \"components/Button\";\nimport { Close, KeyboardArrowRight } from \"@material-ui/icons\";\nimport { ProcessPageFooter } from \"components/ProcessPageFooter\";\nimport { PageContainer } from \"components/PageContainer\";\nimport { LEGAL_AGE, ShortDateFormatter } from \"_translate\";\nimport { useHistory } from \"react-router-dom\";\nimport { TextField } from \"components/TextField\";\nimport { ProcessPageLayout } from \"components/ProcessPageLayout\";\nimport { ProcessDescriptionHeader } from \"components/ProcessDescriptionHeader\";\nimport { DateButton } from \"components/DateButton/DateButton\";\nimport { StoreState } from \"redux/state\";\nimport { useStyles } from \"./AssociateBirthDateCard.style\";\nimport { CardRoutes } from \"features/card/constants/routes\";\nimport { updateCard } from \"features/card/redux/actions\";\nimport { Validator } from \"components/Validator/Validator\";\n\nexport const AssociateBirthDateCard: React.FC = () => {\n  const [birthDate, setBirthDate] = React.useState<Date | null>(null);\n  const [displayDate, setDisplayDate] = React.useState(\"\");\n  const [maxDate, setMaxDate] = React.useState<Date>(new Date());\n  const [openDatePicker, setOpenDatePicker] = React.useState(false);\n  const [disableNextButton, setDisableNextButton] = React.useState(false);\n  const history = useHistory();\n  const cardState = useSelector((s: StoreState) => s.card);\n  const { card } = cardState;\n\n  const dispatch = useDispatch();\n  const styles = useStyles();\n\n  const isLegalAge = React.useMemo(() => {\n    const today = new Date();\n\n    const age = today.getFullYear() - (birthDate?.getFullYear() ?? 0);\n\n    if (\n      (birthDate?.getMonth() ?? 0) >= today.getMonth() &&\n      (birthDate?.getDate() ?? 0) > today.getDate()\n    )\n      return age - 1 >= LEGAL_AGE;\n\n    return age >= LEGAL_AGE;\n  }, [birthDate]);\n\n  React.useEffect(() => {\n    setDisplayDate(_getDisplayDate());\n    const today = new Date();\n    setMaxDate(today);\n  }, [birthDate]);\n\n  React.useEffect(() => {\n    if (displayDate.length === 0) setDisableNextButton(true);\n    else setDisableNextButton(false);\n  }, [displayDate.length]);\n\n  const _getDisplayDate = () => {\n    if (!birthDate) return displayDate;\n    else return ShortDateFormatter.format(birthDate);\n  };\n\n  const onSchedulingButtonClick = () => {\n    setOpenDatePicker(true);\n  };\n\n  const onDatePickerClose = () => {\n    setOpenDatePicker(false);\n  };\n\n  const onDateChange = (date: Date | null) => {\n    setBirthDate(date);\n  };\n\n  const onCancelButtonClick = () => {\n    history.replace(AccountRoutes.home);\n    dispatch(updateCard());\n  };\n  const onNextButtonClick = () => {\n    dispatch(\n      updateCard({\n        ...card!,\n        birthDate: birthDate?.toLocaleDateString(\"en-US\"),\n      })\n    );\n    history.push(CardRoutes.associateGenderUserCard);\n  };\n\n  return (\n    <PageContainer>\n      <ProcessPageLayout\n        appBar={\n          <AppBar\n            homeRoute={AccountRoutes.home}\n            action={\n              <Button\n                palette=\"secondary\"\n                size=\"small\"\n                startIcon={<Close color=\"primary\" />}\n                onClick={onCancelButtonClick}\n              >\n                {cancelLabel}\n              </Button>\n            }\n          />\n        }\n        header={\n          <ProcessDescriptionHeader\n            title=\"Associar novo cartão\"\n            subtitle=\"Quase lá! Precisamos confirmar alguns dados pessoais\"\n            description=\"Qual a sua data de nascimento?\"\n          />\n        }\n        main={\n          <Grid container direction=\"column\">\n            <Grid item>\n              <TextField\n                label=\"Data de Nascimento\"\n                placeholder={\"Ex: 10/05/1972\"}\n                value={displayDate}\n              />\n            </Grid>\n            <Validator\n              value={birthDate?.toLocaleDateString(\"en-US\")}\n              description={\n                !(disableNextButton || !isLegalAge)\n                  ? \"\"\n                  : \"É necessário ter ao menos 18 anos\"\n              }\n              validation={() => {}}\n              onValidate={() => {}}\n              strictValidation={true}\n            />\n            <Grid item>\n              <Grid\n                container\n                justify=\"center\"\n                className={styles.scheduleButton}\n              >\n                <Grid item>\n                  <DateButton\n                    open={openDatePicker}\n                    value={birthDate}\n                    maxDate={maxDate}\n                    onClick={onSchedulingButtonClick}\n                    onDateSelection={onDateChange}\n                    onClose={onDatePickerClose}\n                  />\n                </Grid>\n              </Grid>\n            </Grid>\n          </Grid>\n        }\n        footer={\n          <ProcessPageFooter\n            primaryButton={\n              <Button\n                endIcon={<KeyboardArrowRight color=\"secondary\" />}\n                onClick={onNextButtonClick}\n                disabled={disableNextButton || !isLegalAge}\n              >\n                {nextLabel}\n              </Button>\n            }\n          />\n        }\n      />\n    </PageContainer>\n  );\n};\n","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/card/pages/AssociateNewCard/InvalidDataForAssociateCard/InvalidDataForAssociateCard.tsx",["4790"],"import React from \"react\";\nimport { useStyles } from \"./InvalidDataForAssociateCard.style\";\nimport { Typography, Box, Grid } from \"@material-ui/core\";\nimport { useHistory } from \"react-router-dom\";\nimport { ProcessDescriptionHeader } from \"components/ProcessDescriptionHeader\";\nimport { ProcessPageLayout } from \"components/ProcessPageLayout\";\nimport { PageContainer } from \"components/PageContainer\";\nimport { useDispatch } from \"react-redux\";\nimport { CardRoutes } from \"features/card/constants/routes\";\nimport { Icon } from \"components/Icon\";\nimport { Button } from \"components/Button\";\n\nexport const InvalidDataForAssociateCard: React.FC = () => {\n  const styles = useStyles();\n  const history = useHistory();\n  const dispatch = useDispatch();\n\n  const onButtonClick = () => {\n    history.replace(CardRoutes.cardManagement);\n  };\n\n  return (\n    <PageContainer>\n      <ProcessPageLayout\n        main={\n          <React.Fragment>\n            <Box>\n              <ProcessDescriptionHeader title=\"Ops...\" />\n            </Box>\n            <Box className={styles.container}>\n              <Box className={styles.alert}>\n                <Icon name=\"alertWarningImg\" />\n              </Box>\n              <Box className={styles.errorMensage}>\n                <Typography>\n                  <strong> Algo não está certo.</strong>\n                </Typography>\n              </Box>\n              <Box className={styles.inconsistent}>\n                <Typography>\n                  <strong> Os dados estão inconsistentes.</strong>\n                </Typography>\n                <Box className={styles.textDescription}>\n                  <Typography className={styles.description}>\n                    Revise os dados e tente novamente.\n                  </Typography>\n                </Box>\n              </Box>\n            </Box>\n          </React.Fragment>\n        }\n        footer={\n          <Grid container direction=\"column\" alignItems=\"center\">\n            <Button onClick={onButtonClick} palette=\"primary\">\n              Voltar para o início\n            </Button>\n          </Grid>\n        }\n      />\n    </PageContainer>\n  );\n};\n","/home/danielvitor/Documentos/Develop/stonebank_front/src/components/WithFirstAccessControl/WithFirstAccessControl.tsx",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/topUp/pages/CheckDataTopUp/index.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/topUp/pages/CompleteTopUp/index.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/topUp/pages/TopUpValue/index.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/topUp/pages/PeriodicRepetition/index.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/topUp/pages/TopUp/index.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/topUp/pages/TopUpNumber/index.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/topUp/pages/TopUpSchedule/index.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/smsTransfer/pages/SmsAccountsExibition/SmsAccountsExibition.tsx",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/smsTransfer/pages/SmsTransferName/SmsTransferName.tsx",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/schedulePayments/pages/SheduleTransactionsFilter/index.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/schedulePayments/pages/ScheduleTransactionsList/index.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/schedulePayments/pages/FutureTransactions/index.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/schedulePayments/pages/ScheduleTransactions/index.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/transference/pages/TransferProcess/index.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/authentication/constants/routes.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/onboarding/pages/ActivateBySMS/EnterMailForSms/EnterMailForSms.tsx",["4791","4792"],"import React from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { Close, KeyboardArrowRight } from \"@material-ui/icons\";\nimport { ProcessDescriptionHeader } from \"components/ProcessDescriptionHeader\";\nimport { AppBar } from \"components/AppBar\";\nimport { Button } from \"components/Button\";\nimport { ProcessPageFooter } from \"components/ProcessPageFooter\";\nimport { TextField } from \"components/TextField\";\nimport { cancelLabel, nextLabel } from \"constants/buttons/labels\";\nimport { OnboardingRoutes } from \"features/onboarding/constants/routes\";\nimport { ProcessPageLayout } from \"components/ProcessPageLayout\";\nimport { PageContainer } from \"components/PageContainer\";\nimport { Box, Grid } from \"@material-ui/core\";\nimport { updateOnboardingForm } from \"features/onboarding/redux/actions\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useStyles } from \"./EnterMailForSms.style\";\nimport { validateEmail } from \"_utils/validate\";\nimport { StoreState } from \"redux/state\";\n\nexport const EnterMailForSms: React.FC = () => {\n  const style = useStyles();\n  const history = useHistory();\n  const dispatch = useDispatch();\n\n  const [mail, setMail] = React.useState(\"\");\n  const [invalidMail, setInvalidMail] = React.useState(false);\n\n  const onboardingSms = useSelector(\n    (state: StoreState) => state.onboarding.onboardingForm\n  );\n\n  React.useEffect(() => {\n    validateError();\n  }, [mail]);\n\n  const onTaxIdChange = (event: React.ChangeEvent<HTMLInputElement>) =>\n    setMail(event.target.value);\n\n  const onCancelButtonClick = () => {\n    history.replace(OnboardingRoutes.activateAccount);\n  };\n\n  const onSubmit = (e: React.FormEvent) => {\n    e.preventDefault();\n\n    dispatch(updateOnboardingForm({ mail }));\n\n    history.push(OnboardingRoutes.birthDateForSMS);\n  };\n\n  const validateError = () => {\n    validateEmail(mail) ? setInvalidMail(false) : setInvalidMail(true);\n  };\n\n  return (\n    <PageContainer>\n      <ProcessPageLayout\n        appBar={\n          <AppBar\n            homeRoute={OnboardingRoutes.welcome}\n            action={\n              <Button\n                palette=\"secondary\"\n                size=\"small\"\n                startIcon={<Close color=\"primary\" />}\n                onClick={onCancelButtonClick}\n              >\n                {cancelLabel}\n              </Button>\n            }\n          />\n        }\n        header={\n          <ProcessDescriptionHeader\n            title=\"Ative sua Conta\"\n            subtitle=\"Email\"\n            description=\"Digite seu Email.\"\n          />\n        }\n        main={\n          <React.Fragment>\n            <Grid container direction=\"column\">\n              <Grid item component=\"form\" className={style.mailInput}>\n                <TextField\n                  label=\"Email\"\n                  error={mail ? invalidMail : false}\n                  value={mail}\n                  type=\"email\"\n                  placeholder=\"Digite seu Email\"\n                  onChange={onTaxIdChange}\n                  variant=\"outlined\"\n                />\n                {mail.length > 0 && invalidMail && (\n                  <Box className={style.inputError}>E-mail inválido</Box>\n                )}\n              </Grid>\n            </Grid>\n          </React.Fragment>\n        }\n        footer={\n          <ProcessPageFooter\n            primaryButton={\n              <Button\n                disabled={invalidMail}\n                endIcon={<KeyboardArrowRight color=\"secondary\" />}\n                onClick={onSubmit}\n              >\n                {nextLabel}\n              </Button>\n            }\n          />\n        }\n      />\n    </PageContainer>\n  );\n};\n","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/card/pages/ActivateCard/ConfirmPasswordCard/index.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/card/pages/ActivateCard/ConfirmationActivate/index.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/card/pages/ActivateCard/ActivateCardConclude/index.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/card/pages/ActivateCard/PasswordCard/index.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/authentication/redux/state.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/card/pages/ActivateCard/ActivateCard/index.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/authentication/redux/actions.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/account/pages/Help/index.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/taxPayment/pages/taxPaymentHome/index.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/components/SearchField/index.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/taxPayment/pages/Fgts/PaymentFgtsCodeRevenue/index.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/taxPayment/pages/Fgts/PaymentFgtsDescription/index.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/taxPayment/pages/Fgts/PaymentFgtsDate/index.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/taxPayment/pages/Fgts/PaymentFgtsIdentifier/index.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/taxPayment/pages/Fgts/PaymentFgtsBarCode/index.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/taxPayment/pages/Fgts/PaymentFgtsSummary/index.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/pix/components/SelectionButton/index.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/card/redux/actions.ts",["4793","4794"],"import { CancelCardRequest } from \"./models/request/cancelCardRequest\";\nimport { Dispatch } from \"redux\";\nimport { ApiResponse } from \"_config/api\";\nimport { HttpClient } from \"_config/http\";\nimport {\n  CardsActions,\n  FindAllCardsListFailAction,\n  FindAllCardsListStartAction,\n  FindAllCardsListSuccessAction,\n  ChangePinCardStartAction,\n  ChangePinCardSuccessAction,\n  ChangePinCardFailAction,\n  SelectCardAction,\n  UpdateCardAction,\n  SelectedReasonAction,\n  InactivateAndReissueCardStartAction,\n  InactivateAndReissueCardSuccessAction,\n  InactivateAndReissueCardFailAction,\n  FindCardSuccessAction,\n  FindCardFailAction,\n  FindCardStartAction,\n  ActivateCardStartAction,\n  ActivateCardSuccessAction,\n  ActivateCardFailAction,\n  BlockStartAction,\n  BlockSuccessAction,\n  BlockFailAction,\n  UnblockStartAction,\n  UnblockFailAction,\n  UnblockSuccessAction,\n  CloseAlertAction,\n  CancelCardStartAction,\n  CancelCardFailAction,\n  CancelCardSuccessAction,\n  BindUnnamedCardStartAction,\n  BindUnnamedCardSuccessAction,\n  BindUnnamedCardFailAction,\n  ValidateCardStartAction,\n  ValidateCardSuccessAction,\n  ValidateCardFailAction,\n} from \"./actionTypes\";\nimport { GetState } from \"redux/state\";\nimport { getBaseRequestData } from \"_utils/http\";\nimport { FindCardListResponse } from \"./models/response/findCardListResponse\";\nimport { InactivateAndReissueCardRequest } from \"./models/request/InactivateAndReissueCardRequest\";\nimport { Card } from \"./models/card\";\nimport { InactivateAndReissueCardResponse } from \"./models/response/inactivateAndReissueCardResponse\";\nimport { ReasonCode } from \"./models/reasonCodeEnum\";\nimport { FindCardListRequest } from \"./models/request/getCardList\";\nimport { BlockCardRequest } from \"./models/request/blockCard\";\nimport { unBlockCardRequest } from \"./models/request/unblockCard\";\nimport { ChangePinCardRequest } from \"./models/request/changePin\";\nimport { FindCardRequest } from \"./models/request/findCard\";\nimport { FindCardCardResponse } from \"./models/response/findCard\";\nimport { ActivateCardRequest } from \"./models/request/activateCard\";\nimport { ActivateCardResponse } from \"./models/response/activateCard\";\nimport { BindUnnamedCardRequest } from \"./models/request/BindUnnamedCardRequest\";\nimport { Gender, MaritalStatus, UsageType } from \"./models/Enum\";\nimport { BindUnnamedCardResponse } from \"./models/response/BindUnnamedCard\";\nimport { ConfigProvider } from \"_config\";\nimport { ValidateCardRequest } from \"./models/request/validateCardRequest\";\nimport { decryptPassword, decryptNewPassword } from \"_utils/cryptography\";\n\nexport const findCardList =\n  () => async (dispatch: Dispatch, getState: GetState) => {\n    dispatch<FindAllCardsListStartAction>({\n      type: CardsActions.FIND_CARD_LIST_START,\n    });\n\n    try {\n      const state = getState();\n      const { url, defaultHeaders, token, accountId, userId } =\n        await getBaseRequestData(\"/Card/FindCardList\", state);\n\n      const data: FindCardListRequest = {\n        taxId: state.account.account?.taxId!,\n        accountId: accountId!,\n        userId: userId!,\n      };\n\n      const response = await HttpClient.post<FindCardListResponse>(url, data, {\n        headers: {\n          ...defaultHeaders,\n          Authorization: `Bearer ${token}`,\n        },\n      });\n\n      const responseData = response.data.data;\n      const cards = responseData.cards;\n      dispatch<FindAllCardsListSuccessAction>({\n        type: CardsActions.FIND_CARD_LIST_SUCCESS,\n        payload: cards!,\n      });\n    } catch (error: any) {\n      let response: ApiResponse | undefined;\n      if (error.response) response = error.response?.data;\n\n      dispatch<FindAllCardsListFailAction>({\n        type: CardsActions.FIND_CARD_LIST_FAIL,\n        payload: response?.message ?? error.message,\n      });\n    }\n  };\n\nexport const validateCard =\n  (panLastDigits: string) => async (dispatch: Dispatch, getState: GetState) => {\n    dispatch<ValidateCardStartAction>({\n      type: CardsActions.VALIDATE_CARD_START,\n    });\n    try {\n      const state = getState();\n      const { url, defaultHeaders, token } = await getBaseRequestData(\n        \"/Card/VerifyCard\",\n        state\n      );\n\n      const data: ValidateCardRequest = {\n        identifierCard: state.card.card?.identifierCard,\n        panLastDigits: panLastDigits,\n        taxId: state.account.account?.taxId!,\n      };\n\n      const response = await HttpClient.post(url, data, {\n        headers: {\n          ...defaultHeaders,\n          Authorization: `Bearer ${token}`,\n        },\n      });\n\n      const responseData = response.data.success;\n\n      dispatch<ValidateCardSuccessAction>({\n        type: CardsActions.VALIDATE_CARD_SUCCESS,\n        payload: responseData,\n      });\n    } catch (error: any) {\n      let response: ApiResponse | undefined;\n      if (error.response) response = error.response?.data;\n\n      dispatch<ValidateCardFailAction>({\n        type: CardsActions.VALIDATE_CARD_FAIL,\n        payload: response?.message ?? error.message,\n      });\n    }\n  };\n\nexport const findCard =\n  (identifierCard?: string) =>\n  async (dispatch: Dispatch, getState: GetState) => {\n    dispatch<FindCardStartAction>({\n      type: CardsActions.FIND_CARD_START,\n    });\n\n    try {\n      const state = getState();\n      const { url, defaultHeaders, token, accountId, userId } =\n        await getBaseRequestData(\"/Card/FindCard\", state);\n\n      const data: FindCardRequest = {\n        accountId: accountId!,\n        userId: userId!,\n        identifierCard: identifierCard,\n      };\n\n      const response = await HttpClient.post<FindCardCardResponse>(url, data, {\n        headers: {\n          ...defaultHeaders,\n          Authorization: `Bearer ${token}`,\n        },\n      });\n\n      const responseData = response.data.data;\n      const card = responseData.card;\n      dispatch<FindCardSuccessAction>({\n        type: CardsActions.FIND_CARD_SUCCESS,\n        payload: card!,\n      });\n    } catch (error: any) {\n      let response: ApiResponse | undefined;\n      if (error.response) response = error.response?.data;\n\n      dispatch<FindCardFailAction>({\n        type: CardsActions.FIND_CARD_FAIL,\n        payload: response?.message ?? error.message,\n      });\n    }\n  };\n\nexport const block =\n  (identifierCard: string, pin: string) =>\n  async (dispatch: Dispatch, getState: GetState) => {\n    try {\n      dispatch<BlockStartAction>({\n        type: CardsActions.BLOCK_START,\n      });\n\n      const state = getState();\n      const { url, defaultHeaders, token, accountId, userId } =\n        await getBaseRequestData(\"/Card/Block\", state);\n\n      const data: BlockCardRequest = {\n        accountId: accountId!,\n        userId: userId!,\n        identifierCard: identifierCard!,\n        pin: pin!,\n      };\n\n      const response = await HttpClient.post<BlockCardRequest>(url, data, {\n        headers: {\n          ...defaultHeaders,\n          Authorization: `Bearer ${token}`,\n        },\n      });\n\n      if (!response.data.success) throw new Error(response.data.message);\n\n      dispatch<BlockSuccessAction>({\n        type: CardsActions.BLOCK_SUCCESS,\n      });\n    } catch (error: any) {\n      let response: ApiResponse | undefined;\n      if (error.response) response = error.response?.data;\n\n      dispatch<BlockFailAction>({\n        type: CardsActions.BLOCK_FAIL,\n        payload: response?.message ?? error.message,\n      });\n    }\n  };\n\nexport const unblock =\n  (identifierCard: string, pin: string) =>\n  async (dispatch: Dispatch, getState: GetState) => {\n    try {\n      dispatch<UnblockStartAction>({\n        type: CardsActions.UNBLOCK_START,\n      });\n\n      const state = getState();\n      const { url, defaultHeaders, token, accountId, userId } =\n        await getBaseRequestData(\"/Card/Unblock\", state);\n\n      const data: unBlockCardRequest = {\n        accountId: accountId!,\n        userId: userId!,\n        identifierCard: identifierCard!,\n        pin: pin!,\n      };\n\n      const response = await HttpClient.post<unBlockCardRequest>(url, data, {\n        headers: {\n          ...defaultHeaders,\n          Authorization: `Bearer ${token}`,\n        },\n      });\n\n      if (!response.data.success) throw new Error(response.data.message);\n\n      dispatch<UnblockSuccessAction>({\n        type: CardsActions.UNBLOCK_SUCCESS,\n      });\n    } catch (error: any) {\n      let response: ApiResponse | undefined;\n      if (error.response) response = error.response?.data;\n\n      dispatch<UnblockFailAction>({\n        type: CardsActions.UNBLOCK_FAIL,\n        payload: response?.message ?? error.message,\n      });\n    }\n  };\n\nexport const activateCard =\n  () => async (dispatch: Dispatch, getState: GetState) => {\n    try {\n      dispatch<ActivateCardStartAction>({\n        type: CardsActions.ACTIVATE_CARD_START,\n      });\n\n      const state = getState();\n\n      const { url, defaultHeaders, token, accountId, userId } =\n        await getBaseRequestData(\"/Card/Activate\", state);\n\n      const data: ActivateCardRequest = {\n        accountId: accountId!,\n        userId: userId!,\n        identifierCard: state.card!.card!.identifierCard!.toString(),\n      };\n\n      const response = await HttpClient.post<ActivateCardResponse>(url, data, {\n        headers: {\n          ...defaultHeaders,\n          Authorization: `Bearer ${token}`,\n        },\n      });\n\n      if (!response.data.success) throw new Error(response.data.message);\n\n      dispatch<ActivateCardSuccessAction>({\n        type: CardsActions.ACTIVATE_CARD_SUCCESS,\n      });\n    } catch (error: any) {\n      let response: ApiResponse | undefined;\n      if (error.response) response = error.response?.data;\n\n      dispatch<ActivateCardFailAction>({\n        type: CardsActions.ACTIVATE_CARD_FAIL,\n        payload: response?.message ?? error.message,\n      });\n    }\n  };\n\nexport const inactivateAndReissueCard =\n  (identifierCard: string, pin: string, reasonCode: number) =>\n  async (dispatch: Dispatch, getState: GetState) => {\n    const state = getState();\n    dispatch<InactivateAndReissueCardStartAction>({\n      type: CardsActions.INACTIVATE_AND_REISSUE_CARD_START,\n      payload: { ...state.card.card! },\n    });\n\n    try {\n      const state = getState();\n      const { url, defaultHeaders, token, accountId, userId } =\n        await getBaseRequestData(\"/Card/InactivateAndReissue\", state);\n\n      const data: InactivateAndReissueCardRequest = {\n        accountId: accountId!,\n        userId: userId!,\n        identifierCard: identifierCard,\n        pin: pin,\n        reasonCode: reasonCode,\n        cardDeliveryAddress: {\n          street: state.auth.user?.street!,\n          number: state.auth.user?.number!,\n          district: state.auth.user?.district!,\n          complement: state.auth.user?.complement!,\n          city: state.auth.user?.city!,\n          state: state.auth.user?.state!,\n          zipCode: state.auth.user?.zipCode!,\n          reference: state.auth.user?.reference!,\n          country: state.auth.user?.country!,\n        },\n      };\n\n      const response = await HttpClient.post<InactivateAndReissueCardResponse>(\n        url,\n        data,\n        {\n          headers: {\n            ...defaultHeaders,\n            Authorization: `Bearer ${token}`,\n          },\n        }\n      );\n\n      if (!response.data.success) throw new Error(response.data.message);\n\n      dispatch<InactivateAndReissueCardSuccessAction>({\n        type: CardsActions.INACTIVATE_AND_REISSUE_CARD_SUCCESS,\n        payload: response.data.success!,\n      });\n    } catch (error: any) {\n      let response: ApiResponse | undefined;\n      if (error.response) response = error.response?.data;\n\n      dispatch<InactivateAndReissueCardFailAction>({\n        type: CardsActions.INACTIVATE_AND_REISSUE_CARD_FAIL,\n        payload: response?.message ?? error.message,\n      });\n    }\n  };\n\nexport const selectedReason =\n  (reasonCode?: ReasonCode) => (dispatch: Dispatch) => {\n    dispatch<SelectedReasonAction>({\n      type: CardsActions.SELECTED_REASON,\n      payload: reasonCode!,\n    });\n  };\n\nexport const selectCard = (card?: Card) => (dispatch: Dispatch) => {\n  dispatch<SelectCardAction>({\n    type: CardsActions.SELECT_CARD,\n    payload: card!,\n  });\n};\n\nexport const updateCard = (card?: Card) => (dispatch: Dispatch) => {\n  dispatch<UpdateCardAction>({\n    type: CardsActions.UPDATE_CARD,\n    payload: card,\n  });\n};\n\nexport const changePinCard =\n  (changePinCard?: Card) => async (dispatch: Dispatch, getState: GetState) => {\n    dispatch<ChangePinCardStartAction>({\n      type: CardsActions.CHANGE_PIN_CARD_START,\n      payload: changePinCard!,\n    });\n\n    try {\n      const state = getState();\n      const { url, defaultHeaders, token, accountId, userId } =\n        await getBaseRequestData(\"/Card/ChangePinCard\", state);\n\n      const data: ChangePinCardRequest = {\n        identifierCard: state.card?.card?.identifierCard,\n        accountId: accountId!,\n        userId: userId!,\n        currentPin: decryptPassword(),\n        pin: decryptNewPassword(),\n        confirmationPin: decryptNewPassword(),\n      };\n\n      const response = await HttpClient.post(url, data, {\n        headers: {\n          ...defaultHeaders,\n          Authorization: `Bearer ${token}`,\n        },\n      });\n      if (!response.data.success) throw new Error(response.data.message);\n\n      dispatch<ChangePinCardSuccessAction>({\n        type: CardsActions.CHANGE_PIN_CARD_SUCCESS,\n      });\n    } catch (error: any) {\n      let response: ApiResponse | undefined;\n      if (error.response) response = error.response?.data;\n\n      dispatch<ChangePinCardFailAction>({\n        type: CardsActions.CHANGE_PIN_CARD_FAIL,\n        payload: response?.message ?? error.message,\n      });\n    }\n  };\n\nexport const closeAlert = () => (dispatch: Dispatch) => {\n  dispatch<CloseAlertAction>({\n    type: CardsActions.CLOSE_ALERT,\n  });\n};\n\nexport const cancelCard =\n  (identifierCard: string) =>\n  async (dispatch: Dispatch, getState: GetState) => {\n    dispatch<CancelCardStartAction>({\n      type: CardsActions.CANCEL_CARD_START,\n    });\n\n    try {\n      const state = getState();\n      const { url, defaultHeaders, token, accountId, userId } =\n        await getBaseRequestData(\"/Card/CancelCard\", state);\n\n      const data: CancelCardRequest = {\n        accountId: accountId!,\n        userId: userId!,\n        identifierCard: identifierCard!,\n      };\n\n      const response = await HttpClient.post<CancelCardRequest>(url, data, {\n        headers: {\n          ...defaultHeaders,\n          Authorization: `Bearer ${token}`,\n        },\n      });\n\n      if (!response.data.success) throw new Error(response.data.message);\n\n      dispatch<CancelCardSuccessAction>({\n        type: CardsActions.CANCEL_CARD_SUCCESS,\n      });\n    } catch (error: any) {\n      let response: ApiResponse | undefined;\n      if (error.response) response = error.response?.data;\n\n      dispatch<CancelCardFailAction>({\n        type: CardsActions.CANCEL_CARD_FAIL,\n        payload: response?.message ?? error.message,\n      });\n    }\n  };\n\nexport const bindUnnamedCard =\n  () => async (dispatch: Dispatch, getState: GetState) => {\n    try {\n      dispatch<BindUnnamedCardStartAction>({\n        type: CardsActions.BIND_UNNAMED_CARD_START,\n      });\n\n      const state = getState();\n\n      const { url, defaultHeaders, token, accountId, userId, accountTaxId } =\n        await getBaseRequestData(\"/Card/BindUnnamedCard\", state);\n\n      const data: BindUnnamedCardRequest = {\n        accountId: accountId!,\n        userId: userId!,\n        identifierCard: state.card!.card!.identifierCard!,\n        usageType: UsageType.balance,\n        cardOwner: {\n          ownerTaxId: ConfigProvider.config.company.taxId!,\n          fullName: ConfigProvider.config.company.name,\n          phone: ConfigProvider.config.company.phone,\n          mail: ConfigProvider.config.company.email,\n          bank: state.account.account?.bank!,\n          bankBranch: state.account?.account?.bankBranch!,\n          bankAccount: state.account?.account?.bankAccount!,\n          bankAccountDigit: state.account.account?.bankAccountDigit!,\n        },\n        cardHolder: {\n          holderTaxId: accountTaxId!,\n          nationality: state.card!.card!.nationality!,\n          motherName: state.card!.card!.motherName!,\n          gender: state.card!.card!.gender!,\n          fullName: state.card!.card!.fullName!,\n          birthDate: state.card!.card!.birthDate!,\n          maritalStatus: state.card!.card!.maritalStatus!,\n        },\n        cardHolderContact: {\n          phone: state.auth.user?.phoneNumber!,\n          mail: state.auth.user?.mail!,\n        },\n      };\n\n      const response = await HttpClient.post<BindUnnamedCardResponse>(\n        url,\n        data,\n        {\n          headers: {\n            ...defaultHeaders,\n            Authorization: `Bearer ${token}`,\n          },\n        }\n      );\n\n      if (!response.data.success) throw new Error(response.data.message);\n\n      dispatch<BindUnnamedCardSuccessAction>({\n        type: CardsActions.BIND_UNNAMED_CARD_SUCCESS,\n      });\n    } catch (error: any) {\n      let response: ApiResponse | undefined;\n      if (error.response) response = error.response?.data;\n\n      dispatch<BindUnnamedCardFailAction>({\n        type: CardsActions.BIND_UNNAMED_CARD_FAIL,\n        payload: response?.message ?? error.message,\n      });\n    }\n  };\n","/home/danielvitor/Documentos/Develop/stonebank_front/src/components/ActionListItem/index.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/card/constants/routes.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/taxPayment/pages/Fgts/PaymentFgtsValues/index.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/transference/components/BankCard/index.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/taxPayment/pages/Fgts/PaymentFgts/index.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/taxPayment/pages/Gare/PaymentGareCodeNumber/index.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/taxPayment/pages/Gare/PaymentGareDueDate/index.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/taxPayment/pages/Gare/PaymentGareSummary/index.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/taxPayment/pages/Gare/PaymentGareDescription/index.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/pix/pages/ReceivePixTransfer/ReceivePixTransferQrCodeValue/components/HelpPixQrCode/HelpPixQrCode.tsx",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/pix/pages/ReceivePixTransfer/ReceivePixTransferQrCode/components/PixKeySelection/PixKeySelection.tsx",["4795","4796"],"import React from \"react\";\nimport { Box, Drawer, Grid, Typography } from \"@material-ui/core\";\nimport { Close } from \"@material-ui/icons\";\nimport { Button } from \"components/Button\";\nimport { PageContainer } from \"components/PageContainer\";\nimport { useStyles } from \"./PixKeySelection.style\";\nimport { PixKeyType } from \"features/pix/redux/models/pixKeyType\";\nimport { maskCpf } from \"_utils/masks/taxPayer\";\nimport { maskCnpj } from \"_utils/masks/taxId\";\nimport { maskPhone } from \"_utils/masks/phone\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { StoreState } from \"redux/state\";\nimport { SelectionCard } from \"components\";\nimport { PixKeyStatus } from \"features/pix/redux/models/pixKeyStatus\";\nimport { EmptyListMessage } from \"features/pix/pages/PixKeyManagement/PixKeyList/components/EmptyListMessage\";\nimport { PixKey } from \"features/pix/redux/models/pixKey\";\n\ninterface PixKeySelectionProps {\n  open: boolean;\n  onClose: Function | ((PixKeySelectionValid: boolean) => void);\n}\n\nexport const PixKeySelection: React.FC<PixKeySelectionProps> = ({\n  open,\n  onClose,\n}) => {\n  const styles = useStyles();\n\n  const { pixKeyList } = useSelector((state: StoreState) => state.pix);\n\n  const onCloseButtonClick = () => {\n    onClose(false);\n  };\n\n  const applyMaskPixKey = (keyType: number, keyValue: string) =>\n    keyType === PixKeyType.CPF\n      ? maskCpf(keyValue)\n      : keyType === PixKeyType.CNPJ\n      ? maskCnpj(keyValue)\n      : keyValue.substring(1, 3) + \" \" + maskPhone(keyValue.substring(3));\n\n  const mapPixKeyTypeToIcon = (keyType: number) =>\n    PixKeyType.CPF === keyType || PixKeyType.CNPJ === keyType\n      ? \"pixTaxId\"\n      : PixKeyType.Email === keyType\n      ? \"pixMail\"\n      : PixKeyType.PhoneNumber === keyType\n      ? \"pixPhone\"\n      : \"pixKey\";\n\n  const dispatch = useDispatch();\n\n  const isRegistered = (keyType?: number) => {\n    const verifyIfKeyExist = pixKeyList?.some((pixKey) => {\n      if (keyType === 0 && pixKey.pixKeyType === 1) return true;\n\n      return pixKey.pixKeyType === keyType;\n    });\n    return verifyIfKeyExist;\n  };\n  const onKeyClick = (pix: PixKey) => {\n    // dispatch(updatePix(pix))\n    // dispatch(generateStaticPixQRCode())\n    onClose(false);\n  };\n\n  return (\n    <React.Fragment>\n      <Drawer\n        className={styles.drawer}\n        anchor=\"bottom\"\n        elevation={0}\n        open={open}\n        onClose={() => onClose(false)}\n      >\n        <PageContainer>\n          <Box className={styles.content}>\n            <Box className={styles.closeButton}>\n              <Button\n                size=\"small\"\n                palette=\"secondary\"\n                onClick={onCloseButtonClick}\n                startIcon={<Close color=\"inherit\" />}\n              >\n                Fechar\n              </Button>\n            </Box>\n            <Grid container direction=\"column\" spacing={4}>\n              <Grid item>\n                <Typography variant=\"h6\" gutterBottom className={styles.title}>\n                  Selecione o tipo de chave?\n                </Typography>\n                <Box className={styles.receiverSection}>\n                  {pixKeyList?.length ? (\n                    <>\n                      {pixKeyList?.map((pixKey, key) => {\n                        return pixKey.status === PixKeyStatus.Registered ? (\n                          <SelectionCard\n                            variant=\"pix\"\n                            title={PixKeyType[pixKey.pixKeyType!]}\n                            key={key}\n                            subtitle={\n                              pixKey.pixKeyType! === PixKeyType.CPF ||\n                              pixKey.pixKeyType! === PixKeyType.CNPJ ||\n                              pixKey.pixKeyType! === PixKeyType.PhoneNumber\n                                ? applyMaskPixKey(\n                                    pixKey.pixKeyType!,\n                                    pixKey.pixKeyValue!\n                                  )\n                                : pixKey.pixKeyValue\n                            }\n                            startIcon={mapPixKeyTypeToIcon(pixKey.pixKeyType!)}\n                            onClick={() => onKeyClick(pixKey!)}\n                          />\n                        ) : (\n                          \"\"\n                        );\n                      })}\n                    </>\n                  ) : (\n                    <EmptyListMessage />\n                  )}\n                </Box>\n              </Grid>\n            </Grid>\n          </Box>\n        </PageContainer>\n      </Drawer>\n    </React.Fragment>\n  );\n};\n","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/pix/pages/ReceivePixTransfer/ReceivePixTransferQrCode/components/SharePixQrCode/SharePixQrCode.tsx",["4797","4798","4799"],"import React from \"react\";\nimport { Box, Drawer, Grid, Typography } from \"@material-ui/core\";\nimport { Close } from \"@material-ui/icons\";\nimport { Button } from \"components/Button\";\nimport { PageContainer } from \"components/PageContainer\";\nimport { useStyles } from \"./SharePixQrCode.style\";\nimport qrCode from \"_assets/icons/iconQrCodeButton.svg\";\nimport { ShareCode } from \"../ShareCode\";\nimport { ShareImagePixQrCode } from \"../ShareImagePixQrCode\";\nimport { Icon } from \"components/Icon\";\nimport { SelectionButton } from \"features/pix/components/SelectionButton\";\n\ninterface SharePixQrCodeProps {\n  open: boolean;\n  onClose: Function | ((SharePixQrCodeValid: boolean) => void);\n}\n\nexport const SharePixQrCode: React.FC<SharePixQrCodeProps> = ({\n  open,\n  onClose,\n}) => {\n  const styles = useStyles();\n\n  const onCloseButtonClick = () => {\n    onClose(false);\n  };\n\n  const [onShareCodePixQRCode, setShareCodePixQRCode] = React.useState(false);\n  const [validatedShareCodePixQRCodeSheet, setShareCodePixQRCodeSheet] =\n    React.useState(false);\n\n  const onShareCodePixQRCodeClick = React.useCallback(() => {\n    setShareCodePixQRCode(true);\n  }, []);\n\n  const onShareCodePixQRCodeClose = (ShareCodePixQRCodeValid: boolean) => {\n    if (ShareCodePixQRCodeValid) setShareCodePixQRCodeSheet(true);\n    setShareCodePixQRCode(false);\n  };\n\n  const [onShareImagePixQrCode, setShareImagePixQrCode] = React.useState(false);\n  const [validatedShareImagePixQrCodeSheet, setShareImagePixQrCodeSheet] =\n    React.useState(false);\n\n  const onShareImagePixQrCodeClick = React.useCallback(() => {\n    setShareImagePixQrCode(true);\n  }, []);\n\n  const onShareImagePixQrCodeClose = (ShareImagePixQrCodeValid: boolean) => {\n    if (ShareImagePixQrCodeValid) setShareImagePixQrCodeSheet(true);\n    setShareImagePixQrCode(false);\n  };\n\n  return (\n    <React.Fragment>\n      <Drawer\n        className={styles.drawer}\n        anchor=\"bottom\"\n        elevation={0}\n        open={open}\n        onClose={() => onClose(false)}\n      >\n        <PageContainer>\n          <Box className={styles.content}>\n            <Box className={styles.closeButton}>\n              <Button\n                size=\"small\"\n                palette=\"secondary\"\n                onClick={onCloseButtonClick}\n                startIcon={<Close color=\"inherit\" />}\n              >\n                Fechar\n              </Button>\n            </Box>\n            <Grid container direction=\"column\" spacing={4}>\n              <Grid item>\n                <Typography variant=\"h6\" gutterBottom className={styles.title}>\n                  Como deseja compartilhar?\n                </Typography>\n                <Box className={styles.receiverSection}>\n                  <SelectionButton\n                    id=\"receiver-info-card\"\n                    qrCodeButton=\"Código do QR Code\"\n                    startIcon={<Icon name=\"qrCodeCodigo\" />}\n                    onClick={onShareCodePixQRCodeClick}\n                  />\n                  <SelectionButton\n                    id=\"receiver-info-card\"\n                    qrCodeButton=\"Imagem  QR Code\"\n                    startIcon={<Icon name=\"qrCodeButton\" />}\n                    onClick={onShareImagePixQrCodeClick}\n                  />\n                </Box>\n              </Grid>\n            </Grid>\n          </Box>\n          <ShareCode\n            open={onShareCodePixQRCode}\n            onClose={onShareCodePixQRCodeClose}\n          />\n          <ShareImagePixQrCode\n            open={onShareImagePixQrCode}\n            onClose={onShareImagePixQrCodeClose}\n          />\n        </PageContainer>\n      </Drawer>\n    </React.Fragment>\n  );\n};\n","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/taxPayment/pages/Gare/PaymentGareDateType/index.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/taxPayment/pages/Gare/PaymentGare/index.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/taxPayment/pages/Darj/PaymentDarjDueDate/index.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/taxPayment/pages/Darj/PaymentDarjValues/index.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/taxPayment/pages/Darj/PaymentDarjType/index.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/digitalWithdrawal/pages/index.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/payment/pages/index.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/payment/constants/index.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/components/ConclusionFlow/ConclusionFlow.style.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/onboarding/pages/LandingPage/index.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/card/pages/AssociateNewCard/AssociateNewCardCheck/index.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/authentication/pages/ConfirmRecoverPwd/ConfirmRecoverPwd.style.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/card/pages/AssociateNewCard/AssociateFourDigits/index.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/taxpayment/pages/Darj/PaymentDarjCodeNumber/index.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/taxpayment/pages/Darj/PaymentDarjSummary/index.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/taxpayment/pages/Darj/PaymentDarj/index.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/taxpayment/pages/Darj/PaymentDarjDescription/index.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/authentication/pages/TemporaryPassword/TemporaryPassword.style.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/digitalWithdrawal/constants/index.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/topUp/pages/CancelPeriodicTopUp/CancelPeriodicTopUp.style.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/authentication/pages/FirstAccess/ChangePasswordCompleted/ChangePasswordCompleted.style.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/card/pages/AssociateNewCard/ConcludeAssociateCard/ConcludeAssociateCard.style.ts",["4800"],"import { makeStyles } from \"@material-ui/core\";\nimport { colors } from \"_config/theme\";\n\ninterface StylesProps {\n  footerPosition?: \"fixed\";\n}\n\nexport const useStyles = makeStyles({\n  boxHeader: {\n    marginTop: \"30%\",\n    height: \"40%\",\n  },\n  boxMain: {\n    width: \"100%\",\n    height: \"100%\",\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n  },\n  cardImg: {\n    marginTop: \"40%\",\n    display: \"flex\",\n    justifyContent: \"center\",\n    height: \"40%\",\n  },\n  title: {\n    height: \"10%\",\n    fontWeight: \"bold\",\n    fontSize: \"30px\",\n    textAlign: \"center\",\n    color: colors.primary.shade0,\n  },\n  boxDescription: {\n    display: \"flex\",\n    justifyContent: \"center\",\n    fontSize: 18,\n    width: \"100%\",\n    height: \"20%\",\n  },\n  description: {\n    marginTop: \"11%\",\n    width: \"80%\",\n    textAlign: \"center\",\n  },\n  buttonsWrapper: {},\n  footer: {\n    marginBottom: \"2%\",\n    width: \"100%\",\n    display: \"flex\",\n    flexDirection: \"row\",\n    justifyContent: \"end\",\n    height: \"30%\",\n    \"& .MuiButton-root\": {\n      minWidth: 136,\n      borderRadius: 10,\n    },\n    \"& .MuiButton-label\": {\n      display: \"block\",\n      position: \"relative\",\n    },\n    \"& .MuiButton-startIcon, & .MuiButton-endIcon\": {\n      display: \"block\",\n      position: \"absolute\",\n    },\n    \"& .MuiButton-startIcon\": {\n      top: 0,\n      left: 0,\n      marginRight: 8,\n    },\n    \"& .MuiButton-endIcon\": {\n      marginLeft: 8,\n      top: 0,\n      right: 0,\n    },\n  },\n});\n","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/card/pages/AssociateNewCard/AssociateBirthDateCard/AssociateBirthDateCard.style.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/smsTransfer/pages/SmsAccountsExibition/SmsAccountsExibition.style.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/components/ConfirmTokenSheet/index.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/authentication/pages/FirstAccess/ConfirmPasswordFirstAccess/ConfirmPasswordFirstAccess.tsx",["4801","4802","4803","4804","4805","4806","4807","4808","4809","4810"],"import React from 'react'\nimport { useHistory } from 'react-router-dom'\nimport { Close, KeyboardArrowRight } from '@material-ui/icons'\nimport { ProcessDescriptionHeader } from 'components/ProcessDescriptionHeader'\nimport { ProcessPageFooter } from 'components/ProcessPageFooter'\nimport { AppBar } from 'components/AppBar'\nimport { Button } from 'components/Button'\nimport { cancelLabel, nextLabel } from 'constants/buttons/labels'\nimport { AuthenticationRoutes } from 'features/authentication/constants/routes'\nimport { OnboardingRoutes } from 'features/onboarding/constants/routes'\nimport { ProcessPageLayout } from 'components/ProcessPageLayout'\nimport { PasswordField } from 'components/PasswordField'\nimport { Container, Grid } from '@material-ui/core'\nimport { useStyles } from './ConfirmPasswordFirstAccess.style'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { StoreState } from 'redux/state'\nimport {\n  changePasswordFirstAccess,\n  logout,\n} from \"features/authentication/redux/actions\";\nimport { Loader } from \"components/Loader\";\nimport {\n  ChangePasswordLoadingState,\n  ChangePasswordSuccessState,\n  ChangePasswordErrorState,\n} from 'features/authentication/redux/state'\nimport { ErrorMessage } from 'components/ErrorMessage'\nimport { GreatButton } from 'components/GreatButton'\n\nexport const ConfirmPasswordFirstAccess: React.FC = () => {\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const style = useStyles();\n\n  const [rePasswordInput, setRePasswordInput] = React.useState(\"\");\n\n  const onCancelButtonClick = () => {\n    dispatch(logout());\n    history.go(-3);\n  };\n\n  const { userFirstAccessForm } = useSelector(\n    (store: StoreState) => store.auth\n  );\n\n  const onNextButtonClick = (event: React.FormEvent) => {\n    event.preventDefault();\n    dispatch(\n      changePasswordFirstAccess({\n        ...userFirstAccessForm,\n        confirmationNewPassword: rePasswordInput,\n      })\n    );\n  };\n\n  const onRePasswordChange = (event: React.ChangeEvent<HTMLInputElement>) =>\n    setRePasswordInput(event.target.value);\n\n  const onSamePassword = (password: string, rePassword: string) => {\n    if (!(password === rePassword)) return true;\n  };\n\n  const condition = onSamePassword(\n    userFirstAccessForm?.newPassword!,\n    rePasswordInput\n  );\n\n  const authState = useSelector((state: StoreState) => state.auth);\n\n  React.useEffect(() => {\n    if (authState instanceof ChangePasswordSuccessState)\n      history.push(AuthenticationRoutes.changePasswordCompleted);\n\n    if (authState instanceof ChangePasswordErrorState) history.goBack();\n  }, [authState, history]);\n\n  return (\n    <Container maxWidth=\"xs\" className={style.container}>\n  \n      <ProcessDescriptionHeader\n        title=\"Criar senha\"\n        description=\"Para utilizar  nossos serviços , você deve estar de acordo com os termos de uso\"\n      />\n\n      <Grid\n        container\n        direction=\"column\"\n        component=\"form\"\n        onSubmit={onNextButtonClick}\n      >\n        <Grid item>\n          <PasswordField\n            label=\"Nova Senha\"\n            value={userFirstAccessForm?.newPassword!}\n            placeholder=\"Digite sua nova senha\"\n          />\n        </Grid>\n\n        <Grid item className={style.gridItem}>\n          <PasswordField\n            label=\"Confirmar Senha\"\n            value={rePasswordInput}\n            placeholder=\"Digite novamente sua nova senha\"\n            onChange={onRePasswordChange}\n          />\n        </Grid>\n        {condition && (\n          <ErrorMessage message=\"A senha não corresponde à senha anterior\" />\n        )}\n        <Loader open={authState instanceof ChangePasswordLoadingState} />\n      </Grid>\n\n      <Grid item className={style.ButtonWrapper}>\n        <GreatButton\n          palette=\"primary\"\n          size=\"large\"\n          route={AuthenticationRoutes.signIn}\n          id=\"confirm-pasword-button\"\n        >\n          Salvar\n        </GreatButton>\n      </Grid>\n\n    </Container>\n  )\n}\n","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/onboarding/pages/ActivateBySMS/EnterMailForSms/EnterMailForSms.style.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/smsTransfer/pages/SmsTransferValue/SmsTransferValue.tsx",["4811","4812","4813","4814"],"import React from \"react\";\nimport { PageContainer } from \"components/PageContainer\";\nimport { ProcessPageLayout } from \"components/ProcessPageLayout\";\nimport { AppBar } from \"components/AppBar\";\nimport { AccountRoutes } from \"features/account/constants/routes\";\nimport { Button } from \"components/Button\";\nimport { Close, KeyboardArrowRight, Store } from \"@material-ui/icons\";\nimport { cancelLabel, nextLabel } from \"constants/buttons/labels\";\nimport { useHistory } from \"react-router-dom\";\nimport { TextField } from \"components/TextField\";\nimport { ProcessPageFooter } from \"components/ProcessPageFooter\";\nimport { SmsTransferRoutes } from \"features/smsTransfer/constants/routes\";\nimport { ProcessDescriptionHeader } from \"components/ProcessDescriptionHeader\";\nimport { Box, Grid, Typography } from \"@material-ui/core\";\nimport { maskMoney } from \"_utils/masks/money\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { updateSmsTransferData } from \"features/smsTransfer/redux/actions\";\nimport { useValue } from \"hooks/useValue\";\nimport { StoreState } from \"redux/state\";\nimport { CurrencyFormatter, parseCurrency } from \"_translate\";\nimport { ErrorMessage } from \"components/ErrorMessage\";\n\nexport const SmsTransferValue: React.FC = () => {\n  const [valueInput, setValueInput] = useValue(maskMoney);\n  const [isValidValue, setIsValidValue] = React.useState(false);\n  const { smsTransfer: smsTransferState } = useSelector(\n    (store: StoreState) => store.smsTransfer\n  );\n  const [balanceIsInvalid, setBalanceIsInvalid] = React.useState<\n    boolean | undefined\n  >();\n  const { balance } = useSelector((store: StoreState) => ({\n    balance: store.account.dashboard!.balance,\n  }));\n  const dispatch = useDispatch();\n  const history = useHistory();\n\n  React.useEffect(() => {\n    const convertedValue = parseCurrency(\n      isNaN(parseCurrency(valueInput))\n        ? CurrencyFormatter.format(0)\n        : valueInput\n    );\n    setIsValidValue(convertedValue > 0);\n    setIsValidValue(convertedValue > 0 && convertedValue <= balance);\n    setBalanceIsInvalid(convertedValue > balance);\n  }, [valueInput]);\n\n  const onTransferValueChange = (\n    event: React.ChangeEvent<HTMLInputElement>\n  ) => {\n    setValueInput(event.target.value);\n  };\n\n  const onCancelButtonClick = () => {\n    dispatch(updateSmsTransferData());\n    history.replace(AccountRoutes.home);\n  };\n\n  const smsTransfer = useSelector(\n    (store: StoreState) => store.smsTransfer.smsTransfer\n  );\n\n  const onSubmit = (event: React.FormEvent) => {\n    event.preventDefault();\n    dispatch(\n      updateSmsTransferData({\n        ...smsTransfer,\n        value: parseCurrency(valueInput),\n      })\n    );\n    history.push(SmsTransferRoutes.smsTransferSummary);\n  };\n\n  const onBackButtonClick = () =>\n    dispatch(updateSmsTransferData({ ...smsTransferState, toName: undefined }));\n\n  return (\n    <PageContainer>\n      <ProcessPageLayout\n        appBar={\n          <AppBar\n            homeRoute={AccountRoutes.home}\n            action={\n              <Button\n                palette=\"secondary\"\n                size=\"small\"\n                startIcon={<Close color=\"primary\" />}\n                onClick={onCancelButtonClick}\n                data-test-id=\"cancel-button\"\n              >\n                {cancelLabel}\n              </Button>\n            }\n          />\n        }\n        header={\n          <ProcessDescriptionHeader\n            title=\"Transferência pelo celular\"\n            subtitle=\"Quanto deseja transferir?\"\n            description=\"Digite o valor.\"\n          />\n        }\n        main={\n          <Box>\n            <Box component=\"form\" onSubmit={onSubmit}>\n              <TextField\n                label=\"Valor\"\n                placeholder=\"R$ 0,00\"\n                value={\n                  isNaN(parseCurrency(valueInput))\n                    ? CurrencyFormatter.format(0)\n                    : valueInput\n                }\n                inputMode=\"numeric\"\n                onChange={onTransferValueChange}\n                data-test-id=\"transfer-value\"\n              />\n            </Box>\n            <Box>\n              {balanceIsInvalid && (\n                <ErrorMessage message={\"Saldo insuficiente\"} />\n              )}\n            </Box>\n          </Box>\n        }\n        footer={\n          <ProcessPageFooter\n            onBackButtonClick={onBackButtonClick}\n            primaryButton={\n              <Button\n                palette=\"primary\"\n                endIcon={<KeyboardArrowRight color=\"secondary\" />}\n                disabled={!isValidValue}\n                onClick={onSubmit}\n                data-test-id=\"submit-button\"\n              >\n                {nextLabel}\n              </Button>\n            }\n          />\n        }\n      />\n    </PageContainer>\n  );\n};\n","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/smsTransfer/pages/SmsTransferNumber/SmsTransferNumber.tsx",["4815"],"import React from \"react\";\nimport { PageContainer } from \"components/PageContainer\";\nimport { ProcessPageLayout } from \"components/ProcessPageLayout\";\nimport { AppBar } from \"components/AppBar\";\nimport { AccountRoutes } from \"features/account/constants/routes\";\nimport { Button } from \"components/Button\";\nimport { Close, KeyboardArrowRight } from \"@material-ui/icons\";\nimport { cancelLabel, nextLabel } from \"constants/buttons/labels\";\nimport { useHistory } from \"react-router-dom\";\nimport { TextField } from \"components/TextField\";\nimport { ProcessPageFooter } from \"components/ProcessPageFooter\";\nimport { SmsTransferRoutes } from \"features/smsTransfer/constants/routes\";\nimport { ProcessDescriptionHeader } from \"components/ProcessDescriptionHeader\";\nimport { Box } from \"@material-ui/core\";\nimport { useMask } from \"hooks/useMask\";\nimport { maskPhone } from \"_utils/masks/phone\";\nimport { useDispatch } from \"react-redux\";\nimport {\n  getAccountsByPhone,\n  updateSmsTransferData,\n} from \"features/smsTransfer/redux/actions\";\nimport { useSelector } from \"react-redux\";\nimport { closeAlert } from \"features/transference/redux/actions\";\nimport { StoreState } from \"redux/state\";\nimport { Loader } from \"components/Loader\";\nimport { Alert } from \"components/Alert\";\nimport { SuccessSmsTransferState } from \"features/smsTransfer/redux/state\";\n\nexport const SmsTransferNumber: React.FC = () => {\n  const [submitted, setSubmitted] = React.useState(false);\n  const [phoneNumber, setPhoneNumber] = useMask(maskPhone);\n\n  const history = useHistory();\n  const transferType = useSelector(\n    (state: StoreState) => state.smsTransfer.smsTransfer?.transferType\n  );\n  const smsTransference = useSelector((state: StoreState) => state.smsTransfer);\n  const dispatch = useDispatch();\n\n  const { loading, favoredAccount, errorMessage } = smsTransference;\n  const isValid = phoneNumber.length === 16;\n\n  const onCancelButtonClick = () => {\n    history.replace(AccountRoutes.home);\n  };\n\n  const onAlertClose = () => {\n    dispatch(closeAlert());\n  };\n\n  React.useEffect(() => {\n    dispatch(updateSmsTransferData());\n  }, []);\n\n  React.useEffect(() => {\n    if (submitted && smsTransference instanceof SuccessSmsTransferState) {\n      history.push(\n        favoredAccount\n          ? SmsTransferRoutes.SmsAccountsExibition\n          : SmsTransferRoutes.SmsTransferName\n      );\n    }\n  }, [\n    favoredAccount,\n    submitted,\n    dispatch,\n    phoneNumber,\n    history,\n    transferType,\n    smsTransference,\n  ]);\n\n  const onSmsNumberChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setPhoneNumber(event.target.value);\n  };\n  const onSubmit = (event: React.FormEvent) => {\n    event.preventDefault();\n    if (!isValid) return;\n    dispatch(getAccountsByPhone(phoneNumber));\n    setSubmitted(true);\n  };\n\n  return (\n    <PageContainer>\n      <ProcessPageLayout\n        appBar={\n          <AppBar\n            homeRoute={AccountRoutes.home}\n            action={\n              <Button\n                palette=\"secondary\"\n                size=\"small\"\n                startIcon={<Close color=\"primary\" />}\n                onClick={onCancelButtonClick}\n                data-test-id=\"cancel-button\"\n              >\n                {cancelLabel}\n              </Button>\n            }\n          />\n        }\n        header={\n          <ProcessDescriptionHeader\n            title=\"Transferência pelo celular\"\n            subtitle=\"O primeiro passo é identificar o celular que receberá a transferência\"\n            description=\"Certifique-se que o número está correto, seu beneficiário receberá um código por SMS para ter acesso ao valor.\"\n          />\n        }\n        main={\n          <Box component=\"form\" onSubmit={onSubmit}>\n            <TextField\n              label=\"Celular com DDD\"\n              placeholder=\"(XX) X XXXX.XXXX\"\n              value={phoneNumber}\n              inputMode={\"numeric\"}\n              onChange={onSmsNumberChange}\n              data-test-id=\"change-sms-number\"\n            />\n          </Box>\n        }\n        footer={\n          <ProcessPageFooter\n            primaryButton={\n              <Button\n                palette=\"primary\"\n                endIcon={<KeyboardArrowRight color=\"secondary\" />}\n                disabled={!isValid}\n                onClick={onSubmit}\n                data-test-id=\"submit-button\"\n              >\n                {nextLabel}\n              </Button>\n            }\n          />\n        }\n      />\n      {errorMessage && (\n        <Alert\n          title=\"Erro\"\n          message={errorMessage}\n          severity={\"error\"}\n          onClose={onAlertClose}\n        />\n      )}\n      <Loader open={loading} />\n    </PageContainer>\n  );\n};\n","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/smsTransfer/pages/SmsTransferSummary/SmsTransferSummary.tsx",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/card/pages/AssociateNewCard/InvalidDataForAssociateCard/InvalidDataForAssociateCard.style.tsx",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/authentication/redux/actionTypes.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/card/pages/AssociateNewCard/AssociateNewCard/index.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/transference/pages/TransferProcess/TransferProcess.tsx",["4816"],"import React from \"react\";\nimport { Box, Grid, Typography } from \"@material-ui/core\";\nimport { PageContainer } from \"components/PageContainer\";\nimport { useHistory } from \"react-router-dom\";\nimport { AppBar } from \"components/AppBar\";\nimport { Close } from \"@material-ui/icons\";\nimport { closeLabel } from \"constants/buttons/labels\";\nimport { useStyles } from \"./TransferProcess.style\";\nimport { ProcessPageLayout } from \"components/ProcessPageLayout\";\nimport { AccountRoutes } from \"features/account/constants/routes\";\nimport { Button } from \"components/Button\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { updateTransferenceData } from \"features/transference/redux/actions\";\nimport { StoreState } from \"redux/state\";\nimport { CurrencyFormatter, DateFormatter } from \"_translate\";\nimport { ButtonWithFloatingIcon } from \"components/ButtonWithFloatingIcon\";\nimport { Icon } from \"components/Icon\";\n\nexport const TransferProcess: React.FC = () => {\n  const dispatch = useDispatch();\n  const history = useHistory();\n\n  const { transferenceState } = useSelector((state: StoreState) => ({\n    transferenceState: state.transference,\n  }));\n  const styles = useStyles();\n\n  const { transference } = transferenceState;\n\n  const onHomeButtonClick = () => {\n    dispatch(updateTransferenceData());\n    history.replace(AccountRoutes.home);\n  };\n\n  return (\n    <PageContainer>\n      <ProcessPageLayout\n        appBar={\n          <AppBar\n            homeRoute={AccountRoutes.home}\n            action={\n              <Button\n                palette=\"secondary\"\n                size=\"small\"\n                startIcon={<Close color=\"primary\" />}\n                onClick={onHomeButtonClick}\n                data-test-id=\"home-button\"\n              >\n                {closeLabel}\n              </Button>\n            }\n          />\n        }\n        main={\n          <React.Fragment>\n            <Typography\n              variant=\"h3\"\n              className={styles.title}\n              data-test-id=\"transfer-process\"\n            >\n              Transferência <br /> em processamento\n            </Typography>\n            <Box display=\"flex\" justifyContent=\"center\">\n              <Icon className={styles.img} name={\"transferProcess\"} />\n            </Box>\n\n            <Typography variant=\"body1\" className={styles.description}>\n              Sua solicitação será processada e aparecerá em seu extrato após a\n              conclusão.\n            </Typography>\n\n            <Grid item className={styles.box} data-test-id=\"transfer-content\">\n              <Grid className={styles.detailTransferContent}>\n                <Typography> Transferência no valor de </Typography>\n                <Typography className={styles.transferDetail}>\n                  {CurrencyFormatter.format(transference?.transferValue!)}\n                </Typography>\n                <Typography> para a conta de </Typography>\n                <Typography className={styles.transferDetail}>\n                  {transference?.toName ?? transference?.toTaxId!}\n                </Typography>\n              </Grid>\n            </Grid>\n          </React.Fragment>\n        }\n        footer={\n          <Grid container spacing={4} justify=\"center\">\n            {/*                         <Grid item>\n                <ButtonWithFloatingIcon\n                  icon={IconBgVoucherButton}\n                  size=\"large\"\n                  onClick={onHomeButtonClick}\n                >\n                  Comprovante\n                </ButtonWithFloatingIcon>\n              </Grid> */}\n            <Grid item>\n              <ButtonWithFloatingIcon\n                icon={<Icon name=\"home\" />}\n                size=\"large\"\n                onClick={onHomeButtonClick}\n                data-test-id=\"home-button\"\n              >\n                Início\n              </ButtonWithFloatingIcon>\n            </Grid>\n          </Grid>\n        }\n      />\n    </PageContainer>\n  );\n};\n","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/schedulePayments/pages/ScheduleTransactions/ScheduleTransactions.tsx",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/schedulePayments/pages/FutureTransactions/FutureTransactions.tsx",["4817","4818"],"import React, { useEffect, useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { Box } from \"@material-ui/core\";\nimport { Button } from \"components/Button\";\nimport { TransactionList } from \"features/schedulePayments/components/TransactionList\";\nimport { AccountRoutes } from \"features/account/constants/routes\";\nimport { SearchField } from \"components/SearchField/SearchField\";\nimport { AppBar } from \"components/AppBar\";\nimport { ButtonWithFloatingIcon } from \"components/ButtonWithFloatingIcon\";\nimport { ProcessPageFooter } from \"components/ProcessPageFooter\";\nimport { ProcessDescriptionHeader } from \"components/ProcessDescriptionHeader\";\nimport { useStyles } from \"./FutureTransactions.style\";\nimport { ProcessPageLayout } from \"components/ProcessPageLayout\";\nimport { PageContainer } from \"components/PageContainer\";\nimport { Divider } from \"components/Divider\";\nimport { Close } from \"@material-ui/icons\";\nimport { cancelLabel } from \"constants/buttons/labels\";\nimport { SchedulePayments } from \"features/schedulePayments/constants/routes\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { StoreState } from \"redux/state\";\nimport {\n  closeAlert,\n  getCancelPayments,\n  getFutureTransactions,\n  updateTransactions,\n} from \"features/schedulePayments/redux/actions\";\nimport { Loader } from \"components/Loader\";\nimport { Alert } from \"components/Alert\";\nimport { selectPayment } from \"features/schedulePayments/redux/actions\";\nimport { FindFuturePaymentsList } from \"features/schedulePayments/redux/models/futureTransactions\";\nimport { PopUpCancelScheduledPayment } from \"features/schedulePayments/components/PopUpCancelScheduledPayment\";\nimport { AuthorizationSheet } from \"components/AuthorizationSheet\";\nimport { AlertConcluded } from \"components/AlertConcluded\";\nimport { EmptyList } from \"components/EmptyList\";\nimport { Icon } from \"components/Icon\";\n\nexport const FutureTransactions: React.FC = () => {\n  const history = useHistory();\n  const styles = useStyles();\n  const dispatch = useDispatch();\n\n  const { futureTransactions, futureTransaction, loading, errorMessage } =\n    useSelector((state: StoreState) => state.futureTransactions);\n\n  const [openAuthorizationSheet, setOpenAuthorizationSheet] =\n    React.useState(false);\n\n  const [displayFutureFilters, setDisplayFutureFilters] =\n    useState(futureTransaction);\n\n  const [searchFutureTransaction, setSearchFutureTransaction] =\n    useState(futureTransactions);\n\n  const [openCardPopup, setOpenCardPopup] = React.useState(false);\n\n  const [onShowAlert, setShowAlert] = useState(false);\n\n  const [validatedToken, setValidatedToken] = React.useState(false);\n\n  useEffect(() => {\n    dispatch(getFutureTransactions());\n  }, []);\n\n  React.useEffect(() => {\n    setDisplayFutureFilters(futureTransaction);\n  }, [futureTransaction]);\n\n  const onMoreFiltersButtonClick = () => {\n    dispatch(updateTransactions(futureTransaction));\n    history.push(SchedulePayments.SheduleTransactionsFilter);\n  };\n\n  const onTransactionClick = (futureTransaction: FindFuturePaymentsList) => {\n    dispatch(\n      selectPayment({\n        DocumentNumber: displayFutureFilters?.DocumentNumber,\n        operationType: displayFutureFilters?.operationType,\n        futureTransactionType: displayFutureFilters?.futureTransactionType,\n        initialDate: displayFutureFilters?.initialDate,\n        finalDate: displayFutureFilters?.finalDate,\n        ...futureTransaction,\n      })\n    );\n    setOpenCardPopup(true);\n  };\n\n  const convertDate = (date: Date | undefined) => {\n    if (date) {\n      const dateString = date || new Date();\n      const day = dateString.getDate().toString().padStart(2, \"0\");\n      const month = (dateString.getMonth() + 1).toString().padStart(2, \"0\");\n      const year = dateString.getFullYear();\n\n      return `${day}/${month}/${year}`;\n    }\n    return undefined;\n  };\n\n  useEffect(() => {\n    setSearchFutureTransaction(futureTransactions);\n  }, [futureTransactions]);\n\n  const _search = (value: string) => {\n    value = value.replace(/^\\s+|\\s+$/, \"\").toLowerCase();\n    const result = futureTransactions?.filter((p) =>\n      p.name?.toLowerCase().includes(value.toLowerCase())\n    );\n    setSearchFutureTransaction(result);\n  };\n\n  const onCardPopupClose = (signal?: boolean) => {\n    setOpenCardPopup(false);\n    if (signal) {\n      setOpenAuthorizationSheet(true);\n    }\n  };\n\n  const onAlertClose = () => {\n    setShowAlert(false);\n    dispatch(closeAlert());\n  };\n\n  const onAuthorizationSheetClose = (isTokenValid: boolean) => {\n    if (isTokenValid) {\n      setValidatedToken(true);\n      dispatch(getCancelPayments());\n      dispatch(getFutureTransactions());\n      dispatch(closeAlert());\n    }\n    setOpenAuthorizationSheet(false);\n  };\n\n  React.useEffect(() => {\n    if (validatedToken && futureTransaction?.success! === true) {\n      setShowAlert(true);\n      dispatch(getFutureTransactions());\n    }\n  }, [futureTransaction]);\n\n  const dateFilter = !(\n    displayFutureFilters?.initialDate && displayFutureFilters?.finalDate\n  )\n    ? `Próximos 30 dias`\n    : `de ${convertDate(displayFutureFilters?.initialDate)}\n     à ${convertDate(displayFutureFilters?.finalDate)}`;\n\n  const onCancelButtonClick = () => {\n    dispatch(updateTransactions());\n    history.replace(AccountRoutes.home);\n  };\n\n  const isEmptyList = () => {\n    return !futureTransactions?.length!;\n  };\n\n  const onBackButtonClick = () => dispatch(updateTransactions());\n\n  return (\n    <PageContainer>\n      <ProcessPageLayout\n        appBar={\n          <AppBar\n            homeRoute={AccountRoutes.home}\n            action={\n              <Button\n                palette=\"secondary\"\n                size=\"small\"\n                startIcon={<Close color=\"primary\" />}\n                onClick={onCancelButtonClick}\n                data-test-id=\"cancel-button\"\n              >\n                {cancelLabel}\n              </Button>\n            }\n          />\n        }\n        header={\n          <React.Fragment>\n            <Box className={styles.container}>\n              <ProcessDescriptionHeader title=\"Entradas futuras\" />\n            </Box>\n            <SearchField\n              onChange={(e) => _search(e?.target.value)}\n              placeholder=\"Busque por nome da conta\"\n            />\n            <Box\n              className={styles.filterContainer}\n              data-test-id=\"future-transactions\"\n            >\n              <Box className={styles.filterDates}>{dateFilter}</Box>\n              <Box>\n                <Divider spacing={1} className={styles.divider} />\n              </Box>\n              <Box className={styles.buttonFilter}>\n                <ButtonWithFloatingIcon\n                  icon={<Icon name=\"buttonBg\" />}\n                  onClick={onMoreFiltersButtonClick}\n                  data-test-id=\"more-filters-button\"\n                >\n                  Escolher data\n                </ButtonWithFloatingIcon>\n              </Box>\n            </Box>\n          </React.Fragment>\n        }\n        main={\n          <React.Fragment>\n            <Box className={styles.containerTransaction}>\n              {isEmptyList() ? (\n                <EmptyList />\n              ) : (\n                searchFutureTransaction?.map((transactions) => (\n                  <TransactionList\n                    key={transactions.DocumentNumber}\n                    value={transactions.principalValue}\n                    typePayment={transactions.typeDescription}\n                    status={transactions.status}\n                    name={transactions.name}\n                    paymentDate={transactions.paymentDate}\n                    dueDate={transactions.dueDate}\n                    onClick={() => onTransactionClick(transactions)}\n                    data-test-id=\"transaction-list\"\n                  />\n                ))\n              )}\n            </Box>\n            <Box>\n              <PopUpCancelScheduledPayment\n                open={openCardPopup}\n                onClose={onCardPopupClose}\n              />\n              <AuthorizationSheet\n                description=\"Para autenticar a operação\"\n                open={openAuthorizationSheet}\n                onClose={onAuthorizationSheetClose}\n              />\n\n              <AlertConcluded\n                open={onShowAlert}\n                onClose={onAlertClose}\n                onClick={onAlertClose}\n                title={\"Concluído\"}\n              />\n            </Box>\n          </React.Fragment>\n        }\n        footer={\n          <ProcessPageFooter\n            onBackButtonClick={onBackButtonClick}\n            data-test-id=\"back-button\"\n          />\n        }\n      />\n      <Loader open={loading} />\n      {errorMessage && (\n        <Alert title=\"Erro\" message={errorMessage} severity=\"error\" />\n      )}\n    </PageContainer>\n  );\n};\n","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/schedulePayments/pages/ScheduleTransactionsList/ScheduleTransactionsList.tsx",["4819","4820"],"import React, { useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { Box } from \"@material-ui/core\";\nimport { Button } from \"components/Button\";\nimport { TransactionList } from \"features/schedulePayments/components/TransactionList\";\nimport { AccountRoutes } from \"features/account/constants/routes\";\nimport { AppBar } from \"components/AppBar\";\nimport { ButtonWithFloatingIcon } from \"components/ButtonWithFloatingIcon\";\nimport { ProcessPageFooter } from \"components/ProcessPageFooter\";\nimport { ProcessDescriptionHeader } from \"components/ProcessDescriptionHeader\";\nimport { useStyles } from \"./ScheduleTransactionsList.style\";\nimport { ProcessPageLayout } from \"components/ProcessPageLayout\";\nimport { PageContainer } from \"components/PageContainer\";\nimport { SearchFilter } from \"features/schedulePayments/components/SearchFilter\";\nimport { Divider } from \"components/Divider/Divider\";\nimport { Close } from \"@material-ui/icons\";\nimport { cancelLabel } from \"constants/buttons/labels\";\nimport { SchedulePayments } from \"features/schedulePayments/constants/routes\";\nimport { PopUpCancelScheduledPayment } from \"features/schedulePayments/components/PopUpCancelScheduledPayment\";\nimport { AlertConcluded } from \"components/AlertConcluded\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { StoreState } from \"redux/state\";\nimport { FindFuturePaymentsList } from \"features/schedulePayments/redux/models/futureTransactions\";\nimport {\n  getFutureTransactions,\n  updateTransactions,\n  selectPayment,\n  closeAlert,\n  getCancelPayments,\n} from \"features/schedulePayments/redux/actions\";\nimport { Loader } from \"components/Loader\";\nimport { Alert } from \"components/Alert\";\nimport { AuthorizationSheet } from \"components/AuthorizationSheet\";\nimport { EmptyList } from \"components/EmptyList\";\nimport { Icon } from \"components/Icon\";\n\nexport const ScheduleTransactionsList: React.FC = () => {\n  const history = useHistory();\n  const styles = useStyles();\n  const dispatch = useDispatch();\n\n  const { futureTransactions, futureTransaction, loading, errorMessage } =\n    useSelector((state: StoreState) => state.futureTransactions);\n\n  const [openCardPopup, setOpenCardPopup] = React.useState(false);\n  const [onShowAlert, setShowAlert] = useState(false);\n  const [displayPaymentsList, setdisplayPaymentsList] =\n    React.useState(futureTransactions);\n  const [displayFutureFilters, setDisplayFutureFilters] =\n    React.useState(futureTransaction);\n  const [openAuthorizationSheet, setOpenAuthorizationSheet] =\n    React.useState(false);\n  const [validatedToken, setValidatedToken] = React.useState(false);\n\n  React.useEffect(() => {\n    dispatch(getFutureTransactions());\n  }, []);\n\n  React.useEffect(() => {\n    setDisplayFutureFilters(futureTransaction);\n  }, [futureTransaction]);\n\n  React.useEffect(() => {\n    setdisplayPaymentsList(futureTransactions);\n  }, [futureTransactions]);\n\n  const onAlertClose = () => {\n    setShowAlert(false);\n    dispatch(closeAlert());\n  };\n\n  const onMoreFiltersButtonClick = () => {\n    dispatch(updateTransactions(futureTransaction));\n    history.push(SchedulePayments.SheduleTransactionsFilter);\n  };\n\n  const onCancelButtonClick = () => {\n    dispatch(updateTransactions());\n    history.replace(AccountRoutes.home);\n  };\n\n  const onCardPopupClose = (signal?: boolean) => {\n    setOpenCardPopup(false);\n    if (signal) {\n      setOpenAuthorizationSheet(true);\n    }\n  };\n\n  const onActiveButtonState = (futureTransactions: FindFuturePaymentsList) => {\n    dispatch(\n      selectPayment({\n        DocumentNumber: displayFutureFilters?.DocumentNumber,\n        operationType: displayFutureFilters?.operationType,\n        futureTransactionType: displayFutureFilters?.futureTransactionType,\n        initialDate: displayFutureFilters?.initialDate,\n        finalDate: displayFutureFilters?.finalDate,\n        ...futureTransactions,\n      })\n    );\n    setOpenCardPopup(true);\n  };\n\n  const convertDate = (date: Date | undefined) => {\n    if (date) {\n      const dateString = date || new Date();\n      const day = dateString.getDate().toString().padStart(2, \"0\");\n      const month = (dateString.getMonth() + 1).toString().padStart(2, \"0\");\n      const year = dateString.getFullYear();\n\n      return `${day}/${month}/${year}`;\n    }\n    return undefined;\n  };\n\n  const onAuthorizationSheetClose = (isTokenValid: boolean) => {\n    if (isTokenValid) {\n      setValidatedToken(true);\n      dispatch(getCancelPayments());\n      dispatch(getFutureTransactions());\n      dispatch(closeAlert());\n    }\n    setOpenAuthorizationSheet(false);\n  };\n\n  React.useEffect(() => {\n    if (validatedToken && futureTransaction?.success! === true) {\n      setShowAlert(true);\n      dispatch(getFutureTransactions());\n    }\n  }, [futureTransaction]);\n\n  const dateFilter = !(\n    displayFutureFilters?.initialDate && displayFutureFilters?.finalDate\n  )\n    ? `Próximos 30 dias`\n    : `de ${convertDate(displayFutureFilters?.initialDate)}\n     à ${convertDate(displayFutureFilters?.finalDate)}`;\n\n  const isEmptyList = () => {\n    return !displayPaymentsList?.length!;\n  };\n\n  const onBackButtonClick = () => dispatch(updateTransactions());\n\n  return (\n    <PageContainer>\n      <ProcessPageLayout\n        appBar={\n          <AppBar\n            homeRoute={AccountRoutes.home}\n            action={\n              <Button\n                palette=\"secondary\"\n                size=\"small\"\n                startIcon={<Close color=\"primary\" />}\n                onClick={onCancelButtonClick}\n                data-test-id=\"cancel-button\"\n              >\n                {cancelLabel}\n              </Button>\n            }\n          />\n        }\n        header={\n          <React.Fragment>\n            <ProcessDescriptionHeader title=\"Agendamentos\" />\n            <SearchFilter />\n            <Box\n              className={styles.filterContainer}\n              data-test-id=\"schedule-transactions-list\"\n            >\n              <Box className={styles.filterDates}>{dateFilter}</Box>\n              <Box>\n                <Divider spacing={1} className={styles.divider} />\n              </Box>\n              <Box className={styles.buttonFilter}>\n                <ButtonWithFloatingIcon\n                  icon={<Icon name={\"buttonBg\"} />}\n                  onClick={onMoreFiltersButtonClick}\n                  data-test-id=\"more-filters-button\"\n                >\n                  Escolher data\n                </ButtonWithFloatingIcon>\n              </Box>\n            </Box>\n          </React.Fragment>\n        }\n        main={\n          <React.Fragment>\n            <Box className={styles.containerTransaction}>\n              {isEmptyList() ? (\n                <EmptyList />\n              ) : (\n                displayPaymentsList?.map((list) => (\n                  <TransactionList\n                    key={list.DocumentNumber}\n                    value={list.principalValue}\n                    typePayment={list.typeDescription}\n                    name={list.name}\n                    paymentDate={list.paymentDate}\n                    status={list.status}\n                    onClick={() => onActiveButtonState(list)}\n                  />\n                ))\n              )}\n            </Box>\n            <Box>\n              <PopUpCancelScheduledPayment\n                open={openCardPopup}\n                onClose={onCardPopupClose}\n              />\n              <AuthorizationSheet\n                description=\"Para autenticar a operação\"\n                open={openAuthorizationSheet}\n                onClose={onAuthorizationSheetClose}\n              />\n\n              <AlertConcluded\n                open={onShowAlert}\n                onClose={onAlertClose}\n                onClick={onAlertClose}\n                title={\"Concluido\"}\n              />\n            </Box>\n          </React.Fragment>\n        }\n        footer={\n          <ProcessPageFooter\n            onBackButtonClick={onBackButtonClick}\n            data-test-id=\"back-button\"\n          />\n        }\n        footerPosition=\"fixed\"\n      />\n      <Loader open={loading} />\n      {errorMessage && (\n        <Alert\n          title=\"Erro\"\n          message={errorMessage}\n          severity=\"error\"\n          onClose={onAlertClose}\n        />\n      )}\n    </PageContainer>\n  );\n};\n","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/schedulePayments/pages/SheduleTransactionsFilter/SheduleTransactionsFilter.tsx",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/card/redux/actionTypes.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/authentication/redux/models/user.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/topUp/pages/TopUpNumber/TopUpNumber.tsx",["4821","4822","4823","4824","4825"],"import React, { useState, useEffect } from \"react\";\nimport { ProcessPageLayout } from \"components/ProcessPageLayout\";\nimport { AppBar } from \"components/AppBar\";\nimport { AccountRoutes } from \"features/account/constants/routes\";\nimport { ProcessDescriptionHeader } from \"components/ProcessDescriptionHeader\";\nimport { InputNumber } from \"features/topUp/components/InputNumber\";\nimport { nextLabel } from \"constants/buttons/labels\";\nimport { ProcessPageFooter } from \"components/ProcessPageFooter\";\nimport { KeyboardArrowLeft, KeyboardArrowRight } from \"@material-ui/icons\";\nimport { Button } from \"components/Button\";\nimport { useHistory } from \"react-router-dom\";\nimport { TopUpRoutes } from \"features/topUp/constants/routes\";\nimport { Box } from \"@material-ui/core\";\nimport { useStyle } from \"./TopUpNumber.style\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { StoreState } from \"redux/state\";\nimport { SuccessTopUpState } from \"features/topUp/redux/state\";\nimport {\n  closeAlert,\n  getTopUpProductListByPhoneNumber,\n  updateTopUpData,\n} from \"features/topUp/redux/actions\";\nimport { Loader } from \"components/Loader\";\nimport { Alert } from \"components/Alert\";\nimport { PageContainer } from \"components/PageContainer\";\nimport { ErrorMessage } from \"components/ErrorMessage\";\n\nexport const TopUpNumber: React.FC = () => {\n  const numberPhone = useSelector(\n    (state: StoreState) => state.topUp.topUp?.phoneNumber\n  );\n\n  const topUp = useSelector((state: StoreState) => state.topUp);\n  const [submitted, setSubmitted] = React.useState(false);\n  const onBack = () => {\n    history.push(TopUpRoutes.topUp);\n  };\n  const dispatch = useDispatch();\n  const style = useStyle();\n  const history = useHistory();\n  const [phoneNumber, setPhoneNumber] = useState(\"\");\n  const [confirmPhoneNumber, setConfirmPhoneNumber] = useState(\"\");\n  const [isValid, setIsValid] = useState(false);\n  const [favoriteInput, setFavoriteInput] = React.useState(false);\n  const [displayState, setDisplayState] = React.useState(\"none\");\n  const isValueNumber = numberPhone;\n  const { loading, errorMessage } = topUp;\n\n  React.useEffect(() => {\n    dispatch(updateTopUpData());\n  }, []);\n\n  React.useEffect(() => {\n    if (submitted && topUp instanceof SuccessTopUpState) {\n      history.push(TopUpRoutes.checkDataTopUp);\n\n      dispatch(\n        updateTopUpData({\n          phoneNumber: phoneNumber,\n        })\n      );\n    }\n  }, [submitted, dispatch, history, topUp]);\n\n  React.useEffect(() => {\n    phoneNumber.length === 16 &&\n    confirmPhoneNumber.length === 16 &&\n    phoneNumber === confirmPhoneNumber\n      ? setIsValid(true)\n      : setIsValid(false);\n  }, [phoneNumber, confirmPhoneNumber]);\n\n  const number = !phoneNumber ? isValueNumber : phoneNumber;\n\n  const onSubmit = (event: React.FormEvent) => {\n    event.preventDefault();\n    if (number === confirmPhoneNumber) {\n      dispatch(getTopUpProductListByPhoneNumber(phoneNumber));\n      setSubmitted(true);\n    }\n  };\n\n  const onAlertClose = () => {\n    dispatch(closeAlert());\n  };\n\n  const onFavoriteSwitch = () => {\n    setFavoriteInput(!favoriteInput);\n    !favoriteInput ? setDisplayState(\"block\") : setDisplayState(\"none\");\n  };\n\n  return (\n    <PageContainer>\n      <ProcessPageLayout\n        appBar={<AppBar homeRoute={AccountRoutes.home} />}\n        header={\n          <ProcessDescriptionHeader\n            title=\"Recargas\"\n            subtitle=\"Celular pré-pago\"\n            description=\"Novo número\"\n          />\n        }\n        main={\n          <Box className={style.mainContent}>\n            <Box className={style.inputNumberContent}>\n              <InputNumber\n                description=\"Celular com DDD\"\n                placeholder=\"(   )    -\"\n                setValuePhone={setPhoneNumber}\n                valueNumberPhone={isValueNumber}\n              />\n            </Box>\n            <Box>\n              <InputNumber\n                description=\"Confirme o celular com DDD\"\n                placeholder=\"(   )    -\"\n                setValuePhone={setConfirmPhoneNumber}\n              />\n            </Box>\n\n            <Box className={style.validator}>\n              {number !== confirmPhoneNumber && (\n                <ErrorMessage message={\"Os números não correspondem!\"} />\n              )}\n            </Box>\n\n            {/* <Box className={style.switchContent}>\n              <Typography className={style.labelStyle}>\n                <label>Adicionar aos favoritos</label>\n              </Typography>\n              <SwitchIOS onClick={onFavoriteSwitch} checked={favoriteInput} />\n            </Box>\n            <InputText\n              description=\"Apelido para o número (opcional)\"\n              placeholder=\"Celular do escritório\"\n              isVisible={displayState}\n            /> */}\n          </Box>\n        }\n        footer={\n          <ProcessPageFooter\n            primaryButton={\n              <Button\n                endIcon={<KeyboardArrowRight color=\"secondary\" />}\n                disabled={!isValid}\n                onClick={onSubmit}\n                data-test-id=\"submit-button\"\n              >\n                {nextLabel}\n              </Button>\n            }\n            secondaryButton={\n              <Button\n                palette=\"secondary\"\n                startIcon={<KeyboardArrowLeft color=\"secondary\" />}\n                onClick={onBack}\n              >\n                Voltar\n              </Button>\n            }\n          />\n        }\n      />\n\n      {errorMessage && (\n        <Alert\n          title=\"Erro\"\n          message={errorMessage}\n          severity={\"error\"}\n          onClose={onAlertClose}\n        />\n      )}\n      <Loader open={loading} />\n    </PageContainer>\n  );\n};\n","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/topUp/pages/TopUp/TopUp.tsx",["4826","4827"],"import React, { useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { KeyboardArrowLeft, KeyboardArrowRight } from \"@material-ui/icons\";\nimport { Box, Typography } from \"@material-ui/core\";\nimport { AppBar } from \"components/AppBar\";\nimport { PageContainer } from \"components/PageContainer\";\nimport { ProcessDescriptionHeader } from \"components/ProcessDescriptionHeader\";\nimport { ProcessPageLayout } from \"components/ProcessPageLayout\";\nimport { ProcessPageFooter } from \"components/ProcessPageFooter\";\nimport { ButtonWithFloatingIcon } from \"components/ButtonWithFloatingIcon\";\nimport { Button } from \"components/Button\";\nimport { nextLabel } from \"constants/buttons/labels\";\nimport { AccountRoutes } from \"features/account/constants/routes\";\nimport { CardPhone } from \"features/topUp/components/CardPhone\";\nimport { InputNumber } from \"features/topUp/components/InputNumber\";\nimport { useStyles } from \"./TopUp.style\";\nimport { TopUpRoutes } from \"features/topUp/constants/routes\";\nimport {\n  closeAlert,\n  getTopUpPeriodic,\n  getTopUpProductListByPhoneNumber,\n  updateTopUpData,\n} from \"features/topUp/redux/actions\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { StoreState } from \"redux/state\";\nimport { maskPhone } from \"_utils/masks/phone\";\nimport { SuccessTopUpState } from \"features/topUp/redux/state\";\nimport { Alert } from \"components/Alert\";\nimport { Icon } from \"components/Icon\";\nimport { Loader } from \"components/Loader\";\nexport const TopUp: React.FC = () => {\n  const [phoneNumber, setPhoneNumber] = useState(\"\");\n  const history = useHistory();\n  const styles = useStyles();\n  const dispatch = useDispatch();\n  const userState = useSelector((store: StoreState) => store.auth);\n  const { user } = userState;\n  const topUpState = useSelector((state: StoreState) => state.topUp);\n  const { loading, errorMessage } = topUpState;\n  const [submitted, setSubmitted] = React.useState(false);\n\n  React.useEffect(() => {\n    dispatch(getTopUpPeriodic());\n  }, []);\n\n  React.useEffect(() => {\n    if (submitted && topUpState instanceof SuccessTopUpState) {\n      dispatch(\n        updateTopUpData({\n          phoneNumber: maskPhone(user?.phoneNumber!),\n        })\n      );\n      history.push(TopUpRoutes.checkDataTopUp);\n    }\n  }, [submitted, history, topUpState]);\n\n  const onCardPhoneClick = () => {\n    dispatch(getTopUpProductListByPhoneNumber(maskPhone(user?.phoneNumber!)));\n    if (topUpState instanceof SuccessTopUpState) {\n      setSubmitted(true);\n    }\n  };\n\n  const onClickPeriodic = () => {\n    if (topUpState instanceof SuccessTopUpState)\n      history.push(TopUpRoutes.cancelPeriodicTopUp);\n  };\n  const onAlertClose = () => {\n    dispatch(closeAlert());\n  };\n\n  const onNextButtonClick = () => {\n    history.push(TopUpRoutes.topUpNumber);\n    dispatch(\n      updateTopUpData({\n        phoneNumber: phoneNumber,\n      })\n    );\n  };\n\n  const onBack = () => {\n    history.push(AccountRoutes.home);\n  };\n\n  return (\n    <PageContainer>\n      <ProcessPageLayout\n        appBar={<AppBar homeRoute={AccountRoutes.home} />}\n        header={\n          <Box className={styles.ContainerHeader}>\n            <ProcessDescriptionHeader\n              title=\"Recargas\"\n              subtitle=\"Celular pré-pago\"\n            />\n          </Box>\n        }\n        main={\n          <Box className={styles.Main}>\n            <Box className={styles.ContainerCard}>\n              <CardPhone\n                title={\"Meu celular\"}\n                description={\"Cadastrado no seu perfil\"}\n                phoneNumber={maskPhone(user?.phoneNumber! ?? \"\")}\n                data-test-id=\"phone-number\"\n                icon={\n                  <Icon\n                    name={\"phone\"}\n                    className={styles.CardPhoneIconDimension}\n                  />\n                }\n                type=\"standard\"\n                onClick={onCardPhoneClick}\n              />\n            </Box>\n            <Box className={styles.AnotherPhoneNumber}>\n              <Typography className={styles.AnotherPhone}>\n                Quer recarregar outro celular?\n              </Typography>\n              <InputNumber\n                description={\"Celular com DDD\"}\n                setValuePhone={setPhoneNumber}\n              ></InputNumber>\n              {/* <Box className={styles.FloatingIcons}>\n                <ButtonWithFloatingIcon\n                  icon={FavoriteIcon}\n                  onClick={}\n                  data-test-id=\"favorite-button\"\n                >\n                  Favoritos\n                </ButtonWithFloatingIcon>\n                <ButtonWithFloatingIcon\n                  icon={ContactIcon}\n                  onClick={}\n                  data-test-id=\"contact-button\"\n                >\n                  Contatos\n                </ButtonWithFloatingIcon>\n               \n               */}\n              <Box className={styles.periodicTopUpButton}>\n                <ButtonWithFloatingIcon\n                  data-test-id=\"periodic-TopUp\"\n                  onClick={onClickPeriodic}\n                >\n                  Buscar\n                </ButtonWithFloatingIcon>\n              </Box>\n            </Box>\n          </Box>\n        }\n        footer={\n          <ProcessPageFooter\n            primaryButton={\n              <Button\n                palette=\"primary\"\n                endIcon={<KeyboardArrowRight color=\"secondary\" />}\n                disabled={phoneNumber.length !== 16}\n                onClick={onNextButtonClick}\n                data-test-id=\"next-button\"\n              >\n                {nextLabel}\n              </Button>\n            }\n            secondaryButton={\n              <Button\n                palette=\"secondary\"\n                startIcon={<KeyboardArrowLeft color=\"secondary\" />}\n                onClick={onBack}\n              >\n                Voltar\n              </Button>\n            }\n          />\n        }\n      ></ProcessPageLayout>\n\n      {errorMessage && (\n        <Alert\n          title=\"Erro\"\n          message={errorMessage}\n          severity={\"error\"}\n          onClose={onAlertClose}\n        />\n      )}\n      <Loader open={loading} />\n    </PageContainer>\n  );\n};\n","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/topUp/pages/TopUpSchedule/TopUpSchedule.tsx",["4828","4829","4830"],"import React, { useEffect } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { Box } from \"@material-ui/core\";\nimport { KeyboardArrowRight } from \"@material-ui/icons\";\nimport { PageContainer } from \"components/PageContainer\";\nimport { ProcessPageLayout } from \"components/ProcessPageLayout\";\nimport { AppBar } from \"components/AppBar\";\nimport { ProcessPageFooter } from \"components/ProcessPageFooter\";\nimport { ProcessDescriptionHeader } from \"components/ProcessDescriptionHeader\";\nimport { Button } from \"components/Button\";\nimport { ContentBalance } from \"features/topUp/components/ContentBalance\";\nimport { TopUpRoutes } from \"features/topUp/constants/routes\";\nimport { AccountRoutes } from \"features/account/constants/routes\";\nimport { useStyle } from \"./TopUpSchedule.style\";\nimport { useSelector } from \"react-redux\";\nimport { StoreState } from \"redux/state\";\nimport { nextLabel } from \"constants/buttons/labels\";\nimport { useDispatch } from \"react-redux\";\nimport { Icon } from \"components/Icon\";\nimport { updateTopUpData } from \"features/topUp/redux/actions\";\nimport { SchedulingButton } from \"components/SchedulingButton\";\nimport { FailTopUpState } from \"features/topUp/redux/state\";\nimport { TextField } from \"components/TextField\";\nimport { CurrencyFormatter, ShortDateFormatter } from \"_translate\";\nimport { compareTransferDates } from \"features/transference/_utils\";\n\nexport const TopUpSchedule: React.FC = () => {\n  const { topUp, scheduleTopUp } = useSelector(\n    (state: StoreState) => state.topUp\n  );\n  const balance: number = useSelector(\n    (store: StoreState) => store.account.dashboard?.balance!\n  );\n  const [visibilityRepeatDays, setVisibilityRepeatDays] =\n    React.useState(\"none\");\n  const [isSwitchChecked, setIsSwitchChecked] = React.useState(scheduleTopUp);\n  const [openDatePicker, setOpenDatePicker] = React.useState(false);\n  const [minDate] = React.useState<Date>(new Date());\n  const fail = topUp instanceof FailTopUpState;\n  const errorBalance = balance! < topUp?.topUpProduct?.productValue!;\n  const [displayDate, setDisplayDate] = React.useState(\"\");\n  const [topUpDate, setTopUpDate] = React.useState<Date | null>(\n    new Date(Date.now())\n  );\n\n  React.useEffect(() => {\n    setDisplayDate(_getDisplayDate());\n  }, [topUpDate]);\n\n  const _getDisplayDate = () => {\n    const today = \"Hoje\";\n    if (!topUpDate) return today;\n    else if (compareTransferDates(topUpDate, new Date()) === 0) return today;\n    else return ShortDateFormatter.format(topUpDate);\n  };\n\n  const onSchedulingButtonClick = () => {\n    setOpenDatePicker(true);\n  };\n\n  const onDatePickerClose = () => {\n    setOpenDatePicker(false);\n  };\n\n  const onStartDateChange = (date: Date | null) => {\n    if (date) {\n      setTopUpDate(date);\n      dispatch(updateTopUpData({ topUpDate: date }));\n    }\n  };\n\n  useEffect(() => {\n    isSwitchChecked\n      ? setVisibilityRepeatDays(\"block\")\n      : setVisibilityRepeatDays(\"none\");\n  }, [isSwitchChecked]);\n\n  const styles = useStyle({ visibilityRepeatDays });\n  const history = useHistory();\n  const dispatch = useDispatch();\n\n  const userCellNumber = topUp?.phoneNumber;\n  const creditValue = topUp?.topUpProduct?.productValue.toFixed(2);\n\n  const onNextButtonClick = () => {\n    isSwitchChecked\n      ? history.push(TopUpRoutes.periodicRepetition)\n      : history.push(TopUpRoutes.completeTopUp);\n\n    dispatch(\n      updateTopUpData({\n        topUpDate: topUpDate!,\n        isRecurrent: isSwitchChecked,\n      })\n    );\n  };\n\n  const handleSwitchInput = () => {\n    if (scheduleTopUp) {\n      setIsSwitchChecked(false);\n    } else {\n      setIsSwitchChecked(!isSwitchChecked);\n    }\n  };\n\n  return (\n    <React.Fragment>\n      <PageContainer>\n        <ProcessPageLayout\n          appBar={<AppBar homeRoute={AccountRoutes.home} />}\n          header={\n            <Box className={styles.headerStyle}>\n              <ProcessDescriptionHeader\n                title={\"Recargas\"}\n                subtitle={\"Celular pré-pago\"}\n                description={`Recarregar meu número ${userCellNumber}`}\n              />\n            </Box>\n          }\n          main={\n            <React.Fragment>\n              <Box\n                className={styles.contentBalanceContainerReference}\n                data-test-id=\"content-balance\"\n              >\n                <Box className=\"contentBalanceContainer\">\n                  <ContentBalance balance={CurrencyFormatter.format(balance)} />\n                </Box>\n              </Box>\n              <Box\n                className={styles.creditRequestContainer}\n                data-test-id=\"credit-request\"\n              >\n                {/*  <Icon name={'timIcon'} /> */}\n                <Box className=\"wrapper\">\n                  <p>R$ {creditValue}</p>\n                  <span>Válido por 30 dias</span>\n                </Box>\n              </Box>\n              <Box\n                className={styles.dateInputContainer}\n                data-test-id=\"date-input\"\n              >\n                <TextField\n                  data-test-id=\"display-date\"\n                  label=\"Quando?\"\n                  placeholder=\"Hoje\"\n                  value={displayDate}\n                />\n              </Box>\n              <Box className={styles.scheduleButtonContainer}>\n                <SchedulingButton\n                  data-test-id=\"schedule-button\"\n                  open={openDatePicker}\n                  value={topUpDate}\n                  minDate={minDate}\n                  onClick={onSchedulingButtonClick}\n                  onDateSelection={onStartDateChange}\n                  onClose={onDatePickerClose}\n                  disabled={fail || errorBalance}\n                />\n              </Box>\n              {/* <Box className={styles.switchContainer}>\n                <span className=\"switchContainerLabel\" data-test-id=\"switch\">\n                  Repetir essa recarga\n                </span>\n                <SwitchIOS\n                  onClick={handleSwitchInput}\n                  checked={isSwitchChecked}\n                />\n              </Box> */}\n            </React.Fragment>\n          }\n          footer={\n            <Box>\n              <ProcessPageFooter\n                primaryButton={\n                  <Button\n                    data-test-id=\"next-button\"\n                    onClick={onNextButtonClick}\n                    endIcon={<KeyboardArrowRight color=\"secondary\" />}\n                  >\n                    {nextLabel}\n                  </Button>\n                }\n              />\n            </Box>\n          }\n        />\n      </PageContainer>\n    </React.Fragment>\n  );\n};\n","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/topUp/pages/PeriodicRepetition/PeriodicRepetition.tsx",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/topUp/pages/TopUpValue/TopUpValue.tsx",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/card/pages/RequestDuplicate/AddressConfirmation/index.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/card/pages/RequestDuplicate/ReplacementDetails/index.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/card/pages/RequestDuplicate/BlockCardAlert/index.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/card/pages/RequestDuplicate/UpdateAddress/index.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/account/pages/Help/Help.controller.tsx",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/taxPayment/pages/taxPaymentHome/TaxPaymentHome.tsx",["4831"],"import React from \"react\";\nimport { Box } from \"@material-ui/core\";\nimport { AccountRoutes } from \"features/account/constants/routes\";\nimport { PageContainer } from \"components/PageContainer\";\nimport { ProcessPageLayout } from \"components/ProcessPageLayout\";\nimport { ProcessPageFooter } from \"components/ProcessPageFooter\";\nimport { AppBar } from \"components/AppBar\";\nimport { Button } from \"components/Button\";\nimport { Close } from \"@material-ui/icons\";\nimport { useHistory } from \"react-router-dom\";\nimport { cancelLabel } from \"constants/buttons/labels\";\nimport { ProcessDescriptionHeader } from \"components/ProcessDescriptionHeader\";\nimport { SelectionCard } from \"components/SelectionCard\";\nimport { useStyles } from \"./TaxPaymentHome.style\";\nimport { TaxPaymentRoutes } from \"features/taxPayment/constants/routes\";\nimport { useDispatch } from \"react-redux\";\nimport {\n  updateDarjPaymentData,\n  updateFgtsPaymentData,\n  updateGarePaymentData,\n} from \"features/taxPayment/redux/actions\";\n\nexport const TaxPaymentHome: React.FC = () => {\n  const history = useHistory();\n  const styles = useStyles();\n  const dispatch = useDispatch();\n\n  const onCancelButtonClick = () => {\n    dispatch(updateGarePaymentData());\n    history.replace(AccountRoutes.home);\n  };\n  const onGareClick = () => {\n    history.push(TaxPaymentRoutes.paymentGare);\n  };\n  const onFgtsClick = () => {\n    history.push(TaxPaymentRoutes.paymentFgts);\n  };\n  const onDarjClick = () => {\n    history.push(TaxPaymentRoutes.paymentDarj);\n  };\n\n  React.useEffect(() => {\n    dispatch(updateGarePaymentData());\n    dispatch(updateFgtsPaymentData());\n    dispatch(updateDarjPaymentData());\n  }, []);\n\n  return (\n    <PageContainer>\n      <ProcessPageLayout\n        appBar={\n          <AppBar\n            homeRoute={AccountRoutes.home}\n            action={\n              <Button\n                palette=\"secondary\"\n                size=\"small\"\n                startIcon={<Close color=\"primary\" />}\n                onClick={onCancelButtonClick}\n                data-test-id=\"cancel-button\"\n              >\n                {cancelLabel}\n              </Button>\n            }\n          />\n        }\n        header={\n          <ProcessDescriptionHeader\n            title=\"Pagamentos de Impostos\"\n            subtitle=\"\"\n            description=\"Pode ser para uma conta bancária ou por mensagem de texto no celular, mesmo que o beneficiário não tenha conta bancária\"\n          />\n        }\n        main={\n          <Box className={styles.content}>\n            <SelectionCard\n              title=\"FGTS\"\n              subtitle=\"Fundo de Garantia do Tempo de Serviço\"\n              onClick={onFgtsClick}\n              data-test-id=\"fgts-button\"\n            />\n            <SelectionCard\n              title=\"GARE\"\n              subtitle=\"Guia de Arrecadação de Receitas Estaduais\"\n              onClick={onGareClick}\n              data-test-id=\"gare-button\"\n            />\n\n            <SelectionCard\n              title=\"DARJ\"\n              subtitle=\"Documento de Arrecadação do Rio de Janeiro\"\n              onClick={onDarjClick}\n              data-test-id=\"darj-button\"\n            />\n          </Box>\n        }\n        footer={<ProcessPageFooter />}\n      />\n    </PageContainer>\n  );\n};\n","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/card/redux/models/Enum.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/card/pages/ActivateCard/ActivateCard/ActivateCard.tsx",["4832","4833"],"import React from \"react\";\nimport { ProcessDescriptionHeader } from \"components/ProcessDescriptionHeader\";\nimport { ProcessPageLayout } from \"components/ProcessPageLayout\";\nimport { ProcessPageFooter } from \"components/ProcessPageFooter\";\nimport { Button } from \"components/Button\";\nimport { AppBar } from \"components/AppBar\";\nimport { Close } from \"@material-ui/icons\";\nimport { KeyboardArrowRight } from \"@material-ui/icons\";\nimport { useHistory } from \"react-router-dom\";\nimport { cancelLabel } from \"constants/buttons/labels\";\nimport { nextLabel } from \"constants/buttons/labels\";\nimport { CardRoutes } from \"features/card/constants/routes\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { PageContainer } from \"components/PageContainer\";\nimport { useStyles } from \"./ActivateCard.style\";\nimport { Box } from \"@material-ui/core\";\nimport { CardData } from \"features/card/components/CardData\";\nimport { AccountRoutes } from \"features/account/constants/routes\";\nimport { activateCard, updateCard } from \"features/card/redux/actions\";\nimport { StoreState } from \"redux/state\";\nimport { SuccessCardState } from \"features/card/redux/state\";\nimport { AuthorizationSheet } from \"components/AuthorizationSheet\";\nimport { Loader } from \"components/Loader\";\nimport { Alert } from \"components/Alert\";\nimport { Icon } from \"components/Icon\";\n\nexport const ActivateCard: React.FC = () => {\n  const [openAuthorizationSheet, setOpenAuthorizationSheet] =\n    React.useState(false);\n  const styles = useStyles();\n  const [sentRequest, setSentRequest] = React.useState(false);\n  const history = useHistory();\n  const dispatch = useDispatch();\n\n  const cardState = useSelector((state: StoreState) => state.card);\n\n  const { card, loading, errorMessage } = cardState;\n\n  React.useEffect(() => {\n    dispatch(updateCard(cardState.card));\n  }, []);\n\n  React.useEffect(() => {\n    if (sentRequest && cardState instanceof SuccessCardState)\n      history.push(CardRoutes.confirmationActivate);\n  }, [cardState]);\n\n  const onAuthorizationClose = (tokenIsValid: boolean) => {\n    if (tokenIsValid) {\n      dispatch(activateCard());\n      setSentRequest(true);\n    }\n    setOpenAuthorizationSheet(false);\n  };\n\n  const onCancelButtonClick = () => {\n    history.replace(AccountRoutes.home);\n    dispatch(updateCard());\n  };\n\n  const onNextButtonClick = () => {\n    setOpenAuthorizationSheet(true);\n  };\n\n  const imageFlagCard = (flag: string) => {\n    switch (flag) {\n      case \"ELO\":\n        return <Icon name=\"eloImage\" />;\n\n      case \"VISA\":\n        return <Icon name=\"visaImage\" />;\n\n      case \"MasterCard\":\n        return <Icon name=\"visaImage\" />;\n    }\n  };\n\n  return (\n    <PageContainer>\n      <ProcessPageLayout\n        appBar={\n          <AppBar\n            homeRoute={AccountRoutes.home}\n            action={\n              <Button\n                palette=\"secondary\"\n                size=\"small\"\n                startIcon={<Close color=\"primary\" />}\n                onClick={onCancelButtonClick}\n                data-test-id=\"cancel-button\"\n              >\n                {cancelLabel}\n              </Button>\n            }\n          />\n        }\n        header={\n          <Box\n            className={styles.boxHeader}\n            data-test-id=\"activate-card-description\"\n          >\n            <ProcessDescriptionHeader\n              title=\"Ativar Novo Cartão\"\n              subtitle=\"Confira os dados do seu novo cartão\"\n            />\n          </Box>\n        }\n        main={\n          <Box className=\"boxMain\" data-test-id=\"box-card-user\">\n            <Box className={styles.boxCardUser}>\n              <CardData\n                fullName={card!.fullName}\n                panLastDigits={card!.panLastDigits}\n                flagCard={imageFlagCard(\"ELO\")}\n              />\n            </Box>\n          </Box>\n        }\n        footer={\n          <ProcessPageFooter\n            primaryButton={\n              <Button\n                palette=\"primary\"\n                endIcon={<KeyboardArrowRight color=\"secondary\" />}\n                onClick={onNextButtonClick}\n                data-test-id=\"next-button\"\n              >\n                {nextLabel}\n              </Button>\n            }\n          />\n        }\n      />\n      <AuthorizationSheet\n        open={openAuthorizationSheet}\n        onClose={onAuthorizationClose}\n      />\n      <Loader open={loading} />\n      {errorMessage && (\n        <Alert title=\"Error\" message={errorMessage} severity=\"error\" />\n      )}\n    </PageContainer>\n  );\n};\n","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/card/pages/ActivateCard/PasswordCard/PasswordCard.tsx",["4834","4835","4836"],"import { PageContainer } from \"components/PageContainer\";\nimport { ProcessPageLayout } from \"components/ProcessPageLayout\";\nimport React from \"react\";\nimport { useStyles } from \"./PasswordCard.style\";\nimport { AppBar } from \"components/AppBar\";\nimport { ProcessPageFooter } from \"components/ProcessPageFooter\";\nimport { Button } from \"components/Button\";\nimport { Close, KeyboardArrowRight } from \"@material-ui/icons\";\nimport { cancelLabel, nextLabel } from \"constants/buttons/labels\";\nimport { ProcessDescriptionHeader } from \"components/ProcessDescriptionHeader\";\nimport { PasswordInput } from \"features/card/components/Inputs/PasswordInput\";\nimport { useHistory } from \"react-router-dom\";\nimport { CardRoutes } from \"features/card/constants/routes\";\nimport { AccountRoutes } from \"features/account/constants/routes\";\nimport { Box } from \"@material-ui/core\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { StoreState } from \"redux/state\";\nimport { Card } from \"features/card/redux/models/card\";\nimport { updateCard } from \"features/card/redux/actions\";\n\nexport const PasswordCard: React.FC = () => {\n  const [card, loading, errorMessage] = useSelector<\n    StoreState,\n    [Card | undefined, boolean, string | undefined]\n  >((state) => [state.card.card, state.card.loading, state.card.errorMessage]);\n  const history = useHistory();\n  const styles = useStyles();\n  const dispatch = useDispatch();\n  const [pin, setPasswordInput] = React.useState(\"\");\n  const [displayCards, setDisplayCards] = React.useState(card);\n  const [disableNextButton, setDisableNextButton] = React.useState(false);\n\n  const onSubmit = (event: React.FormEvent) => {\n    event.preventDefault();\n    dispatch(updateCard({ ...card!, pin: pin }));\n    history.push(CardRoutes.confirmPasswordCard);\n  };\n\n  const lastCardDigits = (lastDigits: number) => {\n    if (lastDigits === null) return `Cartão final`;\n    else return `Cartão final ${displayCards?.panLastDigits}`;\n  };\n\n  React.useEffect(() => {\n    setDisableNextButton(pin.length !== 4);\n  }, [pin.length]);\n\n  const onCancelButton = () => {\n    history.push(AccountRoutes.home);\n    dispatch(updateCard());\n  };\n\n  return (\n    <PageContainer>\n      <ProcessPageLayout\n        appBar={\n          <AppBar\n            homeRoute={AccountRoutes.home}\n            action={\n              <Button\n                palette=\"secondary\"\n                size=\"small\"\n                startIcon={<Close color=\"primary\" />}\n                onClick={onCancelButton}\n                data-test-id=\"cancel-button\"\n              >\n                {cancelLabel}\n              </Button>\n            }\n          />\n        }\n        header={\n          <Box className={styles.header}>\n            <ProcessDescriptionHeader\n              title={\"Criar senha do Cartão\"}\n              subtitle={lastCardDigits(displayCards!.panLastDigits)}\n              description={\"Agora escolha uma senha numérica de 4 dígitos\"}\n            />\n          </Box>\n        }\n        main={\n          <Box onSubmit={onSubmit} className={styles.main}>\n            <PasswordInput\n              label={\"Nova senha do cartão\"}\n              value={pin}\n              onChange={setPasswordInput}\n              data-test-id=\"password-button\"\n            />\n          </Box>\n        }\n        footer={\n          <ProcessPageFooter\n            primaryButton={\n              <Button\n                palette=\"primary\"\n                onClick={onSubmit}\n                endIcon={<KeyboardArrowRight color=\"secondary\" />}\n                disabled={disableNextButton}\n                data-test-id=\"next-button\"\n              >\n                {nextLabel}\n              </Button>\n            }\n          />\n        }\n      />\n    </PageContainer>\n  );\n};\n","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/card/pages/ActivateCard/ActivateCardConclude/ActivateCardConclude.tsx",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/components/SearchField/SearchField.tsx",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/card/pages/ActivateCard/ConfirmationActivate/ConfirmationActivate.tsx",["4837","4838"],"import React from \"react\";\nimport { useStyles } from \"./ConfirmationActivate.style\";\nimport { PageContainer } from \"components/PageContainer\";\nimport { useHistory } from \"react-router-dom\";\nimport { AddBoxOutlined, KeyboardArrowRight } from \"@material-ui/icons\";\nimport { Button } from \"components/Button\";\nimport { ProcessPageLayout } from \"components/ProcessPageLayout\";\nimport { CardRoutes } from \"features/card/constants/routes\";\nimport { Typography, Box, Grid } from \"@material-ui/core\";\nimport { Icon } from \"components/Icon\";\n\nexport const ConfirmationActivate: React.FC = () => {\n  const styles = useStyles();\n  const history = useHistory();\n\n  const onNextButtonClick = () => {\n    history.push(CardRoutes.passwordCard);\n  };\n\n  return (\n    <PageContainer>\n      <ProcessPageLayout\n        main={\n          <Box data-test-id=\"confirmation-activate\">\n            <Box className={styles.cardImg}>\n              <Icon name=\"activateCard\" />\n            </Box>\n            <Box>\n              <Typography className={styles.title}>Cartão Ativado</Typography>\n            </Box>\n            <Box className={styles.boxDescription}>\n              <Box className={styles.description}>\n                Agora precisamos criar uma <strong> senha </strong> para seu\n                cartão\n              </Box>\n            </Box>\n          </Box>\n        }\n        footer={\n          <Box className={styles.buttonsWrapper}>\n            <Box className={styles.footer}>\n              <Button\n                onClick={onNextButtonClick}\n                endIcon={<KeyboardArrowRight color=\"secondary\" />}\n                data-test-id=\"next-button\"\n              >\n                Próximo\n              </Button>\n            </Box>\n          </Box>\n        }\n      />\n    </PageContainer>\n  );\n};\n","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/taxPayment/pages/Fgts/PaymentFgtsSummary/PaymentFgtsSummary.tsx",["4839"],"import React from \"react\";\nimport { Grid } from \"@material-ui/core\";\nimport { Close, KeyboardArrowRight } from \"@material-ui/icons\";\nimport { AppBar } from \"components/AppBar\";\nimport { AuthorizationSheet } from \"components/AuthorizationSheet\";\nimport { Button } from \"components/Button\";\nimport { PageContainer } from \"components/PageContainer\";\nimport { ProcessDescriptionHeader } from \"components/ProcessDescriptionHeader\";\nimport { ProcessPageFooter } from \"components/ProcessPageFooter\";\nimport { ProcessPageLayout } from \"components/ProcessPageLayout\";\nimport { cancelLabel, concludeLabel } from \"constants/buttons/labels\";\nimport { AccountRoutes } from \"features/account/constants/routes\";\nimport { DetailsFgtsDescription } from \"features/taxPayment/components/DetailsFgtsDescription\";\nimport { TaxPaymentRoutes } from \"features/taxPayment/constants/routes\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useHistory } from \"react-router-dom\";\nimport { StoreState } from \"redux/state\";\nimport {\n  createFgtsPayment,\n  updateFgtsPaymentData,\n} from \"features/taxPayment/redux/actions\";\nimport { Loader } from \"components/Loader\";\nimport { Alert } from \"components/Alert\";\nimport { SuccessTaxPaymentState } from \"features/taxPayment/redux/state\";\nimport { OperationType } from \"features/account/redux/models/operationType\";\n\nexport const PaymentFgtsSummary: React.FC = () => {\n  const [openAuthorizationSheet, setOpenAuthorizationSheet] =\n    React.useState(false);\n\n  const history = useHistory();\n  const fgts = useSelector((state: StoreState) => state.taxPayment.fgts);\n  const taxPayment = useSelector((state: StoreState) => state.taxPayment);\n  const dispatch = useDispatch();\n  const { loading, errorMessage } = taxPayment;\n\n  const onAuthorizationClose = (tokenIsValid: boolean) => {\n    if (tokenIsValid) {\n      dispatch(createFgtsPayment());\n    }\n    setOpenAuthorizationSheet(false);\n  };\n\n  const onConcludeButtonClick = () => {\n    setOpenAuthorizationSheet(true);\n  };\n\n  const onCancelButtonClick = () => {\n    history.replace(AccountRoutes.home);\n    dispatch(updateFgtsPaymentData());\n  };\n\n  React.useEffect(() => {\n    if (taxPayment instanceof SuccessTaxPaymentState) {\n      history.push({\n        pathname: TaxPaymentRoutes.paymentFgtsConclude,\n        state: OperationType.fgtsPayment,\n      });\n      dispatch(updateFgtsPaymentData());\n    }\n  }, [taxPayment]);\n\n  return (\n    <PageContainer>\n      <ProcessPageLayout\n        appBar={\n          <AppBar\n            homeRoute={AccountRoutes.home}\n            action={\n              <Button\n                palette=\"secondary\"\n                size=\"small\"\n                startIcon={<Close color=\"primary\" />}\n                onClick={onCancelButtonClick}\n                data-test-id=\"cancel-button\"\n              >\n                {cancelLabel}\n              </Button>\n            }\n          />\n        }\n        header={\n          <ProcessDescriptionHeader\n            title=\"Impostos - FGTS\"\n            subtitle=\"Hora de conferir\"\n            description=\"Confira, cuidadosamente, os dados do pagamento.\"\n          />\n        }\n        main={\n          <DetailsFgtsDescription\n            taxPayer={fgts?.contributorTaxId!}\n            paymentDate={fgts?.paymentDate!}\n            codeRevenue={fgts?.codeRevenue!}\n            principalValue={fgts?.principalValue!}\n            fgtsIdentifier={fgts?.fgtsIdentifier!}\n            socialConnectivityCode={fgts?.socialConnectivityCode!}\n            socialConnectivityDigit={fgts?.socialConnectivityDigit!}\n            description={fgts?.description!}\n            barCode={fgts?.barCode!}\n          />\n        }\n        footer={\n          <Grid>\n            <ProcessPageFooter\n              primaryButton={\n                <Button\n                  palette=\"primary\"\n                  endIcon={<KeyboardArrowRight color=\"secondary\" />}\n                  onClick={onConcludeButtonClick}\n                  data-test-id=\"conclude-button\"\n                >\n                  {concludeLabel}\n                </Button>\n              }\n            />\n          </Grid>\n        }\n      />\n      <AuthorizationSheet\n        open={openAuthorizationSheet}\n        onClose={onAuthorizationClose}\n      />\n      <Loader open={loading} />\n      {errorMessage && (\n        <Alert title=\"Error\" message={errorMessage} severity=\"error\" />\n      )}\n    </PageContainer>\n  );\n};\n","/home/danielvitor/Documentos/Develop/stonebank_front/src/components/ActionListItem/ActionListItem.tsx",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/pix/pages/ReceivePixTransfer/ReceivePixTransferQrCodeValue/components/HelpPixQrCode/HelpPixQrCode.style.ts",["4840"],"import { alpha, makeStyles } from \"@material-ui/core\";\nimport { colors } from \"_config/theme\";\n\nexport const useStyles = makeStyles({\n  drawer: {\n    \"& .MuiDrawer-paper\": {\n      background: \"transparent\",\n    },\n  },\n  content: {\n    padding: \"16px\",\n    marginTop: \"12px\",\n    minHeight: \"212px\",\n    position: \"relative\",\n    borderTopLeftRadius: \"16px\",\n    borderTopRightRadius: \"16px\",\n    color: colors.readOnly.light.white,\n    backgroundColor: colors.system.light.primary,\n  },\n  closeButton: {\n    top: \"-12px\",\n    right: \"16px\",\n    position: \"absolute\",\n  },\n  buttonsRow: {\n    marginBottom: \"24px\",\n  },\n  subtitle: {\n    opacity: \"0.9px\",\n    textAlign: \"center\",\n    fontSize: \"15px\",\n  },\n  title: {\n    textAlign: \"center\",\n    fontSize: \"18px\",\n  },\n});\n","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/pix/components/SelectionButton/SelectionButton.tsx",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/pix/pages/ReceivePixTransfer/ReceivePixTransferQrCode/components/SharePixQrCode/SharePixQrCode.style.ts",["4841","4842"],"import { alpha, makeStyles } from \"@material-ui/core\";\nimport { white } from \"colors\";\nimport { colors } from \"_config/theme\";\n\nexport const useStyles = makeStyles({\n  drawer: {\n    \"& .MuiDrawer-paper\": {\n      background: \"transparent\",\n    },\n  },\n  content: {\n    padding: \"16px\",\n    marginTop: \"12px\",\n    minHeight: \"212px\",\n    position: \"relative\",\n    borderTopLeftRadius: \"16px\",\n    borderTopRightRadius: \"16px\",\n    color: colors.readOnly.light.surface,\n    backgroundColor: colors.readOnly.light.white,\n  },\n  closeButton: {\n    top: \"-12px\",\n    right: \"16px\",\n    position: \"absolute\",\n  },\n  buttonsRow: {\n    marginBottom: \"24px\",\n  },\n  subtitle: {\n    opacity: \"0.9px\",\n    textAlign: \"center\",\n    fontSize: \"15px\",\n  },\n  title: {\n    textAlign: \"center\",\n    fontSize: \"18px\",\n    marginBottom: \"10px\",\n  },\n  receiverSection: {\n    \"& #receiver-info-card\": {\n      margin: \"0 -16px\",\n      marginTop: 1,\n      display: \"flex\",\n      alignItems: \"center\",\n      justifyContent: \"flex-start\",\n    },\n  },\n\n  muiInputBaseinput: {\n    paddingRight: \"8px\",\n    textAlign: \"right\",\n    marginRight: \"auto\",\n    marginTop: \"15px\",\n  },\n});\n","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/pix/pages/ReceivePixTransfer/ReceivePixTransferQrCode/components/PixKeySelection/PixKeySelection.style.ts",["4843","4844"],"import { alpha, makeStyles } from \"@material-ui/core\";\nimport { white } from \"colors\";\nimport { colors } from \"_config/theme\";\n\nexport const useStyles = makeStyles({\n  drawer: {\n    \"& .MuiDrawer-paper\": {\n      background: \"transparent\",\n    },\n  },\n  content: {\n    padding: \"16px\",\n    marginTop: \"12px\",\n    minHeight: \"212px\",\n    position: \"relative\",\n    borderTopLeftRadius: \"16px\",\n    borderTopRightRadius: \"16px\",\n    color: colors.readOnly.light.surface,\n    backgroundColor: colors.readOnly.light.white,\n  },\n  closeButton: {\n    top: \"-12px\",\n    right: \"16px\",\n    position: \"absolute\",\n  },\n  buttonsRow: {\n    marginBottom: \"24px\",\n  },\n  subtitle: {\n    opacity: \"0.9px\",\n    textAlign: \"center\",\n    fontSize: \"15px\",\n  },\n  title: {\n    textAlign: \"center\",\n    fontSize: \"18px\",\n    marginBottom: \"20px\",\n  },\n  receiverSection: {\n    \"& > *\": {\n      height: 56,\n      padding: \"6px 16px\",\n      justifyContent: \"flex-start\",\n\n      \"& #title\": {\n        lineHeight: \"10.4px\",\n\n        marginTop: \"10px\",\n      },\n\n      \"& #subtitle\": {\n        lineHeight: \"8px\",\n      },\n\n      \"& #start-icon-column\": {\n        width: \"24px\",\n\n        marginTop: \"-5px\",\n      },\n\n      \"& #start-icon\": {\n        height: \"14px\",\n        width: \"auto\",\n      },\n    },\n\n    \"& .displayNone\": {\n      display: \"none\",\n    },\n  },\n\n  muiInputBaseinput: {\n    paddingRight: \"8px\",\n    textAlign: \"right\",\n    marginRight: \"auto\",\n    marginTop: \"15px\",\n  },\n});\n","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/taxPayment/pages/Fgts/PaymentFgtsValues/PaymentFgtsValues.tsx",["4845"],"import { ProcessPageLayout } from \"components/ProcessPageLayout\";\nimport { AppBar } from \"components/AppBar\";\nimport { Button } from \"components/Button\";\nimport { Close, KeyboardArrowRight } from \"@material-ui/icons\";\nimport { cancelLabel, nextLabel } from \"constants/buttons/labels\";\nimport { AccountRoutes } from \"features/account/constants/routes\";\nimport { ProcessDescriptionHeader } from \"components/ProcessDescriptionHeader\";\nimport { PageContainer } from \"components/PageContainer\";\nimport { ProcessPageFooter } from \"components/ProcessPageFooter\";\nimport { Box, Grid } from \"@material-ui/core\";\nimport { TextField } from \"components/TextField\";\nimport { useHistory } from \"react-router-dom\";\nimport { TaxPaymentRoutes } from \"features/taxPayment/constants/routes\";\nimport { maskMoney } from \"_utils/masks/money\";\nimport { CurrencyFormatter, parseCurrency } from \"_translate\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { updateFgtsPaymentData } from \"features/taxPayment/redux/actions\";\nimport React from \"react\";\nimport { StoreState } from \"redux/state\";\nimport { ErrorMessage } from \"components/ErrorMessage\";\nimport { useValue } from \"hooks/useValue\";\n\nexport const PaymentFgtsValues: React.FC = () => {\n  const [principalValue, setPrincipalValue] = useValue(maskMoney);\n  const [isValidValue, setIsValidValue] = React.useState(false);\n  const history = useHistory();\n  const dispatch = useDispatch();\n  const [balanceIsInvalid, setBalanceIsInvalid] = React.useState<\n    boolean | undefined\n  >();\n\n  const { balance } = useSelector((store: StoreState) => ({\n    balance: store.account.dashboard!.balance,\n  }));\n\n  React.useEffect(() => {\n    const convertedValue = parseCurrency(\n      isNaN(parseCurrency(principalValue))\n        ? CurrencyFormatter.format(0)\n        : principalValue\n    );\n    setIsValidValue(convertedValue > 0);\n    setIsValidValue(convertedValue > 0 && convertedValue <= balance);\n    setBalanceIsInvalid(convertedValue > balance);\n  }, [principalValue]);\n\n  const onValueFgts = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setPrincipalValue(event.target.value);\n  };\n\n  const onNextButtonClick = () => {\n    dispatch(\n      updateFgtsPaymentData({\n        principalValue: parseFloat(parseCurrency(principalValue).toFixed(2)),\n      })\n    );\n    history.push(TaxPaymentRoutes.paymentFgtsDate);\n  };\n\n  const onCancelButtonClick = () => {\n    history.replace(AccountRoutes.home);\n    dispatch(updateFgtsPaymentData());\n  };\n\n  return (\n    <PageContainer>\n      <ProcessPageLayout\n        appBar={\n          <AppBar\n            homeRoute={AccountRoutes.home}\n            action={\n              <Button\n                palette=\"secondary\"\n                size=\"small\"\n                startIcon={<Close color=\"primary\" />}\n                onClick={onCancelButtonClick}\n                data-test-id=\"cancel-button\"\n              >\n                {cancelLabel}\n              </Button>\n            }\n          />\n        }\n        header={<ProcessDescriptionHeader title=\"Impostos - FGTS\" />}\n        main={\n          <Grid container direction=\"column\" spacing={2}>\n            <Grid item>\n              <TextField\n                label=\"Valor Principal\"\n                value={\n                  isNaN(parseCurrency(principalValue))\n                    ? CurrencyFormatter.format(0)\n                    : principalValue\n                }\n                placeholder=\"R$ 0,00\"\n                onChange={onValueFgts}\n                data-test-id=\"value-fgts\"\n              />\n            </Grid>\n            <Box>\n              {balanceIsInvalid && (\n                <ErrorMessage message={\"Saldo insuficiente\"} />\n              )}\n            </Box>\n          </Grid>\n        }\n        footer={\n          <ProcessPageFooter\n            primaryButton={\n              <Button\n                disabled={!isValidValue}\n                endIcon={<KeyboardArrowRight color=\"secondary\" />}\n                onClick={onNextButtonClick}\n                data-test-id=\"next-button\"\n              >\n                {nextLabel}\n              </Button>\n            }\n          />\n        }\n      />\n    </PageContainer>\n  );\n};\n","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/taxPayment/pages/Fgts/PaymentFgtsIdentifier/PaymentFgtsIdentifier.tsx",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/taxPayment/pages/Fgts/PaymentFgtsBarCode/PaymentFgtsBarCode.tsx",["4846","4847","4848"],"import React from \"react\";\nimport { AccountRoutes } from \"features/account/constants/routes\";\nimport { ProcessPageLayout } from \"components/ProcessPageLayout\";\nimport { useHistory } from \"react-router-dom\";\nimport { PageContainer } from \"components/PageContainer\";\nimport { Box, Grid, Typography } from \"@material-ui/core\";\nimport { useStyles } from \"features/taxPayment/pages/Fgts/PaymentFgtsBarCode/PaymentFgtsBarCode.style\";\nimport { TaxPaymentRoutes } from \"features/taxPayment/constants/routes\";\nimport { AppBar } from \"components/AppBar\";\nimport { TextField } from \"components/TextField\";\nimport { cancelLabel, nextLabel } from \"constants/buttons/labels\";\nimport { useMask } from \"hooks/useMask\";\nimport { Button } from \"components/Button\";\nimport { ProcessPageFooter } from \"components/ProcessPageFooter\";\nimport { Close, KeyboardArrowRight } from \"@material-ui/icons\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { StoreState } from \"redux/state\";\nimport { updateFgtsPaymentData } from \"features/taxPayment/redux/actions\";\nimport { maskBarcode, MaskBarCodeFgts } from \"_utils/masks/barCode\";\n\nexport const PaymentFgtsBarCode: React.FC = () => {\n  const history = useHistory();\n  const styles = useStyles();\n  const [isValid, setIsValid] = React.useState(false);\n  const [inputBarCode, setInputBarCode] = useMask(MaskBarCodeFgts);\n\n  const dispatch = useDispatch();\n\n  const onBarCodeChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setInputBarCode(event.target.value);\n  };\n\n  const onCancelButtonClick = () => {\n    history.replace(AccountRoutes.home);\n    dispatch(updateFgtsPaymentData());\n  };\n\n  const onSubmit = (event: React.FormEvent) => {\n    dispatch(\n      updateFgtsPaymentData({\n        barCode: inputBarCode,\n      })\n    );\n    event.preventDefault();\n    history.push(TaxPaymentRoutes.paymentFgtsCodeRevenue);\n  };\n\n  React.useEffect(() => {\n    setIsValid(!(inputBarCode.length !== 51));\n  }, [inputBarCode.length]);\n\n  return (\n    <PageContainer>\n      <ProcessPageLayout\n        appBar={\n          <AppBar\n            homeRoute={AccountRoutes.home}\n            action={\n              <Button\n                palette=\"secondary\"\n                size=\"small\"\n                startIcon={<Close color=\"primary\" />}\n                onClick={onCancelButtonClick}\n                data-test-id=\"cancel-button\"\n              >\n                {cancelLabel}\n              </Button>\n            }\n          />\n        }\n        header={\n          <Typography variant=\"h3\" className={styles.title}>\n            Impostos - FGTS <br />\n          </Typography>\n        }\n        main={\n          <Box className=\"barCodeSubheader\">\n            <Grid>\n              <TextField\n                multiline={true}\n                rows=\"2\"\n                placeholder=\"\"\n                label=\"Codigo de Barras\"\n                value={inputBarCode}\n                onChange={onBarCodeChange}\n                data-test-id=\"change-barcode\"\n              ></TextField>\n            </Grid>\n          </Box>\n        }\n        footer={\n          <ProcessPageFooter\n            primaryButton={\n              <Button\n                disabled={!isValid}\n                endIcon={<KeyboardArrowRight color=\"secondary\" />}\n                onClick={onSubmit}\n                data-test-id=\"submit-button\"\n              >\n                {nextLabel}\n              </Button>\n            }\n          />\n        }\n      />\n    </PageContainer>\n  );\n};\n","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/taxPayment/pages/Fgts/PaymentFgtsDate/PaymentFgtsDate.tsx",["4849"],"import React from \"react\";\nimport { ProcessPageLayout } from \"components/ProcessPageLayout\";\nimport { AppBar } from \"components/AppBar\";\nimport { Button } from \"components/Button\";\nimport { Close, KeyboardArrowRight } from \"@material-ui/icons\";\nimport { cancelLabel, nextLabel } from \"constants/buttons/labels\";\nimport { AccountRoutes } from \"features/account/constants/routes\";\nimport { useHistory } from \"react-router-dom\";\nimport { ProcessDescriptionHeader } from \"components/ProcessDescriptionHeader\";\nimport { PageContainer } from \"components/PageContainer\";\nimport { ProcessPageFooter } from \"components/ProcessPageFooter\";\nimport { Grid } from \"@material-ui/core\";\nimport { useStyles } from \"features/taxPayment/pages/Fgts/PaymentFgtsDate/PaymentFgtsDate.style\";\nimport { TextField } from \"components/TextField\";\nimport { SchedulingButton } from \"components/SchedulingButton\";\nimport { TaxPaymentRoutes } from \"features/taxPayment/constants/routes\";\nimport { ShortDateFormatter } from \"_translate\";\nimport { compareTransferDates } from \"features/transference/_utils\";\nimport { updateFgtsPaymentData } from \"features/taxPayment/redux/actions\";\nimport { useDispatch } from \"react-redux\";\n\nexport const PaymentFgtsDate: React.FC = () => {\n  const [openDatePicker, setOpenDatePicker] = React.useState(false);\n  const [displayDate, setDisplayDate] = React.useState(\"\");\n  const [minDate] = React.useState<Date>(new Date());\n  const history = useHistory();\n  const styles = useStyles();\n  const dispatch = useDispatch();\n  const [paymentDate, setPaymentDate] = React.useState<Date | null>(\n    new Date(Date.now())\n  );\n\n  React.useEffect(() => {\n    setDisplayDate(_getDisplayDate());\n  }, [paymentDate]);\n\n  const _getDisplayDate = () => {\n    const today = \"Hoje\";\n    if (!paymentDate) return today;\n    else if (compareTransferDates(paymentDate, new Date()) === 0) return today;\n    else return ShortDateFormatter.format(paymentDate);\n  };\n\n  const onNextButtonClick = () => {\n    history.push(TaxPaymentRoutes.paymentFgtsDescription);\n    dispatch(\n      updateFgtsPaymentData({\n        paymentDate: paymentDate,\n      })\n    );\n  };\n\n  const onCancelButtonClick = () => {\n    history.replace(AccountRoutes.home);\n    dispatch(updateFgtsPaymentData());\n  };\n\n  const onDatePickerClose = () => {\n    setOpenDatePicker(false);\n  };\n\n  const onStartDateChange = (date: Date | null) => {\n    setPaymentDate(date);\n  };\n\n  const onSchedulingButtonClick = () => {\n    setOpenDatePicker(true);\n  };\n\n  return (\n    <PageContainer>\n      <ProcessPageLayout\n        appBar={\n          <AppBar\n            homeRoute={AccountRoutes.home}\n            action={\n              <Button\n                palette=\"secondary\"\n                size=\"small\"\n                startIcon={<Close color=\"primary\" />}\n                onClick={onCancelButtonClick}\n                data-test-id=\"cancel-button\"\n              >\n                {cancelLabel}\n              </Button>\n            }\n          />\n        }\n        header={<ProcessDescriptionHeader title=\"Impostos - FGTS\" />}\n        main={\n          <React.Fragment>\n            <Grid item>\n              <TextField\n                label=\"Pagar\"\n                placeholder=\"Hoje\"\n                value={displayDate}\n                data-test-id=\"display-date\"\n              />\n            </Grid>\n            <Grid item>\n              <Grid\n                container\n                justifyContent=\"center\"\n                className={styles.scheduleButton}\n                data-test-id=\"schedule-button\"\n              >\n                <SchedulingButton\n                  open={openDatePicker}\n                  onClose={onDatePickerClose}\n                  value={paymentDate}\n                  onDateSelection={onStartDateChange}\n                  onClick={onSchedulingButtonClick}\n                  minDate={minDate}\n                />\n              </Grid>\n            </Grid>\n          </React.Fragment>\n        }\n        footer={\n          <ProcessPageFooter\n            primaryButton={\n              <Button\n                endIcon={<KeyboardArrowRight color=\"secondary\" />}\n                onClick={onNextButtonClick}\n                data-test-id=\"next-button\"\n              >\n                {nextLabel}\n              </Button>\n            }\n          />\n        }\n      />\n    </PageContainer>\n  );\n};\n","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/taxPayment/pages/Fgts/PaymentFgtsDescription/PaymentFgtsDescription.tsx",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/transference/components/BankCard/BankCard.tsx",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/taxPayment/pages/Fgts/PaymentFgtsCodeRevenue/PaymentFgtsCodeRevenue.tsx",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/taxPayment/pages/Fgts/PaymentFgts/PaymentFgts.tsx",["4850","4851"],"import React from \"react\";\nimport { ProcessPageLayout } from \"components/ProcessPageLayout\";\nimport { AppBar } from \"components/AppBar\";\nimport { Button } from \"components/Button\";\nimport { Close } from \"@material-ui/icons\";\nimport { cancelLabel, returnLabel } from \"constants/buttons/labels\";\nimport { AccountRoutes } from \"features/account/constants/routes\";\nimport { useHistory } from \"react-router-dom\";\nimport { ProcessDescriptionHeader } from \"components/ProcessDescriptionHeader\";\nimport { AccountBalance } from \"features/account/components/AccountBalance\";\nimport { ShowBalanceButton } from \"features/payment/components/ShowBalanceButton\";\nimport { PageContainer } from \"components/PageContainer\";\nimport { ProcessPageFooter } from \"components/ProcessPageFooter\";\nimport { Box, Grid, Typography } from \"@material-ui/core\";\nimport Drawer from \"@material-ui/core/Drawer\";\nimport { AccountSheet } from \"features/account/components/AccountSheet\";\nimport { useStyles } from \"features/taxPayment/pages/Fgts/PaymentFgts/PaymentFgts.style\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { StoreState } from \"redux/state\";\nimport { SelectionCard } from \"components/SelectionCard\";\nimport { KeyboardArrowLeft } from \"@material-ui/icons\";\nimport { TaxPaymentRoutes } from \"features/taxPayment/constants/routes\";\nimport { updateFgtsPaymentData } from \"features/taxPayment/redux/actions\";\n\nexport const PaymentFgts: React.FC = () => {\n  const [bottom, setBottom] = React.useState(false);\n  const { Account } = useSelector((state: StoreState) => ({\n    Account: state.account.account,\n  }));\n\n  let displayValue = JSON.parse(localStorage.getItem(\"showBalance\")!);\n  const [showBalance, setShowBalance] = React.useState<boolean>(displayValue);\n\n  React.useEffect(() => {\n    localStorage.setItem(\"showBalance\", JSON.stringify(showBalance));\n    if (showBalance === null) setShowBalance(true);\n  }, [showBalance]);\n\n  const history = useHistory();\n  const styles = useStyles();\n  const dispatch = useDispatch();\n\n  const onShowBalanceButtonClick = () => setShowBalance(!showBalance);\n\n  const toggleDrawer = () => {\n    setBottom(!bottom);\n  };\n\n  const onCancelButtonClick = () => {\n    history.replace(AccountRoutes.home);\n    dispatch(updateFgtsPaymentData());\n  };\n\n  const onNextButtonClick = () => {\n    history.push(TaxPaymentRoutes.paymentFgtsBarCode);\n  };\n\n  const onBackButtonClick = () => dispatch(updateFgtsPaymentData());\n\n  return (\n    <PageContainer>\n      <ProcessPageLayout\n        appBar={\n          <AppBar\n            homeRoute={AccountRoutes.home}\n            action={\n              <Button\n                palette=\"secondary\"\n                size=\"small\"\n                startIcon={<Close color=\"primary\" />}\n                onClick={onCancelButtonClick}\n                data-test-id=\"cancel-button\"\n              >\n                {cancelLabel}\n              </Button>\n            }\n          />\n        }\n        header={\n          <React.Fragment>\n            <ProcessDescriptionHeader title=\"Impostos - FGTS\" />\n            <Grid container alignItems=\"center\">\n              <Grid container xs item>\n                <Typography data-test-id=\"balance\" variant=\"subtitle2\">\n                  Seu saldo&nbsp;\n                </Typography>\n                <AccountBalance\n                  show={showBalance}\n                  variant=\"subtitle2\"\n                  size=\"small\"\n                />\n              </Grid>\n              <Grid item>\n                <ShowBalanceButton\n                  showBalance={showBalance}\n                  onClick={onShowBalanceButtonClick}\n                />\n              </Grid>\n            </Grid>\n          </React.Fragment>\n        }\n        main={\n          <Grid container direction=\"column\">\n            <Box className={styles.content}>\n              <SelectionCard\n                title=\"Conta de débito\"\n                subtitle={Account?.name}\n                bankAccount={Account?.bankAccount}\n                onClick={onNextButtonClick}\n                data-test-id=\"account\"\n              />\n            </Box>\n            <Drawer\n              className={styles.drawer}\n              anchor=\"bottom\"\n              open={bottom}\n              onClose={toggleDrawer}\n            >\n              <AccountSheet account={Account} onClose={toggleDrawer} />\n            </Drawer>\n          </Grid>\n        }\n        footer={<ProcessPageFooter onBackButtonClick={onBackButtonClick} />}\n      />\n    </PageContainer>\n  );\n};\n","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/card/pages/ActivateCard/ConfirmPasswordCard/ConfirmPasswordCard.tsx",["4852","4853","4854","4855"],"import { Close, KeyboardArrowRight } from \"@material-ui/icons\";\nimport { AppBar } from \"components/AppBar\";\nimport { Button } from \"components/Button\";\nimport { PageContainer } from \"components/PageContainer\";\nimport { ProcessDescriptionHeader } from \"components/ProcessDescriptionHeader\";\nimport { ProcessPageFooter } from \"components/ProcessPageFooter\";\nimport { ProcessPageLayout } from \"components/ProcessPageLayout\";\nimport { cancelLabel, nextLabel } from \"constants/buttons/labels\";\nimport React from \"react\";\nimport { PasswordInput } from \"features/card/components/Inputs/PasswordInput\";\nimport { useStyles } from \"./ConfirmPasswordCard.style\";\nimport { AccountRoutes } from \"features/account/constants/routes\";\nimport { useHistory } from \"react-router-dom\";\nimport { CardRoutes } from \"features/card/constants/routes\";\nimport { Box } from \"@material-ui/core\";\nimport { Loader } from \"components/Loader\";\nimport { Alert } from \"components/Alert\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { StoreState } from \"redux/state\";\nimport { Card } from \"features/card/redux/models/card\";\nimport { Validator } from \"features/card/components/Validator/Validator\";\nimport { changePinCard, updateCard } from \"features/card/redux/actions\";\nimport { AuthorizationSheet } from \"components/AuthorizationSheet\";\nimport { SuccessCardState } from \"features/card/redux/state\";\n\nexport const ConfirmPasswordCard: React.FC = () => {\n  const [card, loading, errorMessage] = useSelector<\n    StoreState,\n    [Card | undefined, boolean, string | undefined]\n  >((state) => [state.card.card, state.card.loading, state.card.errorMessage]);\n\n  const [openAuthorizationSheet, setOpenAuthorizationSheet] =\n    React.useState(false);\n\n  const styles = useStyles();\n  const history = useHistory();\n  const dispatch = useDispatch();\n  const [confirmationPin, setPasswordInput] = React.useState(\"\");\n  const [displayCards, setDisplayCards] = React.useState(card);\n  const [disableNextButton, setDisableNextButton] = React.useState(false);\n  const [sentRequest, setSentRequest] = React.useState(false);\n  const cardState = useSelector((state: StoreState) => state.card);\n\n  const [passwordValidate, setPasswordValidate] = React.useState<\n    boolean | undefined\n  >();\n\n  React.useEffect(() => {\n    setPasswordValidate(card?.pin === confirmationPin);\n  }, [confirmationPin]);\n\n  React.useEffect(() => {\n    setDisableNextButton(confirmationPin.length !== 4);\n  }, [passwordValidate]);\n\n  React.useEffect(() => {\n    setDisplayCards(card);\n  }, [card]);\n\n  React.useEffect(() => {\n    if (sentRequest && cardState instanceof SuccessCardState)\n      history.push(CardRoutes.activateCardConclude);\n  }, [cardState]);\n\n  const lastCardDigits = (lastDigits: number) => {\n    if (lastDigits === null) return `Cartão final`;\n    else return `Cartão final ${displayCards?.panLastDigits}`;\n  };\n\n  const onCancelButton = () => {\n    history.push(AccountRoutes.home);\n    dispatch(updateCard());\n  };\n\n  const onAuthorizationClose = (tokenIsValid: boolean) => {\n    if (tokenIsValid) {\n      dispatch(changePinCard(card));\n      setSentRequest(true);\n    }\n    setOpenAuthorizationSheet(false);\n  };\n\n  const onSubmit = (event: React.FormEvent) => {\n    dispatch(updateCard({ ...card!, confirmationPin: confirmationPin }));\n    setOpenAuthorizationSheet(true);\n  };\n\n  return (\n    <PageContainer>\n      <ProcessPageLayout\n        appBar={\n          <AppBar\n            homeRoute={AccountRoutes.home}\n            action={\n              <Button\n                palette=\"secondary\"\n                size=\"small\"\n                startIcon={<Close color=\"primary\" />}\n                onClick={onCancelButton}\n                data-test-id=\"cancel-button\"\n              >\n                {cancelLabel}\n              </Button>\n            }\n          />\n        }\n        header={\n          <Box className={styles.header}>\n            <ProcessDescriptionHeader\n              title={\"Criar senha do Cartão\"}\n              subtitle={lastCardDigits(displayCards!.panLastDigits)}\n              description={\"Agora insira novamente a sua nova senha\"}\n              data-test-id=\"description\"\n            />\n          </Box>\n        }\n        main={\n          <Box onSubmit={onSubmit} className={styles.main}>\n            <Validator\n              label={\"Confirmar senha\"}\n              value={confirmationPin}\n              setValue={setPasswordInput}\n              strictValidation={passwordValidate}\n            />\n          </Box>\n        }\n        footer={\n          <ProcessPageFooter\n            primaryButton={\n              <Button\n                palette=\"primary\"\n                onClick={onSubmit}\n                endIcon={<KeyboardArrowRight color=\"secondary\" />}\n                disabled={disableNextButton}\n                data-test-id=\"next-button\"\n              >\n                {nextLabel}\n              </Button>\n            }\n          />\n        }\n      />\n      <AuthorizationSheet\n        open={openAuthorizationSheet}\n        onClose={onAuthorizationClose}\n      />\n      <Loader open={loading} />\n      {errorMessage && (\n        <Alert title=\"Error\" message={errorMessage} severity=\"error\" />\n      )}\n    </PageContainer>\n  );\n};\n","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/taxPayment/pages/Gare/PaymentGareDescription/PaymentGareDescription.tsx",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/taxPayment/pages/Gare/PaymentGareSummary/PaymentGareSummary.tsx",["4856","4857"],"import React from \"react\";\nimport { Grid } from \"@material-ui/core\";\nimport { Close, KeyboardArrowRight } from \"@material-ui/icons\";\nimport { AppBar } from \"components/AppBar\";\nimport { AuthorizationSheet } from \"components/AuthorizationSheet\";\nimport { Button } from \"components/Button\";\nimport { PageContainer } from \"components/PageContainer\";\nimport { ProcessDescriptionHeader } from \"components/ProcessDescriptionHeader\";\nimport { ProcessPageFooter } from \"components/ProcessPageFooter\";\nimport { ProcessPageLayout } from \"components/ProcessPageLayout\";\nimport { cancelLabel, concludeLabel } from \"constants/buttons/labels\";\nimport { AccountRoutes } from \"features/account/constants/routes\";\nimport { DetailsGareDescription } from \"features/taxPayment/components/DetailsGareDescription\";\nimport { TaxPaymentRoutes } from \"features/taxPayment/constants/routes\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useHistory } from \"react-router-dom\";\nimport { StoreState } from \"redux/state\";\nimport { GAREType } from \"features/taxPayment/redux/models/enum\";\nimport {\n  createGarePayment,\n  updateGarePaymentData,\n} from \"features/taxPayment/redux/actions\";\nimport { Loader } from \"components/Loader\";\nimport { Alert } from \"components/Alert\";\nimport { SuccessTaxPaymentState } from \"features/taxPayment/redux/state\";\nimport { OperationType } from \"features/account/redux/models/operationType\";\n\nexport const PaymentGareSummary: React.FC = () => {\n  const [openAuthorizationSheet, setOpenAuthorizationSheet] =\n    React.useState(false);\n  const history = useHistory();\n  const dispatch = useDispatch();\n  const garePayment = useSelector((state: StoreState) => state.taxPayment);\n  const garePaymentData = useSelector(\n    (state: StoreState) => state.taxPayment.gare!\n  );\n  const { loading, errorMessage } = garePayment;\n  const { principalValue, fineValue, interestValue } = garePaymentData;\n  const totalValue: number = parseFloat(\n    (\n      Number(principalValue) +\n      Number(fineValue) +\n      Number(interestValue)\n    ).toFixed(2)\n  );\n\n  const onAuthorizationClose = (tokenIsValid: boolean) => {\n    if (tokenIsValid) {\n      dispatch(createGarePayment());\n    }\n    setOpenAuthorizationSheet(false);\n  };\n  const onConcludeButtonClick = () => {\n    setOpenAuthorizationSheet(true);\n  };\n\n  const onCancelButtonClick = () => {\n    dispatch(updateGarePaymentData());\n    history.replace(AccountRoutes.home);\n  };\n\n  React.useEffect(() => {\n    if (garePayment instanceof SuccessTaxPaymentState) {\n      history.push({\n        pathname: TaxPaymentRoutes.paymentGareConclude,\n        state: OperationType.garePayment,\n      });\n      dispatch(updateGarePaymentData());\n    }\n  }, [garePayment]);\n\n  React.useEffect(() => {\n    dispatch(\n      updateGarePaymentData({\n        totalValue: totalValue,\n      })\n    );\n  }, [dispatch]);\n\n  return (\n    <PageContainer>\n      <ProcessPageLayout\n        appBar={\n          <AppBar\n            homeRoute={AccountRoutes.home}\n            action={\n              <Button\n                palette=\"secondary\"\n                size=\"small\"\n                startIcon={<Close color=\"primary\" />}\n                onClick={onCancelButtonClick}\n                data-test-id=\"cancel-button\"\n              >\n                {cancelLabel}\n              </Button>\n            }\n          />\n        }\n        header={\n          <ProcessDescriptionHeader\n            title=\"Impostos - GARE\"\n            subtitle=\"Hora de conferir\"\n            description=\"Confira, cuidadosamente, os dados do pagamento.\"\n          />\n        }\n        main={\n          <DetailsGareDescription\n            type={GAREType[garePayment.gare?.GAREType!]}\n            taxPayer={garePayment.gare?.contributorTaxId}\n            referenceNumber={garePayment.gare\n              ?.referenceNumber!.substr(0, 2)\n              .concat(\"/\")\n              .concat(garePayment.gare?.referenceNumber!.substr(2, 5))}\n            codeRevenue={Number(garePayment.gare?.codeRevenue!)}\n            quoteNumberNotification={Number(\n              garePayment.gare?.quoteNumberNotification!\n            )}\n            principalValue={Number(garePayment.gare?.principalValue)}\n            fineValue={Number(garePayment.gare?.fineValue)}\n            interestValue={Number(garePayment.gare?.interestValue)}\n            totalValue={Number(garePayment.gare?.totalValue)}\n            dueDate={garePayment.gare?.dueDate!}\n            paymentDate={garePayment.gare?.paymentDate!}\n            description={garePayment.gare?.description!}\n          />\n        }\n        footer={\n          <Grid>\n            <ProcessPageFooter\n              primaryButton={\n                <Button\n                  palette=\"primary\"\n                  endIcon={<KeyboardArrowRight color=\"secondary\" />}\n                  onClick={onConcludeButtonClick}\n                  data-test-id=\"conclude-button\"\n                >\n                  {concludeLabel}\n                </Button>\n              }\n            />\n          </Grid>\n        }\n      />\n      <AuthorizationSheet\n        open={openAuthorizationSheet}\n        onClose={onAuthorizationClose}\n      />\n      <Loader open={loading} />\n      {errorMessage && (\n        <Alert title=\"Error\" message={errorMessage} severity=\"error\" />\n      )}\n    </PageContainer>\n  );\n};\n","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/payment/constants/routes.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/taxPayment/pages/Gare/PaymentGare/PaymentGare.tsx",["4858","4859"],"import React from \"react\";\nimport { ProcessPageLayout } from \"components/ProcessPageLayout\";\nimport { AppBar } from \"components/AppBar\";\nimport { Button } from \"components/Button\";\nimport { Close } from \"@material-ui/icons\";\nimport { cancelLabel, returnLabel } from \"constants/buttons/labels\";\nimport { AccountRoutes } from \"features/account/constants/routes\";\nimport { useHistory } from \"react-router-dom\";\nimport { ProcessDescriptionHeader } from \"components/ProcessDescriptionHeader\";\nimport { AccountBalance } from \"features/account/components/AccountBalance\";\nimport { ShowBalanceButton } from \"features/payment/components/ShowBalanceButton\";\nimport { PageContainer } from \"components/PageContainer\";\nimport { ProcessPageFooter } from \"components/ProcessPageFooter\";\nimport { Box, Grid, Typography } from \"@material-ui/core\";\nimport Drawer from \"@material-ui/core/Drawer\";\nimport { AccountSheet } from \"features/account/components/AccountSheet\";\nimport { useStyles } from \"features/taxPayment/pages/Gare/PaymentGare/PaymentGare.style\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { StoreState } from \"redux/state\";\nimport { SelectionCard } from \"components/SelectionCard\";\nimport { KeyboardArrowLeft } from \"@material-ui/icons\";\nimport { TaxPaymentRoutes } from \"features/taxPayment/constants/routes\";\nimport { updateGarePaymentData } from \"features/taxPayment/redux/actions\";\n\nexport const PaymentGare: React.FC = () => {\n  const [bottom, setBottom] = React.useState(false);\n  const { Account } = useSelector((state: StoreState) => ({\n    Account: state.account.account,\n  }));\n\n  let displayValue = JSON.parse(localStorage.getItem(\"showBalance\")!);\n  const [showBalance, setShowBalance] = React.useState<boolean>(displayValue);\n\n  React.useEffect(() => {\n    localStorage.setItem(\"showBalance\", JSON.stringify(showBalance));\n    if (showBalance === null) setShowBalance(true);\n  }, [showBalance]);\n\n  const history = useHistory();\n  const styles = useStyles();\n  const dispatch = useDispatch();\n\n  const onShowBalanceButtonClick = () => setShowBalance(!showBalance);\n\n  const toggleDrawer = () => {\n    setBottom(!bottom);\n  };\n\n  const onCancelButtonClick = () => {\n    dispatch(updateGarePaymentData());\n    history.replace(AccountRoutes.home);\n  };\n\n  const onNextButtonClick = () => {\n    history.push(TaxPaymentRoutes.paymentGareType);\n  };\n\n  const onBackButtonClick = () => dispatch(updateGarePaymentData());\n\n  return (\n    <PageContainer>\n      <ProcessPageLayout\n        appBar={\n          <AppBar\n            homeRoute={AccountRoutes.home}\n            action={\n              <Button\n                palette=\"secondary\"\n                size=\"small\"\n                startIcon={<Close color=\"primary\" />}\n                onClick={onCancelButtonClick}\n                data-test-id=\"cancel-button\"\n              >\n                {cancelLabel}\n              </Button>\n            }\n          />\n        }\n        header={\n          <React.Fragment>\n            <ProcessDescriptionHeader title=\"Impostos - GARE\" />\n            <Grid container alignItems=\"center\">\n              <Grid container xs item>\n                <Typography data-test-id=\"balance\" variant=\"subtitle2\">\n                  Seu saldo&nbsp;\n                </Typography>\n                <AccountBalance\n                  show={showBalance}\n                  variant=\"subtitle2\"\n                  size=\"small\"\n                />\n              </Grid>\n              <Grid item>\n                <ShowBalanceButton\n                  showBalance={showBalance}\n                  onClick={onShowBalanceButtonClick}\n                />\n              </Grid>\n            </Grid>\n          </React.Fragment>\n        }\n        main={\n          <Grid container direction=\"column\">\n            <Box className={styles.content}>\n              <SelectionCard\n                title=\"Conta de débito\"\n                subtitle={Account?.name}\n                bank={Account?.bankAccount}\n                onClick={onNextButtonClick}\n                data-test-id=\"account\"\n              />\n            </Box>\n            <Grid container justify=\"center\" className={styles.scheduleButton}>\n              <Grid item></Grid>\n            </Grid>\n            <Drawer\n              className={styles.drawer}\n              anchor=\"bottom\"\n              open={bottom}\n              onClose={toggleDrawer}\n            >\n              <AccountSheet account={Account} onClose={toggleDrawer} />\n            </Drawer>\n          </Grid>\n        }\n        footer={<ProcessPageFooter onBackButtonClick={onBackButtonClick} />}\n      />\n    </PageContainer>\n  );\n};\n","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/taxPayment/pages/Gare/PaymentGareDateType/PaymentGareDateType.tsx",["4860","4861"],"import React from \"react\";\nimport { ProcessPageLayout } from \"components/ProcessPageLayout\";\nimport { AppBar } from \"components/AppBar\";\nimport { Button } from \"components/Button\";\nimport { Close, KeyboardArrowRight, Update } from \"@material-ui/icons\";\nimport { cancelLabel, nextLabel } from \"constants/buttons/labels\";\nimport { AccountRoutes } from \"features/account/constants/routes\";\nimport { useHistory } from \"react-router-dom\";\nimport { ProcessDescriptionHeader } from \"components/ProcessDescriptionHeader\";\nimport { PageContainer } from \"components/PageContainer\";\nimport { ProcessPageFooter } from \"components/ProcessPageFooter\";\nimport { Grid, MenuItem } from \"@material-ui/core\";\nimport { useStyles } from \"features/taxPayment/pages/Gare/PaymentGareDateType/PaymentGareDateType.style\";\nimport { TextField } from \"components/TextField\";\nimport { TaxPaymentRoutes } from \"features/taxPayment/constants/routes\";\nimport { useDispatch } from \"react-redux\";\nimport { updateGarePaymentData } from \"features/taxPayment/redux/actions\";\nimport { GAREType } from \"features/taxPayment/redux/models/enum\";\nimport { DatePicker, KeyboardDatePicker } from \"@material-ui/pickers\";\nimport { MaterialUiPickersDate } from \"@material-ui/pickers/typings/date\";\n\nexport const PaymentGareDateType: React.FC = () => {\n  const [typeGare, setTypeGare] = React.useState(\"\");\n  const [startDate, setStartDate] = React.useState<string | null>();\n  const [monthYear, setMonthYear] = React.useState<Date | null>(\n    new Date(Date.now())\n  );\n  const [isValidValue, setIsValidValue] = React.useState(true);\n  const [referenceNumber, setReferenceNumber] = React.useState(\"\");\n  const typesgare = [\n    { id: \"0\", value: \"ICMS\" },\n    { id: \"1\", value: \"DR\" },\n    { id: \"2\", value: \"ITCMD\" },\n  ];\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const styles = useStyles();\n  const month = monthYear!.getMonth() + 1;\n  const validMonth = month < 10 ? 0 + month.toString() : month.toString();\n  const year = monthYear!.getFullYear().toString();\n\n  const onStartDateChange = (date: MaterialUiPickersDate) => {\n    setStartDate(date?.toString());\n    if (date) setMonthYear(date);\n  };\n\n  const onNextButtonClick = () => {\n    dispatch(\n      updateGarePaymentData({\n        GAREType: Number(typeGare) as GAREType,\n        referenceNumber: referenceNumber,\n      })\n    );\n    history.push(TaxPaymentRoutes.paymentGareCodeNumber);\n  };\n\n  const onCancelButtonClick = () => {\n    dispatch(updateGarePaymentData());\n    history.replace(AccountRoutes.home);\n  };\n\n  const onGareType = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setTypeGare(event.target.value);\n  };\n\n  React.useEffect(() => {\n    setReferenceNumber(validMonth.concat(year));\n  }, [validMonth, year]);\n\n  React.useEffect(() => {\n    setIsValidValue(!typeGare);\n  }, [typeGare]);\n\n  return (\n    <PageContainer>\n      <ProcessPageLayout\n        appBar={\n          <AppBar\n            homeRoute={AccountRoutes.home}\n            action={\n              <Button\n                palette=\"secondary\"\n                size=\"small\"\n                startIcon={<Close color=\"primary\" />}\n                onClick={onCancelButtonClick}\n                data-test-id=\"cancel-button\"\n              >\n                {cancelLabel}\n              </Button>\n            }\n          />\n        }\n        header={<ProcessDescriptionHeader title=\"Impostos - GARE\" />}\n        main={\n          <Grid container direction=\"column\" spacing={4}>\n            <Grid item>\n              <TextField\n                label=\"Tipo de Gare\"\n                value={typeGare}\n                onChange={onGareType}\n                select\n                data-test-id=\"gare-type\"\n              >\n                {typesgare.map((option) => (\n                  <MenuItem\n                    data-test-id=\"gare-option\"\n                    key={option.id}\n                    value={option.id}\n                  >\n                    {option.value}\n                  </MenuItem>\n                ))}\n              </TextField>\n            </Grid>\n\n            <Grid item>\n              <DatePicker\n                className={styles.wrapper}\n                views={[\"month\", \"year\"]}\n                label=\"Data de apuração\"\n                openTo=\"month\"\n                value={startDate}\n                onChange={onStartDateChange}\n                format={\"MM/yyyy\"}\n                data-test-id=\"change-start-date\"\n              />\n            </Grid>\n\n            <Grid item>\n              <Grid\n                container\n                justifyContent=\"center\"\n                className={styles.scheduleButton}\n                data-test-id=\"schedule-button\"\n              ></Grid>\n            </Grid>\n          </Grid>\n        }\n        footer={\n          <ProcessPageFooter\n            primaryButton={\n              <Button\n                endIcon={<KeyboardArrowRight color=\"secondary\" />}\n                onClick={onNextButtonClick}\n                disabled={isValidValue}\n                data-test-id=\"next-button\"\n              >\n                {nextLabel}\n              </Button>\n            }\n          />\n        }\n      />\n    </PageContainer>\n  );\n};\n","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/card/pages/ActivateCard/ActivateCardConclude/ActivateCardConclude.style.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/card/pages/AssociateNewCard/AssociateNewCardCheck/AssociateNewCardCheck.tsx",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/onboarding/pages/LandingPage/LandingPage.tsx",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/digitalWithdrawal/constants/routes.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/taxPayment/redux/actions.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/taxpayment/pages/Darj/PaymentDarjDescription/PaymentDarjDescription.tsx",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/taxpayment/pages/Darj/PaymentDarjSummary/PaymentDarjSummary.tsx",["4862","4863"],"import React from \"react\";\nimport { Grid } from \"@material-ui/core\";\nimport { Close, KeyboardArrowRight } from \"@material-ui/icons\";\nimport { AppBar } from \"components/AppBar\";\nimport { AuthorizationSheet } from \"components/AuthorizationSheet\";\nimport { Button } from \"components/Button\";\nimport { PageContainer } from \"components/PageContainer\";\nimport { ProcessDescriptionHeader } from \"components/ProcessDescriptionHeader\";\nimport { ProcessPageFooter } from \"components/ProcessPageFooter\";\nimport { ProcessPageLayout } from \"components/ProcessPageLayout\";\nimport { cancelLabel, concludeLabel } from \"constants/buttons/labels\";\nimport { AccountRoutes } from \"features/account/constants/routes\";\nimport { DetailsDarjDescription } from \"features/taxpayment/components/DetailsDarjDescription\";\nimport { TaxPaymentRoutes } from \"features/taxPayment/constants/routes\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useHistory } from \"react-router-dom\";\nimport { StoreState } from \"redux/state\";\nimport {\n  createDarjPayment,\n  updateDarjPaymentData,\n} from \"features/taxPayment/redux/actions\";\nimport { SuccessTaxPaymentState } from \"features/taxPayment/redux/state\";\nimport { Loader } from \"components/Loader\";\nimport { Alert } from \"components/Alert\";\nimport { OperationType } from \"features/account/redux/models/operationType\";\n\nexport const PaymentDarjSummary: React.FC = () => {\n  const [openAuthorizationSheet, setOpenAuthorizationSheet] =\n    React.useState(false);\n  const history = useHistory();\n  const dispatch = useDispatch();\n  const taxPaymentDARJState = useSelector(\n    (store: StoreState) => store.taxPayment.darj!\n  );\n  const taxPaymentDARJData = useSelector(\n    (store: StoreState) => store.taxPayment\n  );\n  const { loading, errorMessage } = taxPaymentDARJData;\n  const totalValue =\n    taxPaymentDARJState?.principalValue! +\n    taxPaymentDARJState?.fineValue! +\n    taxPaymentDARJState?.interestValue! +\n    taxPaymentDARJState?.monetaryValue!;\n\n  const onAuthorizationClose = (tokenIsValid: boolean) => {\n    if (tokenIsValid) {\n      dispatch(createDarjPayment());\n    }\n    setOpenAuthorizationSheet(false);\n  };\n\n  const onConcludeButtonClick = () => {\n    setOpenAuthorizationSheet(true);\n  };\n\n  const onCancelButtonClick = () => {\n    dispatch(updateDarjPaymentData());\n    history.replace(AccountRoutes.home);\n  };\n\n  React.useEffect(() => {\n    if (taxPaymentDARJData instanceof SuccessTaxPaymentState) {\n      history.push({\n        pathname: TaxPaymentRoutes.paymentDarjConclude,\n        state: OperationType.darjPayment,\n      });\n\n      dispatch(updateDarjPaymentData());\n    }\n  }, [taxPaymentDARJData]);\n\n  React.useEffect(() => {\n    dispatch(\n      updateDarjPaymentData({\n        totalValue: totalValue,\n      })\n    );\n  }, [dispatch]);\n\n  return (\n    <PageContainer>\n      <ProcessPageLayout\n        appBar={\n          <AppBar\n            homeRoute={AccountRoutes.home}\n            action={\n              <Button\n                palette=\"secondary\"\n                size=\"small\"\n                startIcon={<Close color=\"primary\" />}\n                onClick={onCancelButtonClick}\n                data-test-id=\"cancel-button\"\n              >\n                {cancelLabel}\n              </Button>\n            }\n          />\n        }\n        header={\n          <ProcessDescriptionHeader\n            title=\"Impostos - DARJ\"\n            subtitle=\"Hora de conferir\"\n            description=\"Confira, cuidadosamente, os dados do pagamento.\"\n          />\n        }\n        main={\n          <DetailsDarjDescription\n            contributorTaxId={taxPaymentDARJState?.contributorTaxId!}\n            referenceNumber={taxPaymentDARJState?.referenceNumber}\n            principalValue={Number(taxPaymentDARJState?.principalValue)}\n            fineValue={Number(taxPaymentDARJState?.fineValue)}\n            interestValue={Number(taxPaymentDARJState?.interestValue)}\n            monetaryValue={Number(taxPaymentDARJState?.monetaryValue)}\n            totalValue={taxPaymentDARJState?.totalValue!}\n            rateValue={Number(taxPaymentDARJState?.rateValue)}\n            dueDate={taxPaymentDARJState?.dueDate}\n            paymentDate={taxPaymentDARJState?.paymentDate!}\n            tags={taxPaymentDARJState?.tags}\n            codeRevenue={taxPaymentDARJState?.codeRevenue!}\n            stateRegistration={taxPaymentDARJState?.stateRegistration}\n            originDocument={Number(taxPaymentDARJState?.originDocument)}\n            rateValueType={Number(taxPaymentDARJState?.rateValueType)}\n            description={taxPaymentDARJState?.description}\n          />\n        }\n        footer={\n          <Grid>\n            <ProcessPageFooter\n              primaryButton={\n                <Button\n                  palette=\"primary\"\n                  endIcon={<KeyboardArrowRight color=\"secondary\" />}\n                  onClick={onConcludeButtonClick}\n                  data-test-id=\"conclude-button\"\n                >\n                  {concludeLabel}\n                </Button>\n              }\n            />\n          </Grid>\n        }\n      />\n      <AuthorizationSheet\n        open={openAuthorizationSheet}\n        onClose={onAuthorizationClose}\n      />\n      <Loader open={loading} />\n      {errorMessage && (\n        <Alert title=\"Error\" message={errorMessage} severity=\"error\" />\n      )}\n    </PageContainer>\n  );\n};\n","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/taxpayment/pages/Darj/PaymentDarj/PaymentDarj.tsx",["4864"],"import React from \"react\";\nimport { ProcessPageLayout } from \"components/ProcessPageLayout\";\nimport { AppBar } from \"components/AppBar\";\nimport { Button } from \"components/Button\";\nimport { Close } from \"@material-ui/icons\";\nimport { cancelLabel, returnLabel } from \"constants/buttons/labels\";\nimport { AccountRoutes } from \"features/account/constants/routes\";\nimport { useHistory } from \"react-router-dom\";\nimport { ProcessDescriptionHeader } from \"components/ProcessDescriptionHeader\";\nimport { AccountBalance } from \"features/account/components/AccountBalance\";\nimport { ShowBalanceButton } from \"features/payment/components/ShowBalanceButton\";\nimport { PageContainer } from \"components/PageContainer\";\nimport { ProcessPageFooter } from \"components/ProcessPageFooter\";\nimport { Box, Grid, Typography } from \"@material-ui/core\";\nimport Drawer from \"@material-ui/core/Drawer\";\nimport { AccountSheet } from \"features/account/components/AccountSheet\";\nimport { useStyles } from \"features/taxpayment/pages/Darj/PaymentDarj/PaymentDarj.style\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { StoreState } from \"redux/state\";\nimport { SelectionCard } from \"components/SelectionCard\";\nimport { TaxPaymentRoutes } from \"features/taxPayment/constants/routes\";\nimport { updateDarjPaymentData } from \"features/taxPayment/redux/actions\";\n\nexport const PaymentDarj: React.FC = () => {\n  const [bottom, setBottom] = React.useState(false);\n  const { Account } = useSelector((state: StoreState) => ({\n    Account: state.account.account,\n  }));\n\n  let displayValue = JSON.parse(localStorage.getItem(\"showBalance\")!);\n  const [showBalance, setShowBalance] = React.useState<boolean>(displayValue);\n\n  React.useEffect(() => {\n    localStorage.setItem(\"showBalance\", JSON.stringify(showBalance));\n    if (showBalance === null) setShowBalance(true);\n  }, [showBalance]);\n\n  const history = useHistory();\n  const styles = useStyles();\n  const dispatch = useDispatch();\n\n  const onShowBalanceButtonClick = () => setShowBalance(!showBalance);\n\n  const toggleDrawer = () => {\n    setBottom(!bottom);\n  };\n\n  const onCancelButtonClick = () => {\n    history.replace(AccountRoutes.home);\n  };\n\n  const onNextButtonClick = () => {\n    history.push(TaxPaymentRoutes.paymentDarjType);\n  };\n\n  const onBackButtonClick = () => dispatch(updateDarjPaymentData());\n\n  return (\n    <PageContainer>\n      <ProcessPageLayout\n        appBar={\n          <AppBar\n            homeRoute={AccountRoutes.home}\n            action={\n              <Button\n                palette=\"secondary\"\n                size=\"small\"\n                startIcon={<Close color=\"primary\" />}\n                onClick={onCancelButtonClick}\n                data-test-id=\"cancel-button\"\n              >\n                {cancelLabel}\n              </Button>\n            }\n          />\n        }\n        header={\n          <React.Fragment>\n            <ProcessDescriptionHeader title=\"Impostos - DARJ\" />\n            <Grid container alignItems=\"center\">\n              <Grid container xs item>\n                <Typography data-test-id=\"balance\" variant=\"subtitle2\">\n                  Seu saldo&nbsp;\n                </Typography>\n                <AccountBalance\n                  show={showBalance}\n                  variant=\"subtitle2\"\n                  size=\"small\"\n                />\n              </Grid>\n              <Grid item>\n                <ShowBalanceButton\n                  showBalance={showBalance}\n                  onClick={onShowBalanceButtonClick}\n                />\n              </Grid>\n            </Grid>\n          </React.Fragment>\n        }\n        main={\n          <Grid container direction=\"column\">\n            <Box className={styles.content}>\n              <SelectionCard\n                title=\"Conta de débito\"\n                subtitle={Account?.name}\n                bankAccount={Account?.bankAccount}\n                onClick={onNextButtonClick}\n                data-test-id=\"bank-account\"\n              />\n            </Box>\n            <Grid container justify=\"center\" className={styles.scheduleButton}>\n              <Grid item>\n                {/* <ButtonWithFloatingIcon\n                  icon={iconChange}\n                  onClick={toggleDrawer}\n                >\n                  Trocar conta\n                </ButtonWithFloatingIcon> */}\n              </Grid>\n            </Grid>\n            <Drawer\n              className={styles.drawer}\n              anchor=\"bottom\"\n              open={bottom}\n              onClose={toggleDrawer}\n            >\n              <AccountSheet account={Account} onClose={toggleDrawer} />\n            </Drawer>\n          </Grid>\n        }\n        footer={<ProcessPageFooter onBackButtonClick={onBackButtonClick} />}\n      />\n    </PageContainer>\n  );\n};\n","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/taxpayment/pages/Darj/PaymentDarjCodeNumber/PaymentDarjCodeNumber.tsx",["4865","4866"],"import React from \"react\";\nimport { ProcessPageLayout } from \"components/ProcessPageLayout\";\nimport { AppBar } from \"components/AppBar\";\nimport { Button } from \"components/Button\";\nimport { Close, KeyboardArrowRight } from \"@material-ui/icons\";\nimport { cancelLabel, nextLabel } from \"constants/buttons/labels\";\nimport { AccountRoutes } from \"features/account/constants/routes\";\nimport { useHistory } from \"react-router-dom\";\nimport { ProcessDescriptionHeader } from \"components/ProcessDescriptionHeader\";\nimport { PageContainer } from \"components/PageContainer\";\nimport { ProcessPageFooter } from \"components/ProcessPageFooter\";\nimport { Box, Grid } from \"@material-ui/core\";\nimport { TaxPaymentRoutes } from \"features/taxPayment/constants/routes\";\nimport { TextField } from \"components/TextField\";\nimport { useMask } from \"hooks/useMask\";\nimport { maskMoney } from \"_utils/masks/money\";\nimport { numericOnly } from \"_utils/masks/generics\";\nimport { CurrencyFormatter, parseCurrency } from \"_translate\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { StoreState } from \"redux/state\";\nimport { updateDarjPaymentData } from \"features/taxPayment/redux/actions\";\nimport { maskTaxPayer } from \"_utils/masks/taxPayer\";\nimport { ErrorMessage } from \"components/ErrorMessage\";\n\nexport const PaymentDarjCodeNumber: React.FC = () => {\n  const history = useHistory();\n  const [monetaryValue, setmonetaryValueInput] = useMask(maskMoney);\n  const [codeRevenue, setCodeRevenue] = useMask(numericOnly);\n  const [stateRegistration, setStateRegistration] = React.useState(\"\");\n  const [isValidValue, setIsValidValue] = React.useState(true);\n  const [contributortaxId, setContributortaxId] = useMask(maskTaxPayer);\n  const [originDocument, setOriginDocument] = useMask(numericOnly);\n  const [rateValueType, setRateValueType] = useMask(numericOnly);\n  const dispatch = useDispatch();\n  const [balanceIsInvalid, setBalanceIsInvalid] = React.useState(false);\n  const { balance } = useSelector((store: StoreState) => ({\n    balance: store.account.dashboard!.balance,\n  }));\n\n  const onMonitaryChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setmonetaryValueInput(event.target.value);\n  };\n  const onCodeRevenue = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setCodeRevenue(event.target.value);\n  };\n\n  const onContributortaxId = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setContributortaxId(event.target.value);\n  };\n\n  const onStateRegistration = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setStateRegistration(event.target.value);\n  };\n\n  const onOriginDocument = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setOriginDocument(event.target.value);\n  };\n\n  const onRateValueType = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setRateValueType(event.target.value);\n  };\n\n  React.useEffect(() => {\n    setIsValidValue(\n      !(\n        codeRevenue &&\n        monetaryValue &&\n        (contributortaxId.length === 14 || contributortaxId.length === 18) &&\n        stateRegistration.length > 0 &&\n        stateRegistration.length <= 8 &&\n        Number(parseCurrency(monetaryValue)) <= balance\n      )\n    );\n  }, [codeRevenue, monetaryValue, contributortaxId, stateRegistration]);\n\n  const onCancelButtonClick = () => {\n    dispatch(updateDarjPaymentData());\n    history.replace(AccountRoutes.home);\n  };\n\n  React.useEffect(() => {\n    const convertedValue = parseCurrency(\n      isNaN(parseCurrency(monetaryValue))\n        ? CurrencyFormatter.format(0)\n        : monetaryValue\n    );\n    setBalanceIsInvalid(convertedValue > balance);\n  }, [monetaryValue]);\n\n  const onNextButtonClick = () => {\n    history.push(TaxPaymentRoutes.paymentDarjValues);\n    dispatch(\n      updateDarjPaymentData({\n        codeRevenue: codeRevenue,\n        monetaryValue: parseFloat(parseCurrency(monetaryValue).toFixed(2)),\n        contributorTaxId: maskTaxPayer(contributortaxId),\n        stateRegistration: stateRegistration,\n        originDocument: Number(originDocument),\n        rateValueType: Number(rateValueType),\n      })\n    );\n  };\n\n  return (\n    <PageContainer>\n      <ProcessPageLayout\n        appBar={\n          <AppBar\n            homeRoute={AccountRoutes.home}\n            action={\n              <Button\n                palette=\"secondary\"\n                size=\"small\"\n                startIcon={<Close color=\"primary\" />}\n                onClick={onCancelButtonClick}\n                data-test-id=\"cancel-button\"\n              >\n                {cancelLabel}\n              </Button>\n            }\n          />\n        }\n        header={\n          <React.Fragment>\n            <ProcessDescriptionHeader title=\"Impostos - DARJ\" />\n          </React.Fragment>\n        }\n        main={\n          <Grid container direction=\"column\" spacing={2}>\n            <Grid item>\n              <TextField\n                label=\"Código da Receita\"\n                value={codeRevenue}\n                onChange={onCodeRevenue}\n                data-test-id=\"code-revenue\"\n              />\n            </Grid>\n            <Grid item>\n              <TextField\n                label=\"CPF/CNPJ do Contribuidor\"\n                value={contributortaxId}\n                onChange={onContributortaxId}\n                data-test-id=\"contributor-taxid\"\n              />\n            </Grid>\n            <Grid item>\n              <TextField\n                label=\"Valor Monetário\"\n                value={\n                  isNaN(parseCurrency(monetaryValue))\n                    ? CurrencyFormatter.format(0)\n                    : monetaryValue\n                }\n                onChange={onMonitaryChange}\n                data-test-id=\"monetary-value\"\n              />\n            </Grid>\n            <Grid item>\n              <TextField\n                label=\"Registro Estadual\"\n                value={stateRegistration}\n                onChange={onStateRegistration}\n                data-test-id=\"state-registration\"\n              />\n            </Grid>\n            <Grid item>\n              <TextField\n                label=\"Documento de Origem\"\n                value={originDocument}\n                onChange={onOriginDocument}\n                data-test-id=\"origin-document\"\n              />\n            </Grid>\n            <Grid item>\n              <TextField\n                label=\"Tipo de taxa\"\n                value={rateValueType}\n                onChange={onRateValueType}\n                data-test-id=\"rate-value-type\"\n              />\n            </Grid>\n            <Box>\n              {balanceIsInvalid && (\n                <ErrorMessage message={\"Saldo insuficiente\"} />\n              )}\n            </Box>\n          </Grid>\n        }\n        footer={\n          <ProcessPageFooter\n            primaryButton={\n              <Button\n                endIcon={<KeyboardArrowRight color=\"secondary\" />}\n                onClick={onNextButtonClick}\n                disabled={isValidValue}\n                data-test-id=\"next-button\"\n              >\n                {nextLabel}\n              </Button>\n            }\n          />\n        }\n      />\n    </PageContainer>\n  );\n};\n","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/card/pages/AssociateNewCard/AssociateFourDigits/AssociateFourDigits.tsx",["4867"],"import React from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useHistory } from \"react-router-dom\";\nimport { Close, KeyboardArrowRight } from \"@material-ui/icons\";\nimport { ProcessDescriptionHeader } from \"components/ProcessDescriptionHeader\";\nimport { AppBar } from \"components/AppBar\";\nimport { Button } from \"components/Button\";\nimport { ProcessPageFooter } from \"components/ProcessPageFooter\";\nimport { cancelLabel, nextLabel } from \"constants/buttons/labels\";\nimport { ProcessPageLayout } from \"components/ProcessPageLayout\";\nimport { PageContainer } from \"components/PageContainer\";\nimport { AccountRoutes } from \"features/account/constants/routes\";\nimport { Box, Grid, Typography } from \"@material-ui/core\";\nimport { StoreState } from \"redux/state\";\nimport { Loader } from \"components/Loader\";\nimport { CardRoutes } from \"features/card/constants/routes\";\nimport { LastDigitsInput } from \"features/card/components/Inputs/LastDigitsInput\";\nimport { FailCardState, SuccessCardState } from \"features/card/redux/state\";\nimport { updateCard, validateCard } from \"features/card/redux/actions\";\nimport { useStyles } from \"./AssociateFourDigits.style\";\nimport { Alert } from \"components/Alert\";\n\nexport const AssociateFourDigits: React.FC = () => {\n  const history = useHistory();\n  const dispatch = useDispatch();\n  const styles = useStyles();\n\n  const [panLastDigits, setPanLastDigits] = React.useState(\"\");\n  const [click, setClick] = React.useState(false);\n  const [disableNextButton, setDisableNextButton] = React.useState(false);\n  const card = useSelector((store: StoreState) => store.card.card);\n  const [loading, errorMessage] = useSelector<\n    StoreState,\n    [boolean, string | undefined]\n  >((state) => [state.card.loading, state.card.errorMessage]);\n  const cardState = useSelector((store: StoreState) => store.card);\n\n  const onSubmit = (e: React.FormEvent) => {\n    e.preventDefault();\n\n    dispatch(\n      updateCard({\n        ...card!,\n        panLastDigits: Number(panLastDigits),\n      })\n    );\n    dispatch(validateCard(panLastDigits));\n    setClick(true);\n  };\n\n  const onCancelButtonClick = () => {\n    history.replace(AccountRoutes.home);\n    dispatch(updateCard());\n  };\n\n  React.useEffect(() => {\n    panLastDigits.length !== 4\n      ? setDisableNextButton(true)\n      : setDisableNextButton(false);\n  }, [panLastDigits.length]);\n\n  React.useEffect(() => {\n    if (click && cardState instanceof SuccessCardState) {\n      history.push(CardRoutes.associateNationalityCard);\n    } else if (cardState instanceof FailCardState) {\n      history.push(CardRoutes.invalidDataForCard);\n    }\n  }, [cardState, history]);\n\n  return (\n    <PageContainer>\n      <ProcessPageLayout\n        appBar={\n          <AppBar\n            homeRoute={AccountRoutes.home}\n            action={\n              <Button\n                palette=\"secondary\"\n                size=\"small\"\n                startIcon={<Close color=\"primary\" />}\n                onClick={onCancelButtonClick}\n                data-test-id=\"cancel-button\"\n              >\n                {cancelLabel}\n              </Button>\n            }\n          />\n        }\n        header={\n          <Box>\n            <ProcessDescriptionHeader\n              title=\"Associar novo cartão\"\n              subtitle=\"Quase lá! Precisamos confirmar os dados do cartão\"\n              description=\"Insira os 4 últimos dígitos do número do seu cartão\"\n            />\n          </Box>\n        }\n        main={\n          <React.Fragment>\n            <Grid\n              direction=\"column\"\n              alignItems=\"center\"\n              data-test-id=\"four-digits\"\n            >\n              <Grid item component=\"form\">\n                <Typography className={styles.labelStyle}>\n                  <label>4 últimos dígitos do cartão</label>\n                </Typography>\n                <LastDigitsInput\n                  value={panLastDigits}\n                  setValue={setPanLastDigits}\n                />\n              </Grid>\n            </Grid>\n          </React.Fragment>\n        }\n        footer={\n          <ProcessPageFooter\n            primaryButton={\n              <Button\n                disabled={disableNextButton}\n                endIcon={<KeyboardArrowRight color=\"secondary\" />}\n                onClick={onSubmit}\n                data-test-id=\"next-button\"\n              >\n                {nextLabel}\n              </Button>\n            }\n          />\n        }\n      />\n      <Loader open={loading} />\n      {errorMessage && (\n        <Alert title=\"Erro\" message={errorMessage} severity=\"error\" />\n      )}\n    </PageContainer>\n  );\n};\n","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/card/pages/RequestDuplicate/BlockingReason/index.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/authentication/pages/FirstAccess/ConfirmPasswordFirstAccess/ConfirmPasswordFirstAccess.style.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/account/redux/actions.ts",["4868"],"import { Dispatch } from \"redux\";\nimport { ApiResponse } from \"_config/api\";\nimport { HttpClient } from \"_config/http\";\nimport {\n  AccountActions,\n  CloseAlertAction,\n  GetAccountDashboardFailAction,\n  GetAccountDashboardStartAction,\n  GetAccountDashboardSuccessAction,\n  GetBankStatementFailAction,\n  GetBankStatementStartAction,\n  GetBankStatementSuccessAction,\n  GetAllAccountsFailAction,\n  GetAllAccountsStartAction,\n  GetAllAccountsSuccessAction,\n  GetTransactionReceiptSuccessAction,\n  GetTransactionReceiptFailAction,\n  GetTransactionDetailsStartAction,\n  GetTransactionDetailsSuccessAction,\n  GetTransactionDetailsFailAction,\n  GetTransactionReceiptStartAction,\n  SelectAccountAction,\n  SetBankStatementFiltersAction,\n  ChangeAccountStartAction,\n  ChangeAccountSuccessAction,\n  ChangeAccountFailAction,\n  FixedAccountStartAction,\n  FixedAccountSuccessAction,\n  FixedAccountFailAction,\n  VerifyTransactionStart,\n  VerifyTransactionSuccess,\n} from \"./actionTypes\";\nimport { AccountDashboard } from \"features/account/redux/models/dashboard\";\nimport { GetAccountDashboardRequest } from \"features/account/redux/models/request/getAccountDashboard\";\nimport { GetAccountDashboardResponse } from \"features/account/redux/models/response/getAccountDashboard\";\nimport { GetState } from \"redux/state\";\nimport { getBaseRequestData } from \"_utils/http\";\nimport { GetBankStatementResponse } from \"./models/response/getBankStatement\";\nimport { GetBankStatementRequest } from \"./models/request/getBankStatement\";\nimport { GetAccountByLoginResponse } from \"./models/response/getAccountListByLogin\";\nimport { GetAccountListByLoginRequest } from \"./models/request/getAccountListByLogin\";\nimport { TransactionReceipt } from \"./models/transactionReceipt\";\nimport { GetTransactionReceiptResponse } from \"./models/response/getTransactionReceipt\";\nimport { GetTransactionReceiptRequest } from \"./models/request/getTransactionReceipt\";\nimport { OperationType } from \"./models/operationType\";\nimport { GetTransactionDetailsRequest } from \"./models/request/getTransactionDetails\";\nimport { GetTransactionDetailsResponse } from \"./models/response/getTransactionDetails\";\nimport { TransactionDetails } from \"./models/transactionDetails\";\nimport { BankStatementFilters } from \"./models/bankStatementFilters\";\nimport { Account } from \"./models/account\";\nimport { GetFixedAccountRequest } from \"./models/request/getFixedAccount\";\nimport { UiFunction } from \"./models/uiFunction\";\nimport { GetTransactionByOperationRequest } from \"./models/request/getTransactionByOperationsRequest\";\nimport { GetTransactionByOperationResponse } from \"./models/response/getTransactionByOperationResponse\";\n\nexport const getAccountDashboard =\n  (accountId?: number) => async (dispatch: Dispatch, getState: GetState) => {\n    dispatch<GetAccountDashboardStartAction>({\n      type: AccountActions.GET_ACCOUNT_DASHBOARD_START,\n    });\n\n    try {\n      const {\n        url,\n        defaultHeaders,\n        userTaxId: taxId,\n        userId,\n        accountId,\n        token,\n      } = await getBaseRequestData(\"/Account/FindAccountDashboard\", getState());\n      const data: GetAccountDashboardRequest = {\n        login: taxId!,\n        userId: userId!,\n        accountId: accountId!,\n      };\n\n      const response = await HttpClient.post<GetAccountDashboardResponse>(\n        url,\n        data,\n        {\n          headers: {\n            ...defaultHeaders,\n            Authorization: `Bearer ${token}`,\n          },\n        }\n      );\n\n      const { account, accounts, balance, uiFunctions } = response.data.data;\n      const convertedUiFunctions: any[] = [\n        ...Array.from({ length: 18 }, (_, i) => i + 1),\n      ].map(\n        (x) =>\n          UiFunction[UiFunction[x] as keyof typeof UiFunction] as UiFunction\n      );\n\n      const dashboard: AccountDashboard = {\n        accounts,\n        balance,\n        uiFunctions: convertedUiFunctions,\n      };\n\n      dispatch<GetAccountDashboardSuccessAction>({\n        type: AccountActions.GET_ACCOUNT_DASHBOARD_SUCCESS,\n        payload: {\n          account: account,\n          dashboard,\n        },\n      });\n    } catch (error: any) {\n      let response: ApiResponse | undefined;\n      if (error.response) response = error.response?.data;\n\n      dispatch<GetAccountDashboardFailAction>({\n        type: AccountActions.GET_ACCOUNT_DASHBOARD_FAIL,\n        payload: response?.message ?? error.message,\n      });\n    }\n  };\n\nexport const getBankStatement =\n  (dateFilter?: number) => async (dispatch: Dispatch, getState: GetState) => {\n    dispatch<GetBankStatementStartAction>({\n      type: AccountActions.GET_BANK_STATEMENT_START,\n    });\n\n    try {\n      const state = getState();\n      const { url, defaultHeaders, accountTaxId, token, userId, accountId } =\n        await getBaseRequestData(\"/Account/FindBankStatement\", state);\n\n      const filters: BankStatementFilters = Object.create(\n        state.account.bankStatementFilters ?? null\n      );\n\n      if (!filters.startDate) {\n        filters.startDate = new Date();\n        filters.startDate.setDate(\n          filters.startDate.getDate() - 30 - dateFilter!\n        );\n      }\n\n      filters.endDate = filters.endDate ?? new Date();\n\n      const data: GetBankStatementRequest = {\n        taxId: accountTaxId!,\n        bank: state.account.account?.bank,\n        bankBranch: state.account?.account?.bankBranch,\n        bankAccount: state.account?.account?.bankAccount,\n        bankAccountDigit: state.account.account?.bankAccountDigit,\n        accountId: accountId!,\n        startDate: filters.startDate,\n        endDate: filters.endDate,\n        transactionType: filters.transactionType,\n        tags: filters.tags,\n        userId: userId!,\n        operationType: filters.operationType,\n      };\n\n      const response = await HttpClient.post<GetBankStatementResponse>(\n        url,\n        data,\n        {\n          headers: {\n            ...defaultHeaders,\n            Authorization: `Bearer ${token}`,\n          },\n        }\n      );\n\n      const responseData = response.data.data;\n      const dayTransactionsList = responseData.transactions;\n      dispatch<GetBankStatementSuccessAction>({\n        type: AccountActions.GET_BANK_STATEMENT_SUCCESS,\n        payload: dayTransactionsList,\n      });\n    } catch (error: any) {\n      let response: ApiResponse | undefined;\n      if (error.response) response = error.response?.data;\n\n      dispatch<GetBankStatementFailAction>({\n        type: AccountActions.GET_BANK_STATEMENT_FAIL,\n        payload: response?.message ?? error.message,\n      });\n    }\n  };\n\nexport const getTransactionDetails =\n  (id: string, operationType: OperationType) =>\n  async (dispatch: Dispatch, getState: GetState) => {\n    dispatch<GetTransactionDetailsStartAction>({\n      type: AccountActions.GET_TRANSACTION_DETAILS_START,\n    });\n\n    try {\n      const state = getState();\n      const { account } = state;\n      const { url, defaultHeaders, token, accountId, userId, taxId } =\n        await getBaseRequestData(\"/Account/FindBankStatementDetails\", state);\n\n      const data: GetTransactionDetailsRequest = {\n        accountId: accountId!,\n        userId: userId!,\n        externalIdentifier: id,\n        operationType,\n        taxId: taxId,\n        bank: account.account?.spbBank,\n        bankBranch: account.account?.spbBankBranch,\n        bankAccount: account.account?.spbBankAccount,\n        bankAccountDigit: account.account?.spbBankAccountDigit,\n      };\n\n      const response = await HttpClient.post<GetTransactionDetailsResponse>(\n        url,\n        data,\n        {\n          headers: {\n            ...defaultHeaders,\n            Authorization: `Bearer ${token}`,\n          },\n        }\n      );\n\n      const responseData = response.data.data;\n      const details: TransactionDetails = {\n        ...responseData,\n        date: responseData.date ? new Date(responseData.date) : undefined,\n        dueDate: responseData.dueDate\n          ? new Date(responseData.dueDate)\n          : undefined,\n      };\n      dispatch<GetTransactionDetailsSuccessAction>({\n        type: AccountActions.GET_TRANSACTION_DETAILS_SUCCESS,\n        payload: details,\n      });\n    } catch (error: any) {\n      let response: ApiResponse | undefined;\n      if (error.response) response = error.response?.data;\n\n      dispatch<GetTransactionDetailsFailAction>({\n        type: AccountActions.GET_TRANSACTION_DETAILS_FAIL,\n        payload: response?.message ?? error.message,\n      });\n    }\n  };\n\nexport const getTransactionReceipt =\n  (id: string, operationType: OperationType) =>\n  async (dispatch: Dispatch, getState: GetState) => {\n    dispatch<GetTransactionReceiptStartAction>({\n      type: AccountActions.GET_TRANSACTION_RECEIPT_START,\n    });\n\n    try {\n      const state = getState();\n      const { account } = state;\n      const { url, defaultHeaders, token, accountId, userId, taxId } =\n        await getBaseRequestData(\"/Account/FindBankStatementDetails\", state);\n\n      const data: GetTransactionReceiptRequest = {\n        accountId: accountId!,\n        userId: userId!,\n        externalIdentifier: id,\n        operationType,\n        taxId: taxId,\n        bank: account.account?.spbBank,\n        bankBranch: account.account?.spbBankBranch,\n        bankAccount: account.account?.spbBankAccount,\n        bankAccountDigit: account.account?.spbBankAccountDigit,\n      };\n\n      const response = await HttpClient.post<GetTransactionReceiptResponse>(\n        url,\n        data,\n        {\n          headers: {\n            ...defaultHeaders,\n            Authorization: `Bearer ${token}`,\n          },\n        }\n      );\n\n      const responseData = response.data.data;\n      const receipt: TransactionReceipt = {\n        ...responseData,\n        date: responseData.date ? new Date(responseData.date) : null,\n      };\n      dispatch<GetTransactionReceiptSuccessAction>({\n        type: AccountActions.GET_TRANSACTION_RECEIPT_SUCCESS,\n        payload: receipt,\n      });\n    } catch (error: any) {\n      let response: ApiResponse | undefined;\n      if (error.response) response = error.response?.data;\n\n      dispatch<GetTransactionReceiptFailAction>({\n        type: AccountActions.GET_TRANSACTION_RECEIPT_FAIL,\n        payload: response?.message ?? error.message,\n      });\n    }\n  };\n\nexport const changeAccount =\n  (newAccount: Account) => async (dispatch: Dispatch) => {\n    try {\n      dispatch<ChangeAccountStartAction>({\n        type: AccountActions.CHANGE_ACCOUNT_START,\n      });\n\n      dispatch<ChangeAccountSuccessAction>({\n        type: AccountActions.CHANGE_ACCOUNT_SUCCESS,\n        payload: newAccount,\n      });\n    } catch (error: any) {\n      dispatch<ChangeAccountFailAction>({\n        type: AccountActions.CHANGE_ACCOUNT_FAIL,\n        payload: \"Falha ao mudar a conta do usuário\",\n      });\n    }\n  };\nexport const getAccountList =\n  () => async (dispatch: Dispatch, getState: GetState) => {\n    dispatch<GetAllAccountsStartAction>({\n      type: AccountActions.GET_ALL_ACCOUNTS_START,\n    });\n\n    try {\n      const state = getState();\n      const { url, defaultHeaders, accountTaxId, token, accountId, userId } =\n        await getBaseRequestData(\"Account/FindAllAccountsByTaxId\", state);\n\n      const data: GetAccountListByLoginRequest = {\n        login: accountTaxId!,\n        accountId: accountId!,\n        userId: userId!,\n      };\n\n      const response = await HttpClient.post<GetAccountByLoginResponse>(\n        url,\n        data,\n        {\n          headers: {\n            ...defaultHeaders,\n            Authorization: `Bearer ${token}`,\n          },\n        }\n      );\n\n      const responseData = response.data.data;\n      const { accounts } = responseData;\n      dispatch<GetAllAccountsSuccessAction>({\n        type: AccountActions.GET_ALL_ACCOUNTS_SUCCESS,\n        payload: accounts,\n      });\n    } catch (error: any) {\n      let response: ApiResponse | undefined;\n      if (error.response) response = error.response?.data;\n\n      dispatch<GetAllAccountsFailAction>({\n        type: AccountActions.GET_ALL_ACCOUNTS_FAIL,\n        payload: response?.message ?? error.message,\n      });\n    }\n  };\n\nexport const selectAccount = (accountId: number) => (dispatch: Dispatch) => {\n  dispatch<SelectAccountAction>({\n    type: AccountActions.SELECT_ACCOUNT,\n    payload: accountId,\n  });\n};\n\nexport const setBankStatementFilters = (\n  filters: BankStatementFilters\n): SetBankStatementFiltersAction => ({\n  type: AccountActions.SET_BANK_STATEMENT_FILTERS,\n  payload: filters,\n});\n\nexport const closeAlert = () => (dispatch: Dispatch) => {\n  dispatch<CloseAlertAction>({\n    type: AccountActions.CLOSE_ALERT,\n  });\n};\n\nexport const getFixedAccounts =\n  (accountId: number, fixed: boolean) =>\n  async (dispatch: Dispatch, getState: GetState) => {\n    dispatch<FixedAccountStartAction>({\n      type: AccountActions.FIXED_ACCOUNT_START,\n    });\n    try {\n      const state = getState();\n      const { url, defaultHeaders, token, userId } = await getBaseRequestData(\n        \"/Account/FixingChange\",\n        state\n      );\n\n      const data: GetFixedAccountRequest = {\n        isFixed: fixed,\n        accountId: accountId!,\n        userId: userId!,\n      };\n\n      const response = await HttpClient.put<any>(url, data, {\n        headers: {\n          ...defaultHeaders,\n          Authorization: `Bearer ${token}`,\n        },\n      });\n\n      if (!response.data.success) throw new Error(response.data.message);\n\n      dispatch<FixedAccountSuccessAction>({\n        type: AccountActions.FIXED_ACCOUNT_SUCCESS,\n      });\n    } catch (error: any) {\n      let response: ApiResponse | undefined;\n      if (error.response) response = error.response?.data;\n      dispatch<FixedAccountFailAction>({\n        type: AccountActions.FIXED_ACCOUNT_FAIL,\n        payload: response?.message ?? error.message,\n      });\n    }\n  };\n\nexport const verifyPixTransaction =\n  (operationId: number, operationType: OperationType) =>\n  async (dispatch: Dispatch, getState: GetState) => {\n    dispatch<VerifyTransactionStart>({\n      type: AccountActions.VERIFY_TRANSACTION_START,\n    });\n\n    const state = getState();\n    const { url, defaultHeaders, token } = await getBaseRequestData(\n      \"/Account/FindAccountOperation\",\n      state\n    );\n\n    const data: GetTransactionByOperationRequest = {\n      operationId: operationId,\n      operationType: operationType,\n    };\n\n    while (state.account.verifyTransaction?.externalIdentifier === null) {\n      const response = await HttpClient.post<GetTransactionByOperationResponse>(\n        url,\n        data,\n        {\n          headers: {\n            ...defaultHeaders,\n            Authorization: `Bearer ${token}`,\n          },\n        }\n      );\n\n      const responseData = response.data.data;\n      if (responseData.externalIdentifier)\n        dispatch<VerifyTransactionSuccess>({\n          type: AccountActions.VERIFY_TRANSACTION_SUCCESS,\n        });\n    }\n  };\n","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/topUp/redux/state.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/topUp/redux/actions.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/schedulePayments/pages/SheduleTransactionsFilter/SheduleTransactionsFilter.style.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/smsTransfer/redux/actions.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/card/pages/CancellationReplacementCard/index.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/topUp/pages/TopUpValue/TopUpValue.style.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/card/pages/Cancellation/CancelCardAlert/index.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/card/pages/Cancellation/CancelReason/index.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/onboarding/redux/actions.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/_utils/cryptography.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/card/pages/ActivateCard/PasswordCard/PasswordCard.style.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/components/SearchField/SearchField.styles.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/components/Validator/Validator.tsx",["4869"],"import { Grid, Typography } from \"@material-ui/core\";\nimport React from \"react\";\nimport { useStyles } from \"./Validator.style\";\nimport { Icon } from \"components/Icon\";\n\ninterface ValidatorProps {\n  description: string;\n  isValid?: boolean | undefined;\n  validation: Function;\n  onValidate?: (value: boolean | undefined) => void;\n  strictValidation?: boolean;\n  value?: string;\n}\nexport const Validator: React.FC<ValidatorProps> = ({\n  description,\n  isValid,\n  validation,\n  onValidate,\n  strictValidation,\n  value,\n  ...rest\n}) => {\n  const styles = useStyles();\n\n  React.useEffect(() => {\n    const result = validation(value);\n    onValidate!(result);\n  }, [value]);\n\n  const _getIcon = () => {\n    return isValid ? \"exclude\" : \"ellipse_24\";\n  };\n\n  const _getClassName = () => {\n    let className = `${styles.description} `;\n\n    if (isValid) className += styles.valid;\n    else if (strictValidation) className += styles.invalid;\n\n    return className;\n  };\n\n  return (\n    <Grid\n      container\n      alignItems=\"center\"\n      direction=\"row\"\n      spacing={1}\n      data-test-id=\"password-validator\"\n      {...rest}\n    >\n      <Grid item>\n        <Icon name={_getIcon()} />\n      </Grid>\n      <Grid item>\n        <Typography className={_getClassName()}>{description}</Typography>\n      </Grid>\n    </Grid>\n  );\n};\n","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/card/pages/ActivateCard/ConfirmationActivate/ConfirmationActivate.style.ts",["4870"],"/home/danielvitor/Documentos/Develop/stonebank_front/src/components/DateButton/DateButton.tsx",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/card/pages/AssociateNewCard/AssociateNewCard/AssociateNewCard.tsx",["4871","4872","4873"],"import React from \"react\";\nimport { useStyles } from \"./AssociateNewCard.style\";\nimport { Box, Card } from \"@material-ui/core\";\nimport { PageContainer } from \"components/PageContainer\";\nimport { ProcessPageLayout } from \"components/ProcessPageLayout\";\nimport { AppBar } from \"components/AppBar\";\nimport { ProcessDescriptionHeader } from \"components/ProcessDescriptionHeader\";\nimport { ProcessPageFooter } from \"components/ProcessPageFooter\";\nimport { Button } from \"components/Button\";\nimport { KeyboardArrowRight } from \"@material-ui/icons\";\nimport { InsertIdCard } from \"features/card/components/Inputs/InsertIdCard\";\nimport { ReadQrCodeButton } from \"features/card/components/ReadQrCodeButton\";\nimport { useHistory } from \"react-router-dom\";\nimport { CardRoutes } from \"features/card/constants/routes\";\nimport { AccountRoutes } from \"features/account/constants/routes\";\nimport { useMask } from \"hooks/useMask\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { StoreState } from \"redux/state\";\nimport { updateCard } from \"features/card/redux/actions\";\n\nexport const AssociateNewCard: React.FC = () => {\n  const styles = useStyles();\n  const history = useHistory();\n  const dispatch = useDispatch();\n  const [valueIdCard, setValueIdCard] = React.useState(\"\");\n  const card = useSelector((store: StoreState) => store.card.card);\n\n  const onNextButtonClick = () => {\n    history.push(CardRoutes.activeFourDigits);\n    dispatch(\n      updateCard({\n        ...card!,\n        identifierCard: valueIdCard,\n      })\n    );\n  };\n\n  return (\n    <PageContainer>\n      <ProcessPageLayout\n        appBar={<AppBar homeRoute={AccountRoutes.home} />}\n        header={\n          <Box className={styles.headerWrapper}>\n            <ProcessDescriptionHeader\n              title={\"Associar novo cartão\"}\n              subtitle={\"Primeiro vamos associá-lo à sua conta\"}\n              description={\n                \"Insira o código de identificação de 9 dígitos impresso em seu cartão\"\n              }\n            />\n          </Box>\n        }\n        main={\n          <React.Fragment>\n            <InsertIdCard value={valueIdCard} setValue={setValueIdCard} />\n            {/* <ReadQrCodeButton /> */}\n          </React.Fragment>\n        }\n        footer={\n          <ProcessPageFooter\n            primaryButton={\n              <Button\n                disabled={valueIdCard.length !== 9}\n                onClick={onNextButtonClick}\n                endIcon={<KeyboardArrowRight color=\"secondary\" />}\n                data-test-id=\"next-button\"\n              >\n                <span className={styles.nextButtonLabel}> Próximo </span>\n              </Button>\n            }\n          />\n        }\n      />\n    </PageContainer>\n  );\n};\n","/home/danielvitor/Documentos/Develop/stonebank_front/src/components/ActionListItem/ActionListItem.style.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/card/pages/ChangePassword/EnterNewPassword/index.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/card/pages/ChangePassword/ConfirmNewPassword/index.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/pix/components/SelectionButton/SelectionButton.style.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/card/pages/ActivateCard/ActivateCard/ActivateCard.style.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/transference/components/BankCard/BankCard.style.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/account/pages/Help/Help.view.tsx",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/pix/pages/ReceivePixTransfer/ReceivePixTransferQrCode/components/ShareImagePixQrCode/index.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/pix/pages/ReceivePixTransfer/ReceivePixTransferQrCode/components/ShareCode/index.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/taxPayment/pages/Gare/PaymentGareDescription/PaymentGareDescription.style.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/card/pages/ActivateCard/ConfirmPasswordCard/ConfirmPasswordCard.style.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/digitalWithdrawal/pages/MoneyCount/index.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/digitalWithdrawal/pages/DigitalWithdrawalStart/index.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/digitalWithdrawal/pages/DigitalWithdrawalSummary/index.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/card/pages/ChangePassword/EnterCurrentPassword/index.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/digitalWithdrawal/pages/ReadQrCodeDigitalWithdrawal/index.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/payment/pages/Summary/index.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/payment/pages/PaymentProcess/index.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/taxPayment/pages/Fgts/PaymentFgtsDescription/PaymentFgtsDescription.style.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/onboarding/pages/LandingPage/LandingPage.style.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/payment/pages/ScanBarcode/index.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/payment/pages/PaymentReceipt/index.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/taxPayment/redux/actionTypes.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/payment/pages/PaymentDescription/index.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/components/GreatButton/index.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/card/pages/AssociateNewCard/AssociateFourDigits/AssociateFourDigits.style.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/payment/pages/PaymentData/index.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/payment/pages/PaymentAttach/index.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/payment/pages/Home/index.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/payment/pages/ChangeValue/index.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/card/pages/CardOption/index.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/card/pages/CardManagement/index.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/account/redux/models/uiFunction.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/account/redux/actionTypes.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/topUp/redux/actionTypes.ts",["4874"],"import { TopUp } from \"./models/topUp\";\nimport { Product } from \"./models/product\";\nimport { getTopUpPeriodic } from \"./actions\";\n\nexport enum TopUpActions {\n  UPDATE_TOP_UP_DATA = \"UPDATE_TOP_UP_DATA\",\n\n  GENERATE_TOP_UP_START = \"GENERATE_TOP_UP_START\",\n  GENERATE_TOP_UP_SUCCESS = \"GENERATE_TOP_UP_SUCCESS\",\n  GENERATE_TOP_UP_FAIL = \"GENERATE_TOP_UP_FAIL\",\n\n  GET_TOP_UP_PRODUCTS_START = \"GET_TOP_UP_PRODUCTS_START\",\n  GET_TOP_UP_PRODUCTS_SUCCESS = \"GET_TOP_UP_PRODUCTS_SUCCESS\",\n  GET_TOP_UP_PRODUCTS_FAIL = \"GET_TOP_UP_PRODUCTS_FAIL\",\n\n  GET_PERIODIC_TOP_UP_START = \"GET_PERIODIC_TOP_UP_START\",\n  GET_PERIODIC_TOP_UP_SUCCESS = \"GET_PERIODIC_TOP_UP_SUCCESS\",\n  GET_PERIODIC_TOP_UP_FAIL = \"GET_PERIODIC_TOP_UP_FAIL\",\n\n  CLOSE_ALERT = \"CLOSE_ALERT\",\n}\n\nexport interface UpdateTopUpDataAction {\n  type: TopUpActions.UPDATE_TOP_UP_DATA;\n  payload?: TopUp;\n}\n\nexport interface GenerateTopUpStartAction {\n  type: TopUpActions.GENERATE_TOP_UP_START;\n}\n\nexport interface GenerateTopUpSuccessAction {\n  type: TopUpActions.GENERATE_TOP_UP_SUCCESS;\n}\n\nexport interface GenerateTopUpFailAction {\n  type: TopUpActions.GENERATE_TOP_UP_FAIL;\n  payload: string;\n}\n\nexport interface GetTopUpProductsStartAction {\n  type: TopUpActions.GET_TOP_UP_PRODUCTS_START;\n}\n\nexport interface GetTopUpProductsSuccessAction {\n  type: TopUpActions.GET_TOP_UP_PRODUCTS_SUCCESS;\n  payload: Product;\n}\n\nexport interface GetTopUpProductsFailAction {\n  type: TopUpActions.GET_TOP_UP_PRODUCTS_FAIL;\n  payload: string;\n}\n\nexport interface GetTopUpPeriodicStartAction {\n  type: TopUpActions.GET_PERIODIC_TOP_UP_START;\n}\n\nexport interface GetTopUpPeriodicSuccessAction {\n  type: TopUpActions.GET_PERIODIC_TOP_UP_SUCCESS;\n  payload: TopUp[];\n}\n\nexport interface GetTopUpPeriodicFailAction {\n  type: TopUpActions.GET_PERIODIC_TOP_UP_FAIL;\n  payload: string;\n}\nexport interface CloseAlertAction {\n  type: TopUpActions.CLOSE_ALERT;\n}\n\nexport type TopUpAction =\n  | UpdateTopUpDataAction\n  | GenerateTopUpStartAction\n  | GenerateTopUpSuccessAction\n  | GenerateTopUpFailAction\n  | GetTopUpProductsStartAction\n  | GetTopUpProductsSuccessAction\n  | GetTopUpProductsFailAction\n  | GetTopUpPeriodicStartAction\n  | GetTopUpPeriodicSuccessAction\n  | GetTopUpPeriodicFailAction\n  | CloseAlertAction;\n","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/digitalWithdrawal/pages/SelectValue/index.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/smsTransfer/redux/state.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/card/pages/RequestDuplicate/BlockingReason/BlockingReason.tsx",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/smsTransfer/redux/actionTypes.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/schedulePayments/redux/actions.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/onboarding/redux/actionTypes.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/authentication/components/AccessAccountButton/index.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/components/Validator/Validator.style.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/card/pages/AssociateNewCard/AssociateNewCard/AssociateNewCard.style.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/card/redux/state.ts",["4875"],"import { Card } from \"./models/card\";\nimport { ChangePinCard } from \"./models/changePinCard\";\nimport { User } from \"features/authentication/redux/models/user\";\nimport { ReasonCode } from \"./models/reasonCodeEnum\";\nimport { ActivateCard } from \"./models/activateCard\";\nimport { BindUnnamedCard } from \"./models/BindUnnamedCard\";\n\nexport interface CardState {\n  cards?: Card[];\n  card?: Card;\n  changePinCard?: ChangePinCard[];\n  activateCard?: ActivateCard;\n  loading: boolean;\n  errorMessage?: string;\n  bindUnnamedCard?: BindUnnamedCard;\n}\nexport class InitialCardState implements CardState {\n  loading: boolean = false;\n  errorMessage?: string;\n\n  constructor(\n    public card?: Card,\n    public cards?: Card[],\n    public changePinCard?: ChangePinCard[],\n    public reasonCode?: ReasonCode,\n    public activateCard?: ActivateCard,\n    public cancelCard?: Card,\n    public bindUnnamedCard?: BindUnnamedCard\n  ) {}\n}\n\nexport class LoadingCardState implements CardState {\n  loading: boolean = true;\n  errorMessage?: string;\n\n  constructor(\n    public card?: Card,\n    public cards?: Card[] | undefined,\n    public changePinCard?: ChangePinCard[],\n    public activateCard?: ActivateCard,\n    public cancelCard?: Card,\n    public bindUnnamedCard?: BindUnnamedCard\n  ) {}\n}\n\nexport class SuccessCardState implements CardState {\n  loading: boolean = false;\n  errorMessage?: string;\n\n  constructor(\n    public cards: Card[],\n    public card?: Card,\n    public changePinCard?: ChangePinCard[] | undefined,\n    public activateCard?: ActivateCard | undefined,\n    public inactivateCardAndReissue?: Card | undefined,\n    public cancelCard?: Card | undefined,\n    public bindUnnamedCard?: BindUnnamedCard\n  ) {}\n}\n\nexport class BlockAndUnBlockCardsState implements CardState {\n  loading: boolean = false;\n  errorMessage?: string;\n\n  constructor(public card?: Card) {}\n}\n\nexport class InactivateCardAndReissueState implements CardState {\n  loading: boolean = false;\n  errorMessage?: string;\n\n  constructor(public card: Card) {}\n}\nexport class SelectedReasonCode implements CardState {\n  loading: boolean = false;\n  errorMessage?: string;\n\n  constructor(public card: Card) {}\n}\nexport class UpdateCard implements CardState {\n  loading: boolean = false;\n  errorMessage?: string;\n\n  constructor(public card: Card) {}\n}\nexport class FailCardState implements CardState {\n  loading: boolean = false;\n\n  constructor(\n    public errorMessage: string,\n    public cards?: Card[] | undefined,\n    public card?: Card | undefined,\n    public changePinCard?: ChangePinCard[] | undefined,\n    public activateCard?: ActivateCard,\n    public inactivateAndReissueCard?: Card | undefined,\n    public cancelCard?: Card | undefined,\n    public bindUnnamedCard?: BindUnnamedCard\n  ) {}\n}\n","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/transference/redux/actions.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/schedulePayments/redux/models/futureTransactions.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/card/pages/CancellationReplacementCard/CancellationReplacementCard.tsx",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/card/pages/AssociateNewCard/AssociateNewCardCheck/AssociateNewCardCheck.style.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/taxPayment/redux/state.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/card/pages/Cancellation/CancelReason/CancelReason.tsx",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/_utils/masks/barCode.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/card/pages/Cancellation/CancelCardAlert/CancelCardAlert.tsx",["4876","4877"],"import React, { useState } from \"react\";\nimport { useStyles } from \"./CancelCardAlert.style\";\nimport { PageContainer } from \"components/PageContainer\";\nimport { useHistory } from \"react-router-dom\";\nimport { Close, KeyboardArrowRight } from \"@material-ui/icons\";\nimport { AppBar } from \"components/AppBar\";\nimport { Button } from \"components/Button\";\nimport { ProcessPageLayout } from \"components/ProcessPageLayout\";\nimport { ProcessDescriptionHeader } from \"components/ProcessDescriptionHeader\";\nimport { cancelLabel, nextLabel } from \"constants/buttons/labels\";\nimport { CardRoutes } from \"features/card/constants/routes\";\nimport { ProcessPageFooter } from \"components/ProcessPageFooter\";\nimport { Alert as AlertPopUp } from \"components/Alert\";\nimport { Typography, Box } from \"@material-ui/core\";\nimport { AccountRoutes } from \"features/account/constants/routes\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { StoreState } from \"redux/state\";\nimport { Card } from \"features/card/redux/models/card\";\nimport { Loader } from \"components/Loader\";\nimport { AuthorizationSheet } from \"components/AuthorizationSheet\";\nimport { cancelCard, updateCard } from \"features/card/redux/actions\";\nimport { SuccessCardState } from \"features/card/redux/state\";\nimport { AlertConcluded } from \"components/AlertConcluded\";\nimport { Icon } from \"components/Icon\";\n\nexport const CancelCardAlert: React.FC = () => {\n  const styles = useStyles();\n  const history = useHistory();\n  const dispatch = useDispatch();\n  const [openAuthorizationSheet, setOpenAuthorizationSheet] =\n    React.useState(false);\n\n  const [sentRequest, setSentRequest] = React.useState(false);\n  const [card, loading, errorMessage] = useSelector<\n    StoreState,\n    [Card | undefined, boolean, string | undefined]\n  >((state) => [state.card.card, state.card.loading, state.card.errorMessage]);\n\n  const cardState = useSelector((state: StoreState) => state.card);\n\n  const [onShowPopUp, setShowPopUp] = useState(false);\n\n  const onAuthorizationClose = (tokenIsValid: boolean) => {\n    if (tokenIsValid) {\n      dispatch(cancelCard(card?.identifierCard!));\n      setSentRequest(true);\n    }\n    setOpenAuthorizationSheet(false);\n  };\n\n  React.useEffect(() => {\n    dispatch(updateCard(cardState.card));\n  }, [dispatch]);\n\n  const onCancelButtonClick = () => {\n    history.replace(CardRoutes.cardOption);\n  };\n  const controlerPopUp = () => {\n    setOpenAuthorizationSheet(true);\n  };\n  const onClosePopUp = () => {\n    setShowPopUp(false);\n  };\n  const alertRedirect = () => {\n    history.push(CardRoutes.cardManagement);\n  };\n\n  React.useEffect(() => {\n    if (sentRequest && cardState instanceof SuccessCardState) {\n      setShowPopUp(true);\n    }\n  }, [cardState]);\n\n  return (\n    <PageContainer>\n      <ProcessPageLayout\n        appBar={\n          <AppBar\n            homeRoute={AccountRoutes.home}\n            action={\n              <Button\n                palette=\"secondary\"\n                size=\"small\"\n                startIcon={<Close color=\"primary\" />}\n                onClick={onCancelButtonClick}\n                data-test-id=\"cancel-button\"\n              >\n                {cancelLabel}\n              </Button>\n            }\n          />\n        }\n        header={\n          <React.Fragment>\n            <Box className={styles.desc}>\n              <ProcessDescriptionHeader title=\"Cancelar cartão\" />\n            </Box>\n            <Box className={styles.imageReference}>\n              <Box className={styles.image}>\n                <Icon name=\"alertWarningImg\" />\n              </Box>\n            </Box>\n          </React.Fragment>\n        }\n        main={\n          <React.Fragment>\n            <Typography className={styles.attention}>ATENÇÃO!</Typography>\n            <Box\n              className={styles.textDataContent}\n              data-test-id=\"cancel-card-alert\"\n            >\n              <p className={styles.textData}>\n                O cartão <strong>ELO - Final {card?.panLastDigits}</strong>\n                <span className={styles.textSpanData}>\n                  será <strong>cancelado</strong> definitivamente\n                </span>\n              </p>\n            </Box>\n            <Box className={styles.textAttempt} data-test-id=\"sub-alert\">\n              <Typography className={styles.subAlert}>\n                Essa ação não poderá ser desfeita,{\" \"}\n                <strong>certifique-se que deseja continuar.</strong>\n              </Typography>\n            </Box>\n          </React.Fragment>\n        }\n        footer={\n          <React.Fragment>\n            <ProcessPageFooter\n              primaryButton={\n                <Button\n                  endIcon={<KeyboardArrowRight color=\"secondary\" />}\n                  onClick={controlerPopUp}\n                  data-test-id=\"next-button\"\n                >\n                  {nextLabel}\n                </Button>\n              }\n            />\n            <AuthorizationSheet\n              open={openAuthorizationSheet}\n              onClose={onAuthorizationClose}\n            />\n            <Loader open={loading} />\n            {errorMessage && (\n              <AlertPopUp\n                title=\"Error\"\n                message={errorMessage}\n                severity=\"error\"\n              />\n            )}\n            <AlertConcluded\n              open={onShowPopUp}\n              title=\"Cartão cancelado\"\n              onClose={onClosePopUp}\n              onClick={alertRedirect}\n            />\n          </React.Fragment>\n        }\n      />\n    </PageContainer>\n  );\n};\n","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/card/pages/ChangePassword/ConfirmNewPassword/ConfirmNewPassword.tsx",["4878","4879","4880"],"import React from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { Box } from \"@material-ui/core\";\nimport { Close, KeyboardArrowRight } from \"@material-ui/icons\";\nimport { ProcessPageLayout } from \"components/ProcessPageLayout\";\nimport { PageContainer } from \"components/PageContainer\";\nimport { ProcessDescriptionHeader } from \"components/ProcessDescriptionHeader\";\nimport { AppBar } from \"components/AppBar\";\nimport { Button } from \"components/Button\";\nimport { ProcessPageFooter } from \"components/ProcessPageFooter\";\nimport { cancelLabel, nextLabel } from \"constants/buttons/labels\";\nimport { AccountRoutes } from \"features/account/constants/routes\";\nimport { useStyles } from \"./ConfirmNewPassword.style\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { StoreState } from \"redux/state\";\nimport { Validator } from \"features/card/components/Validator/Validator\";\nimport { Loader } from \"components/Loader\";\nimport { Alert } from \"components/Alert\";\nimport {\n  changePinCard,\n  closeAlert,\n  updateCard,\n} from \"features/card/redux/actions\";\nimport { AuthorizationSheet } from \"components/AuthorizationSheet\";\nimport { SuccessCardState } from \"features/card/redux/state\";\nimport { encryptNewPassword } from \"_utils/cryptography\";\n\nexport const ConfirmNewPassword: React.FC = () => {\n  const cardState = useSelector((s: StoreState) => s.card);\n  const { card, loading, errorMessage } = cardState;\n  const [openAuthorizationSheet, setOpenAuthorizationSheet] =\n    React.useState(false);\n  const [confirmationPin, setPasswordInput] = React.useState(\"\");\n  const [displayCards, setDisplayCards] = React.useState(card);\n  const [disableNextButton, setDisableNextButton] = React.useState(false);\n  const [passwordValidate, setPasswordValidate] = React.useState<\n    boolean | undefined\n  >();\n  const history = useHistory();\n  const style = useStyles();\n  const dispatch = useDispatch();\n\n  const onCancelButtonClick = () => {\n    history.go(-3);\n  };\n\n  React.useEffect(() => {\n    if (cardState instanceof SuccessCardState) history.go(-4);\n  }, [cardState]);\n\n  React.useEffect(() => {\n    setPasswordValidate(card?.pin === encryptNewPassword(confirmationPin));\n  }, [confirmationPin]);\n\n  React.useEffect(() => {\n    setDisableNextButton(confirmationPin.length !== 4);\n  }, [passwordValidate]);\n\n  React.useEffect(() => {\n    setDisplayCards(card);\n    if (card?.confirmationPin) setOpenAuthorizationSheet(true);\n  }, [card]);\n\n  const onSubmit = (event: React.FormEvent) => {\n    event.preventDefault();\n    dispatch(\n      updateCard({\n        ...card!,\n        confirmationPin: encryptNewPassword(confirmationPin),\n      })\n    );\n  };\n\n  const onAuthorizationSheetClose = (validatedToken: boolean) => {\n    setOpenAuthorizationSheet(false);\n\n    if (validatedToken) dispatch(changePinCard(card));\n  };\n\n  const onAlertClose = () => {\n    dispatch(closeAlert());\n  };\n\n  return (\n    <PageContainer>\n      <ProcessPageLayout\n        appBar={\n          <AppBar\n            homeRoute={AccountRoutes.home}\n            action={\n              <Button\n                palette=\"secondary\"\n                size=\"small\"\n                startIcon={<Close color=\"primary\" />}\n                onClick={onCancelButtonClick}\n                data-test-id=\"cancel-button\"\n              >\n                {cancelLabel}\n              </Button>\n            }\n          />\n        }\n        header={\n          <Box className={style.header}>\n            <ProcessDescriptionHeader\n              title={\"Alterar senha do Cartão\"}\n              subtitle={`Cartão final ${displayCards?.panLastDigits}`}\n              description=\"Agora insira novamente a sua nova senha\"\n            />\n          </Box>\n        }\n        main={\n          <Box onSubmit={onSubmit} className={style.main}>\n            <Validator\n              label=\"Confirmar senha\"\n              value={confirmationPin}\n              setValue={setPasswordInput}\n              strictValidation={passwordValidate}\n            />\n          </Box>\n        }\n        footer={\n          <ProcessPageFooter\n            primaryButton={\n              <Button\n                endIcon={<KeyboardArrowRight color=\"secondary\" />}\n                onClick={onSubmit}\n                disabled={disableNextButton}\n                data-test-id=\"next-button\"\n              >\n                {nextLabel}\n              </Button>\n            }\n          />\n        }\n      />\n      <Loader open={loading} />\n      {errorMessage && (\n        <Alert\n          title=\"Error\"\n          message={errorMessage}\n          severity=\"error\"\n          onClose={onAlertClose}\n        />\n      )}\n      <AuthorizationSheet\n        open={openAuthorizationSheet}\n        onClose={onAuthorizationSheetClose}\n      />\n    </PageContainer>\n  );\n};\n","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/card/pages/ChangePassword/EnterNewPassword/EnterNewPassword.tsx",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/account/pages/Help/Help.style.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/_assets/makeStyles/container/container.style.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/taxPayment/pages/taxPaymentHome/TaxPaymentHome.style.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/taxPayment/pages/Fgts/PaymentFgts/PaymentFgts.style.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/taxPayment/pages/Gare/PaymentGare/PaymentGare.style.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/taxPayment/pages/Gare/PaymentGareDateType/PaymentGareDateType.style.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/pix/pages/ReceivePixTransfer/ReceivePixTransferQrCode/components/ShareCode/ShareCode.tsx",["4881"],"import React, { useEffect, useState } from \"react\";\nimport { Box, Drawer, Grid, Typography } from \"@material-ui/core\";\nimport { Close } from \"@material-ui/icons\";\nimport { Button } from \"components/Button\";\nimport { PageContainer } from \"components/PageContainer\";\nimport { useStyles } from \"./ShareCode.style\";\nimport { useSelector } from \"react-redux\";\nimport { Clipboard } from \"ts-clipboard\";\nimport { StoreState } from \"redux/state\";\nimport { Alert } from \"components/Alert\";\n\ninterface ShareCodeProps {\n  open: boolean;\n  onClose: Function | ((ShareCodeValid: boolean) => void);\n}\n\nexport const ShareCode: React.FC<ShareCodeProps> = ({ open, onClose }) => {\n  const styles = useStyles();\n\n  const [alertMessage, setAlertMessage] = useState(\"\");\n  const { staticPixQrCode } = useSelector((state: StoreState) => state.pix);\n\n  const shareData = () => {\n    let data = staticPixQrCode?.hashCode!;\n\n    Clipboard.copy(data);\n    setAlertMessage(\"Copiado para área de transferência\");\n  };\n\n  const onCloseAlert = () => {\n    setAlertMessage(\"\");\n  };\n\n  const onCloseButtonClick = () => {\n    onClose(false);\n  };\n\n  return (\n    <React.Fragment>\n      <Drawer\n        className={styles.drawer}\n        anchor=\"bottom\"\n        elevation={0}\n        open={open}\n        onClose={() => onClose(false)}\n      >\n        <PageContainer>\n          <Box className={styles.content}>\n            <Box className={styles.closeButton}>\n              <Button\n                size=\"small\"\n                palette=\"secondary\"\n                onClick={onCloseButtonClick}\n                startIcon={<Close color=\"inherit\" />}\n              >\n                Fechar\n              </Button>\n            </Box>\n            <Grid container direction=\"column\" spacing={4}>\n              <Grid item>\n                <Typography variant=\"h6\" gutterBottom className={styles.title}>\n                  Código texto do QR Code copiado\n                </Typography>\n                <Typography variant=\"body2\" className={styles.subtitle}>\n                  <Box className={styles.qrCode}>\n                    {staticPixQrCode?.hashCode!}\n                  </Box>\n                  <Button palette=\"secondary\" onClick={shareData}>\n                    Copiar\n                  </Button>\n                </Typography>\n              </Grid>\n            </Grid>\n          </Box>\n        </PageContainer>\n        {alertMessage && (\n          <Alert\n            title=\"\"\n            message={alertMessage}\n            severity=\"info\"\n            onClose={onCloseAlert}\n          />\n        )}\n      </Drawer>\n    </React.Fragment>\n  );\n};\n","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/pix/pages/ReceivePixTransfer/ReceivePixTransferQrCode/components/ShareImagePixQrCode/ShareImagePixQrCode.tsx",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/taxPayment/redux/models/enum.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/digitalWithdrawal/pages/ReadQrCodeDigitalWithdrawal/ReadQrCodeDigitalWithdrawal.tsx",["4882","4883","4884","4885","4886"],"import React from \"react\";\nimport { AppBar } from \"components/AppBar\";\nimport { Close } from \"@material-ui/icons\";\nimport { ProcessDescriptionHeader } from \"components/ProcessDescriptionHeader\";\nimport { AccountRoutes } from \"features/account/constants/routes\";\nimport { QrCodeReader } from \"components/QrCodeReader\";\nimport { useHistory } from \"react-router-dom\";\nimport { Button } from \"components/Button\";\nimport { ProcessPageFooter } from \"components/ProcessPageFooter\";\nimport { cancelLabel } from \"constants/buttons/labels\";\nimport { PageContainer } from \"components/PageContainer\";\nimport { ProcessPageLayout } from \"components/ProcessPageLayout\";\nimport { Box, Typography } from \"@material-ui/core\";\nimport { useStyles } from \"./ReadQrCodeDigitalWithdrawal.style\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { StoreState } from \"redux/state\";\nimport { Loader } from \"components/Loader\";\nimport { Alert } from \"components/Alert\";\nimport { AuthorizationSheet } from \"components/AuthorizationSheet\";\nimport { DigitalWithdrawalRoutes } from \"features/digitalWithdrawal/constants\";\n\nexport const ReadQrCodeDigitalWithdrawal: React.FC = () => {\n  const [openAuthorizationSheet, setOpenAuthorizationSheet] =\n    React.useState(false);\n  const history = useHistory();\n  const styles = useStyles();\n\n  const onCancelButtonClick = () => {\n    history.replace(AccountRoutes.home);\n  };\n\n  const handleError = (e: any) => {};\n\n  const handleScan = (e: string | null) => {\n    if (e) setOpenAuthorizationSheet(true);\n  };\n  const onAuthorizationSheetClose = (tokenIsValid: boolean) => {\n    setOpenAuthorizationSheet(false);\n    if (tokenIsValid) history.push(DigitalWithdrawalRoutes.moneyCount);\n  };\n\n  return (\n    <PageContainer className={styles.container}>\n      <ProcessPageLayout\n        appBar={\n          <AppBar\n            homeRoute={AccountRoutes.home}\n            action={\n              <Button\n                palette=\"secondary\"\n                size=\"small\"\n                startIcon={<Close color=\"primary\" />}\n                onClick={onCancelButtonClick}\n                data-test-id=\"cancel-button\"\n              >\n                {cancelLabel}\n              </Button>\n            }\n          />\n        }\n        header={\n          <Typography align=\"center\">\n            <ProcessDescriptionHeader\n              title=\"Enviar transferência via QR Code\"\n              subtitle=\"Alinhe o QR code do recebedor na marcação da tela\"\n            />\n          </Typography>\n        }\n        main={\n          <Box className={styles.main} data-test-id=\"camera\">\n            <QrCodeReader\n              onScanFail={handleError}\n              onScanComplete={handleScan}\n            />\n          </Box>\n        }\n        footer={<ProcessPageFooter />}\n      />\n      <AuthorizationSheet\n        open={openAuthorizationSheet}\n        onClose={onAuthorizationSheetClose}\n      />\n    </PageContainer>\n  );\n};\n","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/digitalWithdrawal/pages/DigitalWithdrawalSummary/DigitalWithdrawalSummary.tsx",["4887","4888"],"import React, { useState } from \"react\";\nimport { AppBar } from \"components/AppBar\";\nimport { PageContainer } from \"components/PageContainer\";\nimport { ProcessPageLayout } from \"components/ProcessPageLayout\";\nimport { Button } from \"components/Button\";\nimport { ButtonReadQRCode } from \"../../components/ButtonReadQRCode\";\nimport { cancelLabel } from \"constants/buttons/labels\";\nimport { Close } from \"@material-ui/icons\";\nimport { useStyles } from \"./DigitalWithdrawalSummary.style\";\nimport { useHistory } from \"react-router\";\nimport { ProcessDescriptionHeader } from \"components/ProcessDescriptionHeader\";\nimport { Box, Typography } from \"@material-ui/core\";\nimport { ProcessPageFooter } from \"components/ProcessPageFooter\";\nimport { CurrencyFormatter } from \"_translate\";\nimport { AccountRoutes } from \"features/account/constants/routes\";\nimport { DigitalWithdrawalRoutes } from \"features/digitalWithdrawal/constants\";\n\nexport const DigitalWithdrawalSummary: React.FC = () => {\n  const history = useHistory();\n  const styles = useStyles();\n\n  const onCancelButtonClick = () => {\n    history.replace(AccountRoutes.home);\n  };\n\n  const onReadQRCodeButtonClick = () => {\n    history.push(DigitalWithdrawalRoutes.readQrCodeDigitalWithdrawal);\n  };\n\n  return (\n    <PageContainer>\n      <ProcessPageLayout\n        appBar={\n          <AppBar\n            homeRoute={AccountRoutes.home}\n            action={\n              <Button\n                palette=\"secondary\"\n                size=\"small\"\n                startIcon={<Close color=\"primary\" />}\n                onClick={onCancelButtonClick}\n                data-test-id=\"cancel-button\"\n              >\n                {cancelLabel}\n              </Button>\n            }\n          />\n        }\n        header={\n          <Box>\n            <ProcessDescriptionHeader title=\"Saque Digital\" />\n            <Typography align=\"center\" className={styles.subInformation}>\n              Confira o valor solicitado e as <br />\n              instruções para concluir o saque\n            </Typography>\n            <Typography align=\"center\" className={styles.value}>\n              {/* {CurrencyFormatter.format()} */}\n              R$500,00\n            </Typography>\n          </Box>\n        }\n        main={\n          <Box className={styles.content}>\n            <Typography className={styles.rateValue}>\n              + taxa de serviço de R$80,00 <br />\n              total da operação = R$580,80\n            </Typography>\n            <Typography className={styles.bank}>\n              Agora é no caixa eletrônico <br />\n              do Banco24horas\n            </Typography>\n            <Typography className={styles.instructions}>Selecione</Typography>\n            <Typography className={styles.instructionsSub}>\n              SAQUE DIGITAL\n            </Typography>\n            <Typography className={styles.instructions}>\n              em seguida em\n            </Typography>\n            <Typography className={styles.instructionsSub}>\n              Código QR\n            </Typography>\n            <Typography className={styles.instructions}>\n              ao aparecer o QR Code na tela do caixa <br />\n              aperte o botão abaixo\n            </Typography>\n\n            <ButtonReadQRCode\n              onClick={onReadQRCodeButtonClick}\n              className={styles.btnReadQrCode}\n            >\n              Ler QR Code\n            </ButtonReadQRCode>\n          </Box>\n        }\n        footer={<ProcessPageFooter />}\n      />\n    </PageContainer>\n  );\n};\n","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/card/pages/ChangePassword/EnterCurrentPassword/EnterCurrentPassword.tsx",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/digitalWithdrawal/pages/DigitalWithdrawalStart/DigitalWithdrawalStart.tsx",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/digitalWithdrawal/pages/MoneyCount/moneyCount.tsx",["4889","4890"],"import React from \"react\";\nimport { PageContainer } from \"components/PageContainer\";\nimport { ProcessPageLayout } from \"components/ProcessPageLayout\";\nimport { AppBar } from \"components/AppBar\";\nimport { ProcessDescriptionHeader } from \"components/ProcessDescriptionHeader\";\nimport { AccountRoutes } from \"features/account/constants/routes\";\nimport { Box, Typography } from \"@material-ui/core\";\nimport { useStyles } from \"./MoneyCount.style\";\nimport { useHistory } from \"react-router-dom\";\nimport { DigitalWithdrawalRoutes } from \"features/digitalWithdrawal/constants/routes\";\nimport { Icon } from \"components/Icon\";\n\nexport const MoneyCount: React.FC = () => {\n  const style = useStyles();\n\n  return (\n    <PageContainer>\n      <ProcessPageLayout\n        appBar={<AppBar homeRoute={AccountRoutes.home} />}\n        header={<ProcessDescriptionHeader title=\"Saque digital\" />}\n        main={\n          <Box className={style.main}>\n            <Typography className={style.text}>\n              Agora é só aguardar a <br />\n              contagem das notas e retirar\n              <br /> seu dinheiro\n            </Typography>\n            <Box className={style.clock}>\n              <Icon name={\"clock\"} className={style.proportions} />\n            </Box>\n          </Box>\n        }\n      />\n    </PageContainer>\n  );\n};\n","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/payment/pages/PaymentProcess/PaymentProcess.tsx",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/card/pages/RequestDuplicate/UpdateAddress/UpdateAddress.tsx",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/payment/pages/Summary/Summary.tsx",["4891","4892","4893","4894","4895"],"import React from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { StoreState } from \"redux/state\";\nimport { Box, Grid, Typography } from \"@material-ui/core\";\nimport { Close, KeyboardArrowRight } from \"@material-ui/icons\";\nimport { useStyles } from \"./Summary.style\";\nimport { AppBar } from \"components/AppBar\";\nimport { Button } from \"components/Button\";\nimport { DetailPaymentDescription } from \"features/payment/components/DetailPaymentDescription\";\nimport { PaymentRoutes } from \"features/payment/constants/routes\";\nimport { AccountRoutes } from \"features/account/constants/routes\";\nimport { ProcessDescriptionHeader } from \"components/ProcessDescriptionHeader\";\nimport { ProcessPageLayout } from \"components/ProcessPageLayout\";\nimport { ProcessPageFooter } from \"components/ProcessPageFooter\";\nimport { PageContainer } from \"components/PageContainer\";\nimport { cancelLabel, concludeLabel } from \"constants/buttons/labels\";\nimport { AuthorizationSheet } from \"components/AuthorizationSheet\";\nimport {\n  closeAlert,\n  createPayment,\n  updatePaymentData,\n} from \"features/payment/redux/actions\";\nimport { SuccessPaymentState } from \"features/payment/redux/state\";\nimport { Alert } from \"components/Alert\";\nimport { Loader } from \"components/Loader\";\nimport { TagChip } from \"features/tags/components/TagChip\";\nimport { OperationType } from \"features/account/redux/models/operationType\";\nimport { ShortDateFormatter } from \"_translate\";\n\nexport const Summary: React.FC = () => {\n  const history = useHistory();\n  const styles = useStyles();\n  const dispatch = useDispatch();\n  const [openAuthorizationSheet, setOpenAuthorizationSheet] =\n    React.useState(false);\n  const payment = useSelector((store: StoreState) => store.payment);\n  const { errorMessage, loading, paymentData } = payment;\n\n  const toggleDrawer = (open: boolean) => {\n    setOpenAuthorizationSheet(open);\n  };\n\n  React.useEffect(() => {\n    if (payment instanceof SuccessPaymentState)\n      history.replace(PaymentRoutes.paymentProcess);\n  });\n\n  const onConcludeButtonClick = () => {\n    setOpenAuthorizationSheet(true);\n  };\n\n  const onCancelButtonClick = () => dispatch(updatePaymentData());\n\n  const onAuthorizationClose = (tokenIsValid: boolean) => {\n    if (tokenIsValid) {\n      dispatch(createPayment());\n    }\n    setOpenAuthorizationSheet(false);\n  };\n\n  const onBackButtonClick = () =>\n    dispatch(updatePaymentData({ paymentValue: paymentData?.paymentValue }));\n  const onAlertClose = () => dispatch(closeAlert());\n\n  return (\n    <PageContainer>\n      <ProcessPageLayout\n        appBar={\n          <AppBar\n            homeRoute={AccountRoutes.home}\n            action={\n              <Button\n                palette=\"secondary\"\n                size=\"small\"\n                startIcon={<Close color=\"primary\" />}\n                onClick={onCancelButtonClick}\n                data-test-id=\"cancel-button\"\n              >\n                {cancelLabel}\n              </Button>\n            }\n          />\n        }\n        header={\n          <ProcessDescriptionHeader\n            title=\"Pagamentos\"\n            subtitle=\"Hora de conferir\"\n            description=\"Confira, cuidadosamente, os dados do pagamento.\"\n          />\n        }\n        main={\n          <Box>\n            <Grid\n              container\n              direction=\"column\"\n              justify=\"space-between\"\n              className={styles.contentValue}\n            >\n              <Grid item>\n                <DetailPaymentDescription\n                  paymentValue={payment.paymentData?.paymentValue!}\n                  receiverName={\n                    payment.paymentData?.concessionaireName ??\n                    payment.paymentData?.receiverName\n                  }\n                  paymentDate={payment.paymentData?.paymentDate!}\n                  description={payment.paymentData?.description!}\n                  bankName={payment.paymentData?.bankName!}\n                  tags={payment.paymentData?.tags?.join(\"\\n\")}\n                />\n                {/* <Grid className={styles.buttonDetailsPayment}>\n                  <AttachmentCard\n                    image={iconAttachmentButton}\n                    title={\"Video\"}\n                    info={\"25s\"}\n                  />\n                  <AttachmentCard\n                    image={iconAttachmentButton}\n                    title={\"Documento\"}\n                    info={\"136Kb\"}\n                  />\n                </Grid> */}\n                {/* <Grid className={styles.detailInfoTagsSummary}>\n                  <Box className={styles.contentValue}>\n                    {tags.map((i) => (\n                      <TagsExtract tag={i.tag} />\n                    ))}\n                  </Box>\n                </Grid> */}\n              </Grid>\n            </Grid>\n          </Box>\n        }\n        footer={\n          <Grid>\n            <ProcessPageFooter\n              primaryButton={\n                <Button\n                  palette=\"primary\"\n                  endIcon={<KeyboardArrowRight color=\"secondary\" />}\n                  onClick={onConcludeButtonClick}\n                  data-test-id=\"conclude-button\"\n                >\n                  {concludeLabel}\n                </Button>\n              }\n              onBackButtonClick={onBackButtonClick}\n            />\n          </Grid>\n        }\n      />\n      <AuthorizationSheet\n        open={openAuthorizationSheet}\n        onClose={onAuthorizationClose}\n      />\n      <Loader open={loading} />\n      {errorMessage && (\n        <Alert\n          title=\"Error\"\n          message={errorMessage}\n          severity=\"error\"\n          onClose={onAlertClose}\n        />\n      )}\n    </PageContainer>\n  );\n};\n","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/topUp/pages/PeriodicRepetition/PeriodicRepetition.style.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/topUp/pages/TopUpSchedule/TopUpSchedule.style.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/card/components/Validator/Validator.tsx",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/card/pages/RequestDuplicate/BlockCardAlert/BlockCardAlert.tsx",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/card/pages/RequestDuplicate/ReplacementDetails/ReplacementDetails.tsx",["4896","4897"],"import React from \"react\";\nimport { PageContainer } from \"components/PageContainer\";\nimport { ProcessPageLayout } from \"components/ProcessPageLayout\";\nimport { ProcessPageFooter } from \"components/ProcessPageFooter\";\nimport { ProcessDescriptionHeader } from \"components/ProcessDescriptionHeader\";\nimport { ReplacementData } from \"features/card/components/ReplacementData\";\nimport { OnboardingRoutes } from \"features/onboarding/constants/routes\";\nimport { Button } from \"components/Button\";\nimport { useStyles } from \"./ReplacementDetails.style\";\nimport { AppBar } from \"components/AppBar\";\nimport { Box } from \"@material-ui/core\";\nimport { cancelLabel, concludeLabel } from \"constants/buttons/labels\";\nimport { Close, KeyboardArrowRight } from \"@material-ui/icons\";\nimport { useHistory } from \"react-router-dom\";\nimport { PopUpConfirmPassword } from \"features/card/components/PopUp/PopUpConfirmPassword\";\nimport { CardRoutes } from \"features/card/constants/routes\";\nimport { useSelector } from \"react-redux\";\nimport { StoreState } from \"redux/state\";\nimport { Card } from \"features/card/redux/models/card\";\n\nexport const ReplacementDetails: React.FC = () => {\n  const styles = useStyles();\n  const history = useHistory();\n  const [openPasswordPopUp, setOpenPasswordPopUp] = React.useState(false);\n  const [openFinishedPopUp, setOpenFinishedPopUp] = React.useState(false);\n  const [card] = useSelector<StoreState, [Card | undefined]>((state) => [\n    state.card.card,\n  ]);\n  const { user } = useSelector((store: StoreState) => store.auth);\n\n  const onConcludeButtonClick = () => {\n    setOpenPasswordPopUp(true);\n  };\n  const onPasswordCloseButtonClick = () => {\n    setOpenPasswordPopUp(false);\n  };\n  const onPasswordConfirmButtonClick = () => {\n    setOpenFinishedPopUp(true);\n  };\n\n  const onAlertClick = () => {\n    history.push(CardRoutes.cardManagement);\n  };\n\n  const onCancelButtonClick = () => {\n    history.replace(CardRoutes.cardManagement);\n  };\n\n  return (\n    <PageContainer>\n      <ProcessPageLayout\n        appBar={\n          <AppBar\n            homeRoute={OnboardingRoutes.welcome}\n            action={\n              <Button\n                palette=\"secondary\"\n                size=\"small\"\n                startIcon={<Close color=\"primary\" />}\n                onClick={onCancelButtonClick}\n                data-test-id=\"cancel-button\"\n              >\n                {cancelLabel}\n              </Button>\n            }\n          />\n        }\n        header={\n          <Box className={styles.header}>\n            <ProcessDescriptionHeader\n              title=\"Segunda via do cartão\"\n              subtitle=\"Revise sua solicitação\"\n              description=\"Verifique os dados da solicitação antes de concluir.\"\n            />\n          </Box>\n        }\n        main={\n          <Box className=\"main\">\n            <ReplacementData\n              address={`${user?.street ?? \"\"}, nª ${user?.number ?? \"\"} - ${\n                user?.district ?? \"\"\n              } ${user?.city ?? \"\"}-${user?.state ?? \"\"}`}\n              card={`ELO - Final ${card?.panLastDigits}`}\n              deadline=\"14 dias úteis\"\n              value={15}\n            ></ReplacementData>\n          </Box>\n        }\n        footer={\n          <Box>\n            <ProcessPageFooter\n              primaryButton={\n                <Button\n                  palette=\"primary\"\n                  endIcon={<KeyboardArrowRight color=\"secondary\" />}\n                  onClick={onConcludeButtonClick}\n                  data-test-id=\"conclude-button\"\n                >\n                  {concludeLabel}\n                </Button>\n              }\n            />\n\n            <PopUpConfirmPassword\n              open={openPasswordPopUp}\n              onClose={onPasswordCloseButtonClick}\n              onClickAlert={onAlertClick}\n              alertTitle=\"Segunda via solicitada\"\n            />\n          </Box>\n        }\n      />\n    </PageContainer>\n  );\n};\n","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/payment/pages/ScanBarcode/ScanBarcode.tsx",["4898"],"import React from \"react\";\nimport { Box } from \"@material-ui/core\";\nimport { StoreState } from \"redux/state\";\nimport { Loader } from \"components/Loader\";\nimport { useStyles } from \"./ScanBarcode.style\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { PageContainer } from \"components/PageContainer\";\nimport { updatePaymentData } from \"features/payment/redux/actions\";\nimport { BarcodeScanner } from \"features/payment/components/BarcodeScanner\";\nimport { BarcodeHeader } from \"features/payment/components/BarcodeHeader\";\nimport { OrientationBarIcon } from \"features/payment/components/OrientationBarIcon\";\nimport { EnterCodeButton } from \"features/payment/components/EnterCodeButton\";\n\nexport const ScanBarcode: React.FC = () => {\n  const styles = useStyles();\n  const dispatch = useDispatch();\n\n  const paymentState = useSelector((state: StoreState) => state.payment);\n  const { loading } = paymentState;\n\n  React.useEffect(() => {\n    dispatch(updatePaymentData());\n  }, []);\n\n  return (\n    <PageContainer>\n      <Box className={styles.mainContainer}>\n        <Box className={styles.containerfooter}>\n          <Box className={styles.typeText}>\n            <EnterCodeButton />\n          </Box>\n        </Box>\n        <OrientationBarIcon />\n        <BarcodeHeader />\n        <Loader open={loading} />\n      </Box>\n      <BarcodeScanner />\n    </PageContainer>\n  );\n};\n","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/card/pages/RequestDuplicate/AddressConfirmation/AddressConfirmation.tsx",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/topUp/pages/TopUp/TopUp.style.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/topUp/pages/TopUpNumber/TopUpNumber.style.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/taxpayment/pages/Darj/PaymentDarj/PaymentDarj.style.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/payment/pages/PaymentReceipt/PaymentReceipt.tsx",["4899","4900"],"import React from \"react\";\nimport { PageContainer } from \"components/PageContainer\";\nimport { Box } from \"@material-ui/core\";\nimport { useStyles } from \"./PaymentReceipt.style\";\nimport { AppBar } from \"components/AppBar\";\nimport { ProcessPageLayout } from \"components/ProcessPageLayout\";\nimport { ProcessDescriptionHeader } from \"components/ProcessDescriptionHeader\";\n// import { ButtonWithFloatingIcon } from \"components/ButtonWithFloatingIcon\";\n// import { Authentication } from \"features/payment/components/Authentication\";\nimport { ReceiptDescription } from \"features/payment/components/ReceiptDescription\";\nimport { PaymentRoutes } from \"features/payment/constants/routes\";\nimport { Button } from \"components/Button\";\nimport { closeLabel, saveLabel, shareLabel } from \"constants/buttons/labels\";\nimport { useHistory } from \"react-router-dom\";\nimport { Close } from \"@material-ui/icons\";\nimport { useSelector } from \"react-redux\";\nimport { StoreState } from \"redux/state\";\nimport { AccountRoutes } from \"features/account/constants/routes\";\n\nexport const PaymentReceipt: React.FC = () => {\n  const payment = useSelector((store: StoreState) => store.payment);\n  const styles = useStyles();\n  const history = useHistory();\n\n  const onCloseButtonClick = () => {\n    history.replace(PaymentRoutes.completedPayment);\n  };\n\n  return (\n    <PageContainer>\n      <ProcessPageLayout\n        appBar={\n          <AppBar\n            homeRoute={AccountRoutes.home}\n            action={\n              <Button\n                palette=\"secondary\"\n                size=\"small\"\n                startIcon={<Close color=\"primary\" />}\n                onClick={onCloseButtonClick}\n                data-test-id=\"cancel-button\"\n              >\n                {closeLabel}\n              </Button>\n            }\n          />\n        }\n        header={<ProcessDescriptionHeader title=\"Comprovante\" />}\n        main={\n          <React.Fragment>\n            <Box className={styles.description}>\n              <ReceiptDescription\n                paymentValue={payment.paymentData?.paymentValue!}\n                receiverName={payment.paymentData?.receiverName!}\n                bank={payment.paymentData?.bankName!}\n                paymentDate={payment?.paymentData?.paymentDate!}\n                barcode={\"payment.barcode!\"}\n              />\n            </Box>\n            {/* <Box className={styles.separator} />\n            <Box className={styles.bottom}>\n              <Authentication\n                controlProtocol=\"44B8-4B9324C-2398721\"\n                internalProtocol=\"44B8-4B9324C-2398721320AB\"\n              />\n            </Box> */}\n            {/* <Box className={styles.bottom}>\n              <ButtonWithFloatingIcon size=\"large\">\n                {saveLabel}\n              </ButtonWithFloatingIcon>\n              <ButtonWithFloatingIcon size=\"large\">\n                {shareLabel}\n              </ButtonWithFloatingIcon>\n            </Box> */}\n          </React.Fragment>\n        }\n      />\n    </PageContainer>\n  );\n};\n","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/payment/pages/PaymentDescription/PaymentDescription.tsx",["4901","4902"],"import React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { StoreState } from \"redux/state\";\nimport { useHistory } from \"react-router-dom\";\nimport { ProcessPageLayout } from \"components/ProcessPageLayout\";\nimport { AppBar } from \"components/AppBar\";\nimport { Button } from \"components/Button\";\nimport { cancelLabel, nextLabel, skipLabel } from \"constants/buttons/labels\";\nimport { ProcessDescriptionHeader } from \"components/ProcessDescriptionHeader\";\nimport { Close, KeyboardArrowRight } from \"@material-ui/icons\";\nimport { Box, Grid } from \"@material-ui/core\";\nimport { ProcessPageFooter } from \"components/ProcessPageFooter\";\nimport { TextField } from \"components/TextField\";\nimport { useStyles } from \"./PaymentDescription.style\";\nimport { updatePaymentData } from \"features/payment/redux/actions\";\nimport { useDispatch } from \"react-redux\";\nimport { PaymentRoutes } from \"features/payment/constants/routes\";\nimport { AccountRoutes } from \"features/account/constants/routes\";\nimport { PageContainer } from \"components/PageContainer\";\nimport { Loader } from \"components/Loader\";\nimport { TagChip } from \"features/tags/components/TagChip\";\nimport { ButtonWithFloatingIcon } from \"components/ButtonWithFloatingIcon\";\nimport { TagEditPopUp } from \"components/TagEditPopUp\";\n\nexport const PaymentDescription: React.FC = () => {\n  const styles = useStyles();\n  const history = useHistory();\n  const dispatch = useDispatch();\n  const [openTagEditPopUp, setOpenTagEditPopUp] = React.useState(false);\n  const [inputText, setInputText] = React.useState(\"\");\n\n  const [originalPaymentValue, payementTags] = useSelector<\n    StoreState,\n    [number, string[] | undefined]\n  >((state) => [\n    state.payment.paymentData?.originalPaymentValue!,\n    state.payment.paymentData?.tags,\n  ]);\n  const loading = useSelector((state: StoreState) => state.tags.loading);\n\n  const payment = useSelector((store: StoreState) => store.payment);\n  const { paymentData } = payment;\n\n  const onCancelButtonClick = () => dispatch(updatePaymentData());\n\n  const onSkipLabelButtonClick = async (description: string) => {\n    dispatch(updatePaymentData({ description: description }));\n    history.push(PaymentRoutes.summary);\n  };\n\n  const handleChange = (event: any) => {\n    setInputText(event.target.value);\n  };\n\n  const onBackButtonClick = () => {\n    dispatch(updatePaymentData({ paymentValue: paymentData?.paymentValue }));\n  };\n\n  const onEditTagsButtonClick = () => {\n    setOpenTagEditPopUp(true);\n  };\n\n  const onEditTagsClose = () => {\n    setOpenTagEditPopUp(false);\n  };\n\n  const onTagClick = (tag: string) => {\n    dispatch(\n      updatePaymentData({ tags: payementTags!.filter((t) => t !== tag) })\n    );\n  };\n\n  return (\n    <PageContainer>\n      <ProcessPageLayout\n        appBar={\n          <AppBar\n            homeRoute={\"/\"}\n            action={\n              <Button\n                palette=\"secondary\"\n                size=\"small\"\n                startIcon={<Close color=\"primary\" />}\n                onClick={onCancelButtonClick}\n                data-test-id=\"cancel-button\"\n              >\n                {cancelLabel}\n              </Button>\n            }\n          />\n        }\n        header={\n          <ProcessDescriptionHeader\n            title=\"Pagamentos\"\n            subtitle=\"Deseja identificar seu pagamento no extrato?\"\n            description=\"Adicione uma descrição, arquivo, foto ou mesmo um vídeo para identificar melhor essa transação em seu histórico.\"\n          />\n        }\n        main={\n          <Box className={styles.customBody}>\n            <Box className={styles.customInput}>\n              <TextField\n                label=\"Descreva em uma frase\"\n                placeholder=\"Escreva sua frase\"\n                value={inputText}\n                onChange={handleChange}\n                data-test-id=\"inpu-text\"\n              />\n            </Box>\n            <Box className={styles.titleAndDescriptionFilter}>\n              <ProcessDescriptionHeader\n                subtitle=\"Tags\"\n                description=\"Caso queira, insira marcações para identificar seus gastos.\"\n              />\n            </Box>\n\n            <Box marginTop={1}>\n              <Grid container spacing={1}>\n                {payementTags?.map((tag) => (\n                  <Grid item key={tag}>\n                    <TagChip label={tag} onClick={onTagClick} />\n                  </Grid>\n                ))}\n              </Grid>\n            </Box>\n\n            <Box className={styles.buttonTagFloating}>\n              <ButtonWithFloatingIcon\n                onClick={onEditTagsButtonClick}\n                data-test-id=\"edit-button\"\n              >\n                Editar TAG\n              </ButtonWithFloatingIcon>\n            </Box>\n            <TagEditPopUp\n              onSaveTags={(tags) => dispatch(updatePaymentData({ tags }))}\n              open={openTagEditPopUp}\n              onClose={onEditTagsClose}\n            />\n          </Box>\n        }\n        footer={\n          <ProcessPageFooter\n            primaryButton={\n              <Button\n                endIcon={<KeyboardArrowRight color=\"secondary\" />}\n                onClick={() => onSkipLabelButtonClick(inputText)}\n                data-test-id=\"skip-label-button\"\n              >\n                {!inputText && !payementTags ? skipLabel : nextLabel}\n              </Button>\n            }\n            onBackButtonClick={onBackButtonClick}\n            data-test-id=\"back-button\"\n          />\n        }\n      />\n      <Loader open={loading} />\n    </PageContainer>\n  );\n};\n","/home/danielvitor/Documentos/Develop/stonebank_front/src/components/GreatButton/GreatButton.tsx",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/card/pages/RequestDuplicate/BlockingReason/BlockingReason.style.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/card/pages/CardManagement/CardManagement.tsx",["4903","4904","4905","4906"],"import React, { useState } from \"react\";\nimport { Box } from \"@material-ui/core\";\nimport { PageContainer } from \"components/PageContainer\";\nimport { ProcessPageLayout } from \"components/ProcessPageLayout\";\nimport { AppBar } from \"components/AppBar\";\nimport { ProcessDescriptionHeader } from \"components/ProcessDescriptionHeader\";\nimport { ProcessPageFooter } from \"components/ProcessPageFooter\";\nimport { SelectCardButton } from \"features/card/components/SelectCardButton\";\nimport { AccountRoutes } from \"features/account/constants/routes\";\nimport { CardRoutes } from \"features/card/constants/routes\";\nimport { useHistory } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Card } from \"features/card/redux/models/card\";\nimport { StoreState } from \"redux/state\";\nimport {\n  findCardList,\n  selectCard,\n  updateCard,\n} from \"features/card/redux/actions\";\nimport { Loader } from \"components/Loader\";\nimport { Alert } from \"components/Alert\";\nimport { KeyboardArrowLeft } from \"@material-ui/icons\";\nimport { Button } from \"components/Button\";\nimport { EmptyList } from \"components/EmptyList\";\nimport { ButtonWithFloatingIcon } from \"components/ButtonWithFloatingIcon\";\nimport { useStyles } from \"./CardManagement.style\";\nimport { Icon } from \"components/Icon\";\n\nexport const CardManagement: React.FC = () => {\n  const [cards, loading, errorMessage] = useSelector<\n    StoreState,\n    [Card[] | undefined, boolean, string | undefined]\n  >((state) => [state.card.cards, state.card.loading, state.card.errorMessage]);\n\n  const cardState = useSelector((state: StoreState) => state.card);\n\n  const history = useHistory();\n  const dispatch = useDispatch();\n  const styles = useStyles();\n\n  const [displayCards, setDisplayCards] = React.useState(cards);\n\n  const onAssociateButton = () => history.push(CardRoutes.associateNewCard);\n\n  const onSettings = () => history.push(AccountRoutes.settings);\n\n  const onBackButtonClick = () => {\n    history.replace(AccountRoutes.home);\n    dispatch(updateCard());\n  };\n\n  const onNextPageCard = (card: Card) => {\n    dispatch(selectCard(card));\n\n    if (card.status === 2) history.push(CardRoutes.activateCard);\n    else history.push(CardRoutes.cardOption);\n  };\n\n  const imageFlagCard = (flag: string) => {\n    switch (flag) {\n      case \"ELO\":\n        return <Icon name=\"eloImage\" />;\n\n      case \"VISA\":\n        return <Icon name=\"visaImage\" />;\n\n      case \"MasterCard\":\n        return <Icon name=\"visaImage\" />;\n    }\n  };\n\n  React.useEffect(() => {\n    dispatch(updateCard(cardState.card));\n  }, []);\n\n  React.useEffect(() => {\n    dispatch(findCardList());\n  }, []);\n\n  React.useEffect(() => {\n    setDisplayCards(cards);\n  }, [cards]);\n\n  const isEmptyList = () => {\n    return !displayCards?.length!;\n  };\n\n  return (\n    <PageContainer>\n      <ProcessPageLayout\n        appBar={<AppBar homeRoute={AccountRoutes.home} />}\n        header={\n          <ProcessDescriptionHeader\n            title=\"Gerenciamento de Cartões\"\n            subtitle=\"Aqui estão os cartões associados à sua conta\"\n            description=\"Selecione o cartão que deseja gerenciar\"\n          />\n        }\n        main={\n          <Box display=\"flex\" flexDirection=\"column\">\n            {isEmptyList() ? (\n              <EmptyList />\n            ) : (\n              <Box>\n                {displayCards?.map((cards) => (\n                  <SelectCardButton\n                    key={cards.identifierCard}\n                    card={cards}\n                    flagtype=\"ELO\"\n                    flagCard={imageFlagCard(\"ELO\")}\n                    onClick={() => onNextPageCard(cards)}\n                  />\n                ))}\n              </Box>\n            )}\n\n            {/* <Box className={styles.associateCard}>\n              <ButtonWithFloatingIcon\n                icon={iconAssociate}\n                onClick={onAssociateButton}\n              >\n                Associar cartão\n              </ButtonWithFloatingIcon>\n            </Box> */}\n          </Box>\n        }\n        footer={\n          <React.Fragment>\n            <Box className={styles.associateCard}>\n              <ButtonWithFloatingIcon\n                icon={<Icon name={\"iconAssociateCard\"} />}\n                onClick={onAssociateButton}\n                data-test-id=\"associate-card-button\"\n              >\n                Associar cartão\n              </ButtonWithFloatingIcon>\n            </Box>\n            <ProcessPageFooter\n              secondaryButton={\n                <Button\n                  palette=\"secondary\"\n                  startIcon={<KeyboardArrowLeft color=\"secondary\" />}\n                  onClick={onBackButtonClick}\n                >\n                  Voltar\n                </Button>\n              }\n            />\n          </React.Fragment>\n        }\n        footerPosition=\"fixed\"\n      />\n      <Loader open={loading} />\n      {errorMessage && (\n        <Alert title=\"Erro\" message={errorMessage} severity=\"error\" />\n      )}\n    </PageContainer>\n  );\n};\n","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/card/pages/CardOption/CardOption.tsx",["4907","4908"],"import React from \"react\";\nimport { Box, Typography } from \"@material-ui/core\";\nimport { PageContainer } from \"components/PageContainer\";\nimport { ProcessPageLayout } from \"components/ProcessPageLayout\";\nimport { AppBar } from \"components/AppBar\";\nimport { CardData } from \"features/card/components/CardData\";\nimport { useStyles } from \"./CardOption.style\";\nimport { ListButtonSwitch } from \"features/card/components/ListButton/ListButtonSwitch\";\nimport { PopUpTempBlock } from \"features/card/components/PopUp/PopUpTempBlock\";\nimport { AccountRoutes } from \"features/account/constants/routes\";\nimport { useHistory } from \"react-router-dom\";\nimport { CardRoutes } from \"features/card/constants/routes\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { SwitchIOS } from \"components/SwitchIOS\";\nimport { StoreState } from \"redux/state\";\nimport { ProcessPageFooter } from \"components/ProcessPageFooter\";\nimport { block, closeAlert, unblock } from \"features/card/redux/actions\";\nimport { Icon } from \"components/Icon\";\n\nexport const CardOption: React.FC = () => {\n  const { card, loading, errorMessage } = useSelector(\n    (state: StoreState) => state.card\n  );\n\n  const [openCardPopup, setOpenCardPopup] = React.useState(Boolean);\n  const [displayCard, setDisplayCard] = React.useState(card);\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const styles = useStyles();\n\n  React.useEffect(() => {\n    setDisplayCard(card);\n  }, [card]);\n\n  const imageFlagCard = (flag: string) => {\n    switch (flag) {\n      case \"ELO\":\n        return <Icon name=\"eloImage\" />;\n\n      case \"VISA\":\n        return <Icon name=\"visaImage\" />;\n\n      case \"MasterCard\":\n        return <Icon name=\"visaImage\" />;\n    }\n  };\n\n  const onChangePasswordClick = () =>\n    history.push(CardRoutes.enterCurrentPassword);\n\n  const onCancelCard = () => history.push(CardRoutes.cancel);\n\n  const onCardPopupClose = (password?: string) => {\n    setOpenCardPopup(false);\n    if (!password) return;\n\n    card!.isBlocked\n      ? dispatch(unblock(card!.identifierCard, password))\n      : dispatch(block(card!.identifierCard, password));\n  };\n\n  const onActiveButtonState = () => {\n    setOpenCardPopup(true);\n  };\n\n  React.useEffect(() => {\n    dispatch(closeAlert());\n  }, [errorMessage]);\n\n  return (\n    <PageContainer>\n      <ProcessPageLayout\n        appBar={<AppBar homeRoute={AccountRoutes.home} />}\n        header={\n          <Box>\n            <CardData\n              fullName={displayCard?.fullName}\n              panLastDigits={displayCard?.panLastDigits}\n              flagCard={imageFlagCard(\"ELO\")}\n            />\n            <Typography className={styles.idCard} data-test-id=\"id-card\">\n              IDCARD: {displayCard?.identifierCard}\n            </Typography>\n          </Box>\n        }\n        main={\n          <React.Fragment>\n            <Box\n              className={styles.descriptionBoxText}\n              data-test-id=\"card-option-description\"\n            >\n              <Typography className={styles.description}>\n                Seu cartão é aceito somente em estabelecimentos físicos na\n                função <strong>CRÉDITO</strong>. Até o limite do saldo\n                disponível em sua conta.\n              </Typography>\n            </Box>\n            <Box className={styles.listButtons}>\n              <ListButtonSwitch\n                title=\"Bloqueio temporário\"\n                onClick={onActiveButtonState}\n                right={<SwitchIOS checked={displayCard?.isBlocked ?? false} />}\n                data-test-id=\"activate-button-state\"\n              />\n              <ListButtonSwitch\n                title=\"Alterar Senha\"\n                onClick={onChangePasswordClick}\n                data-test-id=\"change-password\"\n              />\n              <ListButtonSwitch\n                title=\"Cancelar e 2ª Via\"\n                onClick={onCancelCard}\n                data-test-id=\"cancel-card\"\n              />\n            </Box>\n          </React.Fragment>\n        }\n        footer={\n          <Box>\n            <PopUpTempBlock\n              open={openCardPopup}\n              onClose={onCardPopupClose}\n              panLastDigits={displayCard?.panLastDigits}\n              identifier={displayCard?.identifierCard}\n              isBlocked={displayCard?.isBlocked}\n              flagName=\"ELO\"\n            />\n            <ProcessPageFooter />\n          </Box>\n        }\n      />\n      {/* <Loader open={loading} />\n      {errorMessage && (\n        <Alert\n          title=\"Erro\"\n          message={errorMessage}\n          severity=\"error\"\n          onClose={onAlertClose}\n        />\n      )} */}\n    </PageContainer>\n  );\n};\n","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/payment/pages/ChangeValue/ChangeValue.tsx",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/schedulePayments/redux/actionTypes.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/payment/pages/Home/Home.tsx",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/payment/pages/PaymentAttach/PaymentAttach.tsx",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/payment/pages/PaymentData/PaymentData.tsx",["4909"],"import React from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { PageContainer } from \"components/PageContainer\";\nimport { useHistory } from \"react-router-dom\";\nimport { Grid, Typography, Box } from \"@material-ui/core\";\nimport { TextField } from \"components/TextField\";\nimport { AppBar } from \"components/AppBar\";\nimport { ProcessPageLayout } from \"components/ProcessPageLayout\";\nimport { ProcessDescriptionHeader } from \"components/ProcessDescriptionHeader\";\nimport { cancelLabel, nextLabel } from \"constants/buttons/labels\";\nimport { Close, KeyboardArrowRight } from \"@material-ui/icons\";\nimport { Button } from \"components/Button\";\nimport { ProcessPageFooter } from \"components/ProcessPageFooter\";\nimport { ReceiverAndValue } from \"features/payment/components/ReceiverAndValue\";\nimport { ShortDateFormatter } from \"_translate\";\nimport { useStyles } from \"./PaymentData.style\";\nimport { PaymentRoutes } from \"features/payment/constants/routes\";\nimport { SchedulingButton } from \"components/SchedulingButton\";\nimport { StoreState } from \"redux/state\";\nimport { AccountRoutes } from \"features/account/constants/routes\";\nimport { Loader } from \"components/Loader\";\nimport { Alert } from \"components/Alert\";\nimport { closeAlert, updatePaymentData } from \"features/payment/redux/actions\";\nimport { PopUpErrorMessage } from \"components/PopUpErrorMessage\";\nimport { ErrorPaymentState } from \"features/payment/redux/state\";\nimport { ErrorMessage } from \"components/ErrorMessage\";\n\nexport const PaymentData: React.FC = () => {\n  const balance = useSelector((state: StoreState) => state.account.dashboard);\n  const history = useHistory();\n  const { paymentData, loading, errorMessage } = useSelector(\n    (state: StoreState) => state.payment\n  );\n  const [paymentDate, setPaymentDate] = React.useState<Date | null>(\n    paymentData?.paymentDate!\n  );\n  const [minDate] = React.useState<Date>(new Date());\n  const [openDatePicker, setOpenDatePicker] = React.useState(false);\n  const dispatch = useDispatch();\n  const style = useStyles();\n  const paymentState = useSelector((state: StoreState) => state.payment);\n\n  const paymentDateIsToday = React.useMemo(() => {\n    const removeTime = (date: Date) => {\n      const d = new Date(date);\n      d.setHours(0);\n      d.setMinutes(0);\n      d.setSeconds(0);\n      d.setMilliseconds(0);\n\n      return d;\n    };\n    return (\n      paymentDate &&\n      removeTime(paymentDate).getTime() === removeTime(new Date()).getTime()\n    );\n  }, [paymentDate]);\n\n  const onCancelButtonClick = () => {\n    dispatch(updatePaymentData());\n    history.replace(AccountRoutes.home);\n  };\n\n  const onNextButtonClick = () => {\n    history.push(PaymentRoutes.paymentEmptyDescription);\n  };\n\n  const onSchedulingButtonClick = () => {\n    setOpenDatePicker(true);\n  };\n\n  const onDatePickerClose = () => {\n    setOpenDatePicker(false);\n  };\n\n  const onStartDateChange = (date: Date | null) => {\n    if (date) {\n      setPaymentDate(date);\n      dispatch(updatePaymentData({ paymentDate: date }));\n    }\n  };\n\n  const onAlertClose = () => dispatch(closeAlert());\n  const onBackButtonClick = () => dispatch(updatePaymentData());\n  const error = paymentState instanceof ErrorPaymentState;\n  const errorBalance = balance?.balance! < paymentData?.paymentValue!;\n\n  return (\n    <PageContainer>\n      <ProcessPageLayout\n        appBar={\n          <AppBar\n            homeRoute={AccountRoutes.home}\n            action={\n              <Button\n                palette=\"secondary\"\n                size=\"small\"\n                startIcon={<Close color=\"primary\" />}\n                onClick={onCancelButtonClick}\n                data-test-id=\"cancel-button\"\n              >\n                {cancelLabel}\n              </Button>\n            }\n          />\n        }\n        header={\n          <React.Fragment>\n            <ProcessDescriptionHeader\n              title=\"Pagamentos\"\n              subtitle=\"Data do pagamento\"\n            />\n            <Box className={style.marginHeader}>\n              <ReceiverAndValue\n                receiver={\n                  paymentData?.concessionaireName ?? paymentData?.receiverName\n                }\n                value={paymentData?.paymentValue}\n              />\n            </Box>\n          </React.Fragment>\n        }\n        main={\n          <React.Fragment>\n            <Box className={style.customTexts}>\n              {paymentData?.dueDate && (\n                <Typography\n                  variant=\"body2\"\n                  className={style.dueDateStyle}\n                  data-test-id=\"due-date\"\n                >\n                  Vencimento {ShortDateFormatter.format(paymentData?.dueDate)}\n                </Typography>\n              )}\n            </Box>\n            <Grid>\n              {error && (\n                <Alert message={errorMessage} title=\"Erro\" severity={\"error\"} />\n              )}\n              {errorBalance && <ErrorMessage message={\"Saldo insuficiente\"} />}\n              <Box className={style.customInput}>\n                <TextField\n                  data-test-id=\"display-date\"\n                  label=\"Quando?\"\n                  placeholder=\"Hoje\"\n                  value={\n                    paymentDateIsToday\n                      ? \"Hoje\"\n                      : ShortDateFormatter.format(paymentDate ?? new Date())\n                  }\n                />\n              </Box>\n              <Box className={style.customTexts}>\n                <Typography variant=\"caption\" className={style.infoText}>\n                  Pagamentos realizados em fins de semana ou feriados serão\n                  agendados para o próximo dia útil.\n                </Typography>\n              </Box>\n              <Box className={style.buttonDate}>\n                <SchedulingButton\n                  open={openDatePicker}\n                  onClose={onDatePickerClose}\n                  value={paymentDate}\n                  onDateSelection={onStartDateChange}\n                  onClick={onSchedulingButtonClick}\n                  minDate={minDate}\n                  disabled={error || errorBalance}\n                />\n              </Box>\n            </Grid>\n          </React.Fragment>\n        }\n        footer={\n          <ProcessPageFooter\n            primaryButton={\n              <Button\n                endIcon={<KeyboardArrowRight color=\"secondary\" />}\n                onClick={onNextButtonClick}\n                disabled={error || errorBalance}\n                data-test-id=\"next-button\"\n              >\n                {nextLabel}\n              </Button>\n            }\n            onBackButtonClick={onBackButtonClick}\n          />\n        }\n      />\n      <Loader open={loading} />\n      {errorMessage && (\n        <Alert\n          title=\"Erro\"\n          message={errorMessage}\n          severity={\"error\"}\n          onClose={onAlertClose}\n        />\n      )}\n    </PageContainer>\n  );\n};\n","/home/danielvitor/Documentos/Develop/stonebank_front/src/components/PasswordField/index.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/components/DetailSmsTransferDescription/index.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/digitalWithdrawal/pages/SelectValue/SelectValue.tsx",["4910"],"import { Box, Typography, TextField, InputLabel } from \"@material-ui/core\";\nimport { ChevronRight, Close } from \"@material-ui/icons\";\nimport { AppBar } from \"components/AppBar\";\nimport { Button } from \"components/Button\";\nimport { ButtonWithFloatingIcon } from \"components/ButtonWithFloatingIcon\";\nimport { PageContainer } from \"components/PageContainer\";\nimport { ProcessDescriptionHeader } from \"components/ProcessDescriptionHeader\";\nimport { ProcessPageFooter } from \"components/ProcessPageFooter\";\nimport { ProcessPageLayout } from \"components/ProcessPageLayout\";\nimport { cancelLabel, nextLabel } from \"constants/buttons/labels\";\nimport React from \"react\";\nimport { useStyles } from \"./SelectValue.style\";\nimport { useHistory } from \"react-router-dom\";\nimport { DigitalWithdrawalRoutes } from \"features/digitalWithdrawal/constants/routes\";\nimport { AccountRoutes } from \"features/account/constants/routes\";\nimport { StoreState } from \"redux/state\";\nimport { useSelector } from \"react-redux\";\nimport { CurrencyFormatter } from \"_translate\";\n\nexport const SelectValue: React.FC = () => {\n  const [valueWithdrawal, setValueWithdrawal] = React.useState(0);\n  const styles = useStyles({ valueWithdrawal });\n  const history = useHistory();\n  const { balance } = useSelector((store: StoreState) => ({\n    balance: store.account.dashboard!.balance,\n  }));\n  const [disableNextButton, setDisableNextButton] = React.useState(false);\n\n  const onCancelButtonClick = () => {\n    history.replace(AccountRoutes.home);\n  };\n  const onNextButtonClick = () => {\n    history.push(DigitalWithdrawalRoutes.digitalWithdrawalSummary);\n  };\n\n  const onCleanValueButtonClick = () => {\n    setValueWithdrawal(0);\n  };\n\n  React.useEffect(() => {\n    valueWithdrawal !== 0\n      ? setDisableNextButton(false)\n      : setDisableNextButton(true);\n  }, [valueWithdrawal]);\n\n  const onAddValueButtonClick = (addValue: number) => {\n    const newValue = valueWithdrawal + addValue;\n    if (newValue > balance || newValue > 1200) return;\n    setValueWithdrawal(valueWithdrawal + addValue);\n  };\n\n  return (\n    <PageContainer>\n      <ProcessPageLayout\n        appBar={\n          <AppBar\n            homeRoute={AccountRoutes.home}\n            action={\n              <Button\n                palette=\"secondary\"\n                size=\"small\"\n                startIcon={<Close color=\"primary\" />}\n                onClick={onCancelButtonClick}\n                data-test-id=\"cancel-button\"\n              >\n                {cancelLabel}\n              </Button>\n            }\n          />\n        }\n        header={\n          <Box>\n            <ProcessDescriptionHeader title=\"Saque digital\" />\n            <Box className={`${styles.topSide} ${styles.centerContent}`}>\n              <Box className={styles.currentBalance}>\n                <Typography>\n                  Seu saldo <strong>{CurrencyFormatter.format(balance)}</strong>\n                </Typography>\n              </Box>\n\n              <InputLabel className={styles.valueLabel} htmlFor=\"value\">\n                Quanto deseja sacar?\n              </InputLabel>\n              <Typography className={styles.valueInput}>\n                {valueWithdrawal\n                  ? `${CurrencyFormatter.format(valueWithdrawal)}`\n                  : \"R$ 0,00\"}\n              </Typography>\n            </Box>\n          </Box>\n        }\n        main={\n          <Box>\n            <Box className={`${styles.bottomSide} ${styles.centerContent}`}>\n              <Typography className={styles.limitWrapper}>\n                Limite por saque R$ 1.200,00 Limite diário disponível R$ 600,00\n              </Typography>\n\n              <Typography className={styles.addValueTitle}>\n                Adicione valores à seu saque\n              </Typography>\n\n              <Box className={styles.buttonGroup}>\n                {[20, 50, 100, 300, 500, 1000].map((value, key) => (\n                  <Button\n                    key={key}\n                    onClick={() => onAddValueButtonClick(value)}\n                    palette=\"secondary\"\n                  >\n                    + R$ <span>{value}</span>,00\n                  </Button>\n                ))}\n              </Box>\n\n              <ButtonWithFloatingIcon\n                className={styles.valueWithdrawal}\n                onClick={onCleanValueButtonClick}\n              >\n                Limpar valor\n              </ButtonWithFloatingIcon>\n\n              <Box className={styles.descriptionWrapper}>\n                <Typography className={styles.description}>\n                  O caixa do Banco24horas dispõe notas de R$20,00, R$50,00 e\n                  R$100,00\n                </Typography>\n                <Typography className={styles.description}>\n                  Taxa de serviço de R$10,80 por saque\n                </Typography>\n              </Box>\n            </Box>\n          </Box>\n        }\n        footer={\n          <ProcessPageFooter\n            primaryButton={\n              <Button\n                onClick={onNextButtonClick}\n                endIcon={<ChevronRight color=\"secondary\" />}\n                disabled={disableNextButton}\n              >\n                {nextLabel}\n              </Button>\n            }\n          />\n        }\n      />\n    </PageContainer>\n  );\n};\n","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/schedulePayments/pages/ScheduleTransactionsList/ScheduleTransactionsList.style.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/components/EmptyList/index.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/card/pages/CancellationReplacementCard/CancellationReplacementCard.style.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/transference/redux/actionTypes.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/card/pages/Cancellation/CancelReason/CancelReason.style.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/authentication/components/AccessAccountButton/AccessAccountButton.tsx",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/card/pages/Cancellation/CancelCardAlert/CancelCardAlert.style.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/card/pages/ChangePassword/EnterNewPassword/EnterNewPassword.style.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/card/components/CardData/index.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/components/TagEditPopUp/index.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/taxPayment/pages/Darj/PaymentDarjDescription/PaymentDarjDescription.style.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/card/components/Inputs/PasswordInput/index.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/taxPayment/pages/Fgts/PaymentFgtsDate/PaymentFgtsDate.style.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/card/pages/ChangePassword/ConfirmNewPassword/ConfirmNewPassword.style.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/schedulePayments/pages/FutureTransactions/FutureTransactions.style.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/pix/pages/ReceivePixTransfer/ReceivePixTransferQrCode/components/ShareImagePixQrCode/ShareImagePixQrCode.style.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/taxPayment/components/DetailsFgtsDescription/index.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/taxPayment/pages/Fgts/PaymentFgtsBarCode/PaymentFgtsBarCode.style.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/taxPayment/pages/Fgts/PaymentFgtsIdentifier/PaymentFgtsIdentifier.style.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/taxPayment/components/DetailsGareDescription/index.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/pix/pages/ReceivePixTransfer/ReceivePixTransferQrCode/components/ShareCode/ShareCode.style.ts",["4911"],"import { alpha, makeStyles } from \"@material-ui/core\";\nimport { colors } from \"_config/theme\";\n\nexport const useStyles = makeStyles({\n  drawer: {\n    \"& .MuiDrawer-paper\": {\n      background: \"transparent\",\n    },\n  },\n  content: {\n    padding: \"16px\",\n    marginTop: \"12px\",\n    minHeight: \"212px\",\n    position: \"relative\",\n    borderTopLeftRadius: \"16px\",\n    borderTopRightRadius: \"16px\",\n    color: colors.readOnly.light.white,\n    backgroundColor: colors.system.light.primary,\n  },\n  closeButton: {\n    top: \"-12px\",\n    right: \"16px\",\n    position: \"absolute\",\n  },\n  buttonsRow: {\n    marginBottom: \"24px\",\n  },\n  subtitle: {\n    opacity: \"0.9px\",\n    textAlign: \"center\",\n    fontSize: \"15px\",\n  },\n  title: {\n    textAlign: \"center\",\n    fontSize: \"18px\",\n  },\n  qrCode: {\n    wordBreak: \"break-all\",\n    marginBottom: \"15px\",\n  },\n});\n","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/card/pages/ChangePassword/EnterCurrentPassword/EnterCurrentPassword.style.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/digitalWithdrawal/pages/MoneyCount/MoneyCount.style.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/account/components/AccountSheet/index.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/account/components/AccountBalance/index.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/payment/pages/PaymentProcess/PaymentProcess.style.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/tags/components/TagChip/index.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/card/pages/RequestDuplicate/BlockCardAlert/BlockCardAlert.style.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/card/pages/RequestDuplicate/ReplacementDetails/ReplacementDetails.style.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/card/pages/RequestDuplicate/AddressConfirmation/AddressConfirmation.style.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/payment/components/ShowBalanceButton/index.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/card/pages/CardManagement/CardManagement.style.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/payment/pages/PaymentData/PaymentData.style.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/card/redux/models/reasonCodeEnum.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/digitalWithdrawal/pages/SelectValue/SelectValue.style.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/components/GreatButton/GreatButton.style.tsx",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/card/components/Inputs/LastDigitsInput/index.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/components/PasswordField/PasswordField.tsx",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/components/DetailSmsTransferDescription/DetailSmsTransferDescription.tsx",["4912","4913"],"import React from \"react\";\nimport { CurrencyFormatter, DateFormatter } from \"_translate\";\nimport { useStyles } from \"./DetailSmsTransferDescription.style\";\nimport { Box, Typography } from \"@material-ui/core\";\nimport { TransactionDetail } from \"components/TransactionDetail\";\nimport { TransactionDetailName } from \"components/TransactionDetailName\";\nimport { TransactionDetailValue } from \"components/TransactionDetailValue\";\n\ninterface DetailSmsTransferDescriptionProps {\n  value: number;\n  number: string;\n  date: Date;\n  name?: string;\n}\n\nexport const DetailSmsTransferDescription: React.FC<\n  DetailSmsTransferDescriptionProps\n> = ({ value, number, date, name }) => {\n  const styles = useStyles();\n  return (\n    <React.Fragment data-test-id=\"detail-sms-transfer-description\">\n      <TransactionDetail className={styles.detailSmsTransferContent}>\n        <TransactionDetailName>Transferência no valor de</TransactionDetailName>\n        <TransactionDetailValue className={styles.transferDetail}>\n          {CurrencyFormatter.format(value)}\n        </TransactionDetailValue>\n        <TransactionDetailName>para a pessoa</TransactionDetailName>\n        <TransactionDetailValue className={styles.transferDetail}>\n          {name}\n        </TransactionDetailValue>\n        <TransactionDetailName> via SMS para o número </TransactionDetailName>\n        <TransactionDetailValue className={styles.transferDetail}>\n          {number}\n        </TransactionDetailValue>\n        <TransactionDetailName> no dia </TransactionDetailName>\n        <TransactionDetailValue className={styles.transferDetail}>\n          {DateFormatter.format(date)}\n        </TransactionDetailValue>\n      </TransactionDetail>\n    </React.Fragment>\n  );\n};\n","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/payment/pages/Home/Home.style.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/card/components/Inputs/InsertIdCard/index.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/components/EmptyList/EmptyList.tsx",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/components/Divider/Divider.tsx",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/account/components/ListItemHelp/index.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/payment/pages/ChangeValue/ChangeValue.style.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/card/pages/CardOption/CardOption.style.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/taxpayment/components/DetailsDarjDescription/index.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/payment/pages/PaymentDescription/PaymentDescription.style.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/payment/pages/PaymentReceipt/PaymentReceipt.style.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/components/ActionList/index.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/card/components/Inputs/PasswordInput/PasswordInput.tsx",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/components/TagEditPopUp/TagEditPopUp.tsx",["4914","4915"],"import React from \"react\";\nimport { Box, Drawer, Grid, Snackbar } from \"@material-ui/core\";\nimport { useStyle } from \"./TagEditPopUp.style\";\nimport { ProcessDescriptionHeader } from \"components/ProcessDescriptionHeader\";\nimport { TextField } from \"components/TextField\";\nimport { ButtonWithFloatingIcon } from \"components/ButtonWithFloatingIcon/ButtonWithFloatingIcon\";\nimport { Button } from \"components/Button\";\nimport { finishLabel } from \"constants/buttons/labels\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { StoreState } from \"redux/state\";\nimport { TagChip } from \"features/tags/components/TagChip\";\nimport Alert from \"@material-ui/lab/Alert\";\nimport { getTags } from \"features/tags/redux/actions\";\n\ninterface TagEditPopUpProps {\n  open: boolean;\n  onClose: Function | ((setOpen: boolean) => void);\n  onSaveTags: (tags: string[]) => void;\n}\n\nexport const TagEditPopUp: React.FC<TagEditPopUpProps> = ({\n  open,\n  onSaveTags,\n  onClose,\n}) => {\n  const style = useStyle();\n  const dispatch = useDispatch();\n  const [descriptionTags, setDescriptionTags] = React.useState(\"\");\n  const sugestTags = useSelector((state: StoreState) => state.tags.tags);\n  const [tags, setTags] = React.useState(sugestTags);\n  const [errorMessageTags, setErrorMessageTags] = React.useState(false);\n\n  React.useEffect(() => {\n    dispatch(getTags());\n  }, []);\n\n  React.useEffect(() => {\n    setTags(sugestTags);\n  }, [sugestTags]);\n\n  const onDescriptionChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setDescriptionTags(event.target.value.toUpperCase());\n  };\n\n  const onAddTagsButtonClick = () => {\n    if (typeof tags === \"undefined\" && descriptionTags.length >= 2) {\n      setTags([descriptionTags]);\n    } else if (typeof tags === \"undefined\" && descriptionTags.length < 2) {\n      setErrorMessageTags(true);\n    } else if (\n      !tags?.includes(descriptionTags) &&\n      descriptionTags.length >= 2\n    ) {\n      setTags([...(tags ?? []), descriptionTags]);\n      setErrorMessageTags(false);\n    } else if (descriptionTags.length < 2) {\n      setErrorMessageTags(true);\n    } else {\n      setErrorMessageTags(false);\n    }\n    setDescriptionTags(\"\");\n  };\n\n  const onTagsRemoveClick = (tagToDelete: string) => {\n    setTags(tags?.filter((tag: string) => tag !== tagToDelete));\n  };\n\n  const onPushTags = () => {\n    onClose(!open);\n  };\n\n  const onCloseTagsEditPopUp = () => {\n    onClose(!open);\n    onSaveTags(tags ?? []);\n  };\n\n  const onMessageClose = () => {\n    setErrorMessageTags(false);\n  };\n\n  return (\n    <React.Fragment>\n      <Drawer\n        data-test-id=\"drawer\"\n        anchor=\"bottom\"\n        elevation={0}\n        open={open}\n        onClose={() => onCloseTagsEditPopUp()}\n      >\n        <Grid className={style.tagEditHeader}>\n          <ProcessDescriptionHeader\n            title=\"\"\n            subtitle=\"Editar Tags\"\n            description=\"Exclua ou adicione as tags para identificar\n                      melhor sua transação em seu extrato\"\n          />\n        </Grid>\n        <Grid className={style.tagsEditBody}>\n          <Box component=\"form\">\n            <ProcessDescriptionHeader\n              subtitle=\"TAGs adicionadas\"\n              description=\"Toque no (x) para excluir uma TAG\"\n            />\n            <Box className={style.scrollTags}>\n              {tags &&\n                tags.map((tagValue: string | undefined, index: number) => {\n                  return (\n                    <text key={index} className={style.tagsButtonStyle}>\n                      <TagChip\n                        data-test-id=\"edit-tag-pop-up\"\n                        label={tagValue!}\n                        onClick={() => onTagsRemoveClick(tagValue!)}\n                      />\n                    </text>\n                  );\n                })}\n            </Box>\n            <Box className={style.elementsFormTags}>\n              <Box>\n                <TextField\n                  label=\"Insira TAG\"\n                  placeholder=\"Escreva sua frase\"\n                  value={descriptionTags}\n                  onChange={onDescriptionChange}\n                  data-test-id=\"description-tags\"\n                />\n              </Box>\n              {errorMessageTags && (\n                <Box className={style.errorMessage}>\n                  <Snackbar\n                    open={errorMessageTags}\n                    autoHideDuration={3000}\n                    onClose={onMessageClose}\n                    onClick={onMessageClose}\n                    data-test-id=\"close-message\"\n                  >\n                    <Alert severity=\"warning\">\n                      As tags devem conter 2 ou mais caracteres!\n                    </Alert>\n                  </Snackbar>\n                </Box>\n              )}\n              <Box className={style.addTagButtonStyle}>\n                <ButtonWithFloatingIcon\n                  onClick={onAddTagsButtonClick}\n                  data-test-id=\"add-tags-button\"\n                >\n                  adicionar\n                </ButtonWithFloatingIcon>\n              </Box>\n              <Box className={style.finishTagButtonStyle}>\n                <Button\n                  size={\"large\"}\n                  onClick={onCloseTagsEditPopUp}\n                  data-test-id=\"close-tags-button\"\n                >\n                  {finishLabel}\n                </Button>\n              </Box>\n            </Box>\n          </Box>\n        </Grid>\n      </Drawer>\n    </React.Fragment>\n  );\n};\n","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/card/components/CardData/CardData.tsx",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/taxPayment/components/DetailsFgtsDescription/DetailsFgtsDescription.tsx",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/taxPayment/components/DetailsGareDescription/DetailsGareDescription.tsx",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/payment/pages/ScanBarcode/ScanBarcode.style.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/card/components/Validator/Validator.styles.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/payment/pages/Summary/Summary.style.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/card/pages/RequestDuplicate/UpdateAddress/UpdateAddress.style.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/digitalWithdrawal/pages/DigitalWithdrawalStart/DigitalWithdrawalStart.style.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/digitalWithdrawal/pages/DigitalWithdrawalSummary/DigitalWithdrawalSummary.style.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/account/components/AccountBalance/AccountBalance.tsx",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/account/components/AccountSheet/AccountSheet.tsx",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/tags/components/TagChip/TagChip.tsx",["4916"],"import React from \"react\";\nimport { useStyles } from \"./TagChip.style\";\nimport { Chip } from \"@material-ui/core\";\n\ninterface TagChipProps {\n  label?: string;\n  selected?: boolean;\n  disabled?: boolean;\n  onClick?: (_: string) => void;\n}\n\nexport const TagChip: React.FC<TagChipProps> = ({\n  label,\n  disabled,\n  onClick,\n}) => {\n  const [status, setStatus] = React.useState(disabled);\n  const styles = useStyles();\n\n  return (\n    <React.Fragment>\n      <Chip\n        className={styles.root}\n        label={label}\n        disabled={status}\n        variant=\"outlined\"\n        onClick={() => onClick!(label!)}\n      />\n    </React.Fragment>\n  );\n};\n","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/payment/redux/actions.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/payment/redux/state.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/digitalWithdrawal/pages/ReadQrCodeDigitalWithdrawal/ReadQrCodeDigitalWithdrawal.style.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/payment/components/ShowBalanceButton/ShowBalanceButton.tsx",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/account/components/FilterSectionTitleAndDescription/index.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/components/Divider/index.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/user/constants/routes.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/schedulePayments/pages/ScheduleTransactions/ScheduleTransactions.style.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/topUp/components/ContentBalance/index.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/topUp/components/InputNumber/index.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/topUp/components/CardPhone/index.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/topUp/components/ListButton/ListButtonRadio/index.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/transference/pages/TransferProcess/TransferProcess.style.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/components/DateInput/index.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/smsTransfer/pages/SmsTransferSummary/SmsTransferSummary.style.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/schedulePayments/components/PopUpCancelScheduledPayment/index.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/components/DetailSmsTransferDescription/DetailSmsTransferDescription.style.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/schedulePayments/components/SearchFilter/index.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/components/EmptyList/EmptyList.style.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/card/components/Inputs/LastDigitsInput/LastDigitsInput.tsx",["4917"],"import React, { useState } from \"react\";\nimport { OtpInput } from \"components/OtpInput/OtpInput\";\nimport { Box } from \"@material-ui/core\";\nimport { useStyles } from \"./LastDigitsInput.style\";\n\ninterface PasswordValidationInputProps {\n  value: string;\n  setValue: (value: string) => void;\n}\n\nexport const LastDigitsInput: React.FC<PasswordValidationInputProps> = ({\n  value,\n  setValue,\n}: PasswordValidationInputProps) => {\n  const style = useStyles();\n  return (\n    <Box className={style.passwordInputBody} data-test-id=\"password-input\">\n      <Box className={style.passwordInputContent}>\n        <OtpInput\n          className={style.OtpInput}\n          value={value}\n          onChange={setValue}\n          isInputSecure={true}\n          numInputs={4}\n          data-test-id=\"four-digits\"\n        />\n      </Box>\n    </Box>\n  );\n};\n","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/card/components/Option/index.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/card/components/ListButton/ListButtonRadio/index.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/schedulePayments/components/TransactionList/index.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/components/Divider/Divider.style.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/card/components/Inputs/InsertIdCard/InsertIdCard.tsx",["4918","4919"],"import React from \"react\";\nimport { useStyles, CardIdInput } from \"./InsertIdCard.style\";\nimport { FormControl, InputLabel } from \"@material-ui/core\";\n\ninterface InsertIdCardsProps {\n  value: string;\n  setValue: (value: string) => void;\n}\n\nexport const InsertIdCard: React.FC<InsertIdCardsProps> = ({\n  value,\n  setValue,\n}: InsertIdCardsProps) => {\n  const [valueIdCard, setValueIdCard] = React.useState(\"\");\n  const handleValueIdCard = (\n    event: React.ChangeEvent<HTMLTextAreaElement | HTMLInputElement>\n  ) => {\n    const lengthInputValue = event.currentTarget.value.length;\n    if (lengthInputValue > 9) {\n      return;\n    }\n    const numberFilter = /^[0-9\\b]+$/;\n    const inputContent = event.currentTarget.value;\n    if (inputContent === \"\" || numberFilter.test(inputContent)) {\n      setValue(inputContent);\n    }\n  };\n  const styles = useStyles();\n  return (\n    <React.Fragment>\n      <FormControl className={styles.formControl}>\n        <InputLabel\n          htmlFor=\"cardIdInput\"\n          className={styles.labelInputIdCard}\n          data-test-id=\"input-idcard\"\n        >\n          <span>Insira o ID CARD de 9 dígitos</span>\n        </InputLabel>\n        <CardIdInput\n          id=\"cardIdInput\"\n          value={value}\n          onChange={handleValueIdCard}\n          placeholder=\"000000000\"\n          className={styles.inputIdCard}\n          data-test-id=\"input-idcard\"\n        />\n      </FormControl>\n    </React.Fragment>\n  );\n};\n","/home/danielvitor/Documentos/Develop/stonebank_front/src/components/ConfirmTokenSheet/ConfirmTokenSheet.controller.tsx",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/card/components/Inputs/PasswordInput/PasswordInput.style.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/card/components/CardData/CardData.style.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/account/components/ListItemHelp/ListItemHelp.tsx",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/components/TagEditPopUp/TagEditPopUp.style.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/taxpayment/components/DetailsDarjDescription/DetailsDarjDescription.tsx",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/taxPayment/pages/Darj/PaymentDarjType/PaymentDarjType.tsx",["4920","4921","4922","4923"],"import React from \"react\";\nimport { ProcessPageLayout } from \"components/ProcessPageLayout\";\nimport { AppBar } from \"components/AppBar\";\nimport { Button } from \"components/Button\";\nimport { Close, KeyboardArrowRight, Update } from \"@material-ui/icons\";\nimport { cancelLabel, nextLabel } from \"constants/buttons/labels\";\nimport { AccountRoutes } from \"features/account/constants/routes\";\nimport { useHistory } from \"react-router-dom\";\nimport { ProcessDescriptionHeader } from \"components/ProcessDescriptionHeader\";\nimport { PageContainer } from \"components/PageContainer\";\nimport { ProcessPageFooter } from \"components/ProcessPageFooter\";\nimport { Grid, MenuItem } from \"@material-ui/core\";\nimport { useStyles } from \"features/taxPayment/pages/Darj/PaymentDarjType/PaymentDarjType.style\";\nimport { TextField } from \"components/TextField\";\nimport { TaxPaymentRoutes } from \"features/taxPayment/constants/routes\";\nimport { useDispatch } from \"react-redux\";\nimport { updateDarjPaymentData } from \"features/taxPayment/redux/actions\";\nimport { DatePicker, KeyboardDatePicker } from \"@material-ui/pickers\";\nimport { MaterialUiPickersDate } from \"@material-ui/pickers/typings/date\";\n\nexport const PaymentDarjType: React.FC = () => {\n  const [startDate, setStartDate] = React.useState<string | null>();\n  const [monthYear, setMonthYear] = React.useState<Date | null>(\n    new Date(Date.now())\n  );\n  const [referenceNumber, setReferenceNumber] = React.useState(\"\");\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const styles = useStyles();\n  const month = monthYear!.getMonth() + 1;\n  const validMonth = month < 10 ? 0 + month.toString() : month.toString();\n  const year = monthYear!.getFullYear().toString();\n\n  const onStartDateChange = (date: MaterialUiPickersDate) => {\n    setStartDate(date?.toString());\n    if (date) setMonthYear(date);\n  };\n\n  const onNextButtonClick = () => {\n    dispatch(\n      updateDarjPaymentData({\n        referenceNumber: referenceNumber,\n      })\n    );\n    history.push(TaxPaymentRoutes.paymentDarjCodeNumber);\n  };\n\n  const onCancelButtonClick = () => {\n    dispatch(updateDarjPaymentData());\n    history.replace(AccountRoutes.home);\n  };\n\n  React.useEffect(() => {\n    setReferenceNumber(validMonth.concat(year));\n  }, [validMonth, year]);\n\n  return (\n    <PageContainer>\n      <ProcessPageLayout\n        appBar={\n          <AppBar\n            homeRoute={AccountRoutes.home}\n            action={\n              <Button\n                palette=\"secondary\"\n                size=\"small\"\n                startIcon={<Close color=\"primary\" />}\n                onClick={onCancelButtonClick}\n                data-test-id=\"cancel-button\"\n              >\n                {cancelLabel}\n              </Button>\n            }\n          />\n        }\n        header={<ProcessDescriptionHeader title=\"Impostos - Darj\" />}\n        main={\n          <Grid container direction=\"column\" spacing={4}>\n            <Grid item>\n              <DatePicker\n                className={styles.wrapper}\n                views={[\"month\", \"year\"]}\n                label=\"Data de apuração\"\n                openTo=\"month\"\n                value={startDate}\n                onChange={onStartDateChange}\n                format={\"MM/yyyy\"}\n                data-test-id=\"date-picker\"\n              />\n            </Grid>\n\n            <Grid item>\n              <Grid\n                container\n                justifyContent=\"center\"\n                className={styles.scheduleButton}\n                data-test-id=\"schedule-button\"\n              ></Grid>\n            </Grid>\n          </Grid>\n        }\n        footer={\n          <ProcessPageFooter\n            primaryButton={\n              <Button\n                endIcon={<KeyboardArrowRight color=\"secondary\" />}\n                onClick={onNextButtonClick}\n                data-test-id=\"next-button\"\n              >\n                {nextLabel}\n              </Button>\n            }\n          />\n        }\n      />\n    </PageContainer>\n  );\n};\n","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/taxPayment/pages/Darj/PaymentDarjValues/PaymentDarjValues.tsx",["4924"],"import React from \"react\";\nimport { ProcessPageLayout } from \"components/ProcessPageLayout\";\nimport { AppBar } from \"components/AppBar\";\nimport { Button } from \"components/Button\";\nimport { Close, KeyboardArrowRight } from \"@material-ui/icons\";\nimport { cancelLabel, nextLabel } from \"constants/buttons/labels\";\nimport { AccountRoutes } from \"features/account/constants/routes\";\nimport { ProcessDescriptionHeader } from \"components/ProcessDescriptionHeader\";\nimport { PageContainer } from \"components/PageContainer\";\nimport { ProcessPageFooter } from \"components/ProcessPageFooter\";\nimport { Box, Grid } from \"@material-ui/core\";\nimport { TextField } from \"components/TextField\";\nimport { useHistory } from \"react-router-dom\";\nimport { TaxPaymentRoutes } from \"features/taxPayment/constants/routes\";\nimport { maskMoney } from \"_utils/masks/money\";\nimport { useMask } from \"hooks/useMask\";\nimport { CurrencyFormatter, parseCurrency } from \"_translate\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { StoreState } from \"redux/state\";\nimport { updateDarjPaymentData } from \"features/taxPayment/redux/actions\";\nimport { ErrorMessage } from \"components/ErrorMessage\";\n\nexport const PaymentDarjValues: React.FC = () => {\n  const [valueInput, setValueInput] = React.useState(Number);\n  const [fineValue, setFineValue] = useMask(maskMoney);\n  const [interestValue, setInterestValue] = useMask(maskMoney);\n  const [principalValue, setPrincipalValue] = useMask(maskMoney);\n  const [rateValue, setRateValue] = useMask(maskMoney);\n  const [isValidTotalValue, setIsValidTotalValue] = React.useState(true);\n  const history = useHistory();\n  const [balanceIsInvalid, setBalanceIsInvalid] = React.useState(false);\n  const { balance } = useSelector((store: StoreState) => ({\n    balance: store.account.dashboard!.balance,\n  }));\n\n  const monetaryValue = useSelector((store: StoreState) => ({\n    taxPaymentState: store.taxPayment.darj,\n  }));\n\n  const { taxPaymentState } = monetaryValue;\n\n  const onFineValueDarj = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setFineValue(event.target.value);\n  };\n\n  const onInterestValueDarj = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setInterestValue(event.target.value);\n  };\n\n  const onPrincipalValueDarj = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setPrincipalValue(event.target.value);\n  };\n\n  const onRateValueDarj = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setRateValue(event.target.value);\n  };\n\n  const onCancelButtonClick = () => {\n    dispatch(updateDarjPaymentData());\n    history.replace(AccountRoutes.home);\n  };\n\n  const dispatch = useDispatch();\n\n  React.useEffect(() => {\n    setValueInput(\n      Number(\n        (isNaN(parseCurrency(principalValue))\n          ? 0\n          : parseCurrency(principalValue)) +\n          (isNaN(parseCurrency(fineValue)) ? 0 : parseCurrency(fineValue)) +\n          (isNaN(parseCurrency(interestValue))\n            ? 0\n            : parseCurrency(interestValue)) +\n          (isNaN(parseCurrency(rateValue)) ? 0 : parseCurrency(rateValue)) +\n          taxPaymentState!.monetaryValue!\n      )\n    );\n    setIsValidTotalValue(\n      Number(valueInput) > 0 &&\n        Number(valueInput) <= balance &&\n        Number(parseCurrency(principalValue)) > 0\n    );\n    setBalanceIsInvalid(Number(valueInput) > balance);\n  }, [principalValue, fineValue, interestValue, rateValue, valueInput]);\n\n  const onNextButtonClick = () => {\n    history.push(TaxPaymentRoutes.paymentDarjDueDate);\n    dispatch(\n      updateDarjPaymentData({\n        principalValue: parseFloat(parseCurrency(principalValue).toFixed(2)),\n        fineValue: parseFloat(parseCurrency(fineValue).toFixed(2)),\n        interestValue: parseFloat(parseCurrency(interestValue).toFixed(2)),\n        rateValue: parseFloat(parseCurrency(rateValue).toFixed(2)),\n      })\n    );\n  };\n  return (\n    <PageContainer>\n      <ProcessPageLayout\n        appBar={\n          <AppBar\n            homeRoute={AccountRoutes.home}\n            action={\n              <Button\n                palette=\"secondary\"\n                size=\"small\"\n                startIcon={<Close color=\"primary\" />}\n                onClick={onCancelButtonClick}\n                data-test-id=\"cancel-button\"\n              >\n                {cancelLabel}\n              </Button>\n            }\n          />\n        }\n        header={<ProcessDescriptionHeader title=\"Impostos - DARJ\" />}\n        main={\n          <Grid container direction=\"column\" spacing={2}>\n            <Grid item>\n              <TextField\n                label=\"Valor Principal\"\n                value={\n                  isNaN(parseCurrency(principalValue))\n                    ? CurrencyFormatter.format(0)\n                    : principalValue\n                }\n                onChange={onPrincipalValueDarj}\n                placeholder=\"R$ 0,00\"\n                data-test-id=\"principal-value-darj\"\n              />\n            </Grid>\n            <Grid item>\n              <TextField\n                label=\"Multa\"\n                value={\n                  isNaN(parseCurrency(fineValue))\n                    ? CurrencyFormatter.format(0)\n                    : fineValue\n                }\n                onChange={onFineValueDarj}\n                placeholder=\"R$ 0,00\"\n                data-test-id=\"fine-value-darj\"\n              />\n            </Grid>\n            <Grid item>\n              <TextField\n                label=\"Juros\"\n                value={\n                  isNaN(parseCurrency(interestValue))\n                    ? CurrencyFormatter.format(0)\n                    : interestValue\n                }\n                placeholder=\"R$ 0,00\"\n                onChange={onInterestValueDarj}\n                data-test-id=\"interest-value-darj\"\n              />\n            </Grid>\n            <Grid item>\n              <TextField\n                label=\"Taxas\"\n                value={\n                  isNaN(parseCurrency(rateValue))\n                    ? CurrencyFormatter.format(0)\n                    : rateValue\n                }\n                placeholder=\"R$ 0,00\"\n                onChange={onRateValueDarj}\n                data-test-id=\"rate-value-darj\"\n              />\n              <Box>\n                {balanceIsInvalid && (\n                  <ErrorMessage message={\"Saldo insuficiente\"} />\n                )}\n              </Box>\n            </Grid>\n          </Grid>\n        }\n        footer={\n          <ProcessPageFooter\n            primaryButton={\n              <Button\n                endIcon={<KeyboardArrowRight color=\"secondary\" />}\n                onClick={onNextButtonClick}\n                disabled={!isValidTotalValue}\n                data-test-id=\"next-button\"\n              >\n                {nextLabel}\n              </Button>\n            }\n          />\n        }\n      />\n    </PageContainer>\n  );\n};\n","/home/danielvitor/Documentos/Develop/stonebank_front/src/components/ActionList/ActionList.tsx",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/taxPayment/pages/Darj/PaymentDarjDueDate/PaymentDarjDueDate.tsx",["4925","4926","4927"],"import React from \"react\";\nimport { ProcessPageLayout } from \"components/ProcessPageLayout\";\nimport { AppBar } from \"components/AppBar\";\nimport { Button } from \"components/Button\";\nimport { Close, KeyboardArrowRight } from \"@material-ui/icons\";\nimport { cancelLabel, nextLabel } from \"constants/buttons/labels\";\nimport { AccountRoutes } from \"features/account/constants/routes\";\nimport { useHistory } from \"react-router-dom\";\nimport { ProcessDescriptionHeader } from \"components/ProcessDescriptionHeader\";\nimport { PageContainer } from \"components/PageContainer\";\nimport { ProcessPageFooter } from \"components/ProcessPageFooter\";\nimport { Grid } from \"@material-ui/core\";\nimport { useStyles } from \"features/taxPayment/pages/Darj/PaymentDarjDueDate/PaymentDarjDueDate.style\";\nimport { TextField } from \"components/TextField\";\nimport { SchedulingButton } from \"components/SchedulingButton\";\nimport { TaxPaymentRoutes } from \"features/taxPayment/constants/routes\";\nimport { ShortDateFormatter } from \"_translate\";\nimport { compareTransferDates } from \"features/transference/_utils\";\nimport { DateInput } from \"components/DateInput\";\nimport { MaterialUiPickersDate } from \"@material-ui/pickers/typings/date\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { StoreState } from \"redux/state\";\nimport { SuccessTaxPaymentState } from \"features/taxPayment/redux/state\";\nimport { updateDarjPaymentData } from \"features/taxPayment/redux/actions\";\n\nexport const PaymentDarjDueDate: React.FC = () => {\n  const [openDatePicker, setOpenDatePicker] = React.useState(false);\n  const [displayDate, setDisplayDate] = React.useState(\"\");\n  const [minDate] = React.useState<Date>(new Date());\n  const [startDate, setStartDate] = React.useState<string | undefined>();\n  const history = useHistory();\n  const styles = useStyles();\n  const [paymentDarjDueDate, setPaymentDarjDueDate] =\n    React.useState<Date | null>(new Date(Date.now()));\n  const [paymentDarjDate, setPaymentDarjDate] = React.useState<Date | null>(\n    new Date(Date.now())\n  );\n\n  React.useEffect(() => {\n    setDisplayDate(_getDisplayDate());\n  }, [paymentDarjDate]);\n\n  const _getDisplayDate = () => {\n    const today = \"Hoje\";\n    if (!paymentDarjDate) return today;\n    else if (compareTransferDates(paymentDarjDate, new Date()) === 0)\n      return today;\n    else return ShortDateFormatter.format(paymentDarjDate);\n  };\n\n  const onDatePickerClose = () => {\n    setOpenDatePicker(false);\n  };\n\n  const onStartDateChange = (date: Date | null) => {\n    setPaymentDarjDate(date);\n  };\n\n  const onStartDueDateChange = (date: MaterialUiPickersDate) => {\n    setStartDate(date?.toString());\n    setPaymentDarjDueDate(date);\n  };\n\n  const onSchedulingButtonClick = () => {\n    setOpenDatePicker(true);\n  };\n\n  const taxPaymentState = useSelector((state: StoreState) => state.taxPayment);\n\n  const dispatch = useDispatch();\n\n  const onNextButtonClick = () => {\n    history.push(TaxPaymentRoutes.paymentDarjDescription);\n    dispatch(\n      updateDarjPaymentData({\n        paymentDate: paymentDarjDate,\n        dueDate: paymentDarjDueDate,\n      })\n    );\n  };\n\n  const onCancelButtonClick = () => {\n    dispatch(updateDarjPaymentData());\n    history.replace(AccountRoutes.home);\n  };\n\n  return (\n    <PageContainer>\n      <ProcessPageLayout\n        appBar={\n          <AppBar\n            homeRoute={AccountRoutes.home}\n            action={\n              <Button\n                palette=\"secondary\"\n                size=\"small\"\n                startIcon={<Close color=\"primary\" />}\n                onClick={onCancelButtonClick}\n                data-test-id=\"cancel-button\"\n              >\n                {cancelLabel}\n              </Button>\n            }\n          />\n        }\n        header={<ProcessDescriptionHeader title=\"Impostos - DARJ\" />}\n        main={\n          <React.Fragment>\n            <Grid container direction=\"column\" spacing={4}>\n              <Grid item>\n                <DateInput\n                  label=\"Data de Vencimento\"\n                  value={startDate}\n                  onChange={onStartDueDateChange}\n                  data-test-id=\"due-date\"\n                />\n              </Grid>\n              <Grid item>\n                <TextField\n                  label=\"Pagar\"\n                  placeholder=\"Hoje\"\n                  value={displayDate}\n                  data-test-id=\"display-date\"\n                />\n              </Grid>\n              <Grid item>\n                <Grid\n                  container\n                  justifyContent=\"center\"\n                  className={styles.scheduleButton}\n                  data-test-id=\"schedule-button\"\n                >\n                  <SchedulingButton\n                    open={openDatePicker}\n                    onClose={onDatePickerClose}\n                    value={paymentDarjDate}\n                    onDateSelection={onStartDateChange}\n                    onClick={onSchedulingButtonClick}\n                    minDate={minDate}\n                  />\n                </Grid>\n              </Grid>\n            </Grid>\n          </React.Fragment>\n        }\n        footer={\n          <ProcessPageFooter\n            primaryButton={\n              <Button\n                endIcon={<KeyboardArrowRight color=\"secondary\" />}\n                onClick={onNextButtonClick}\n                data-test-id=\"next-button\"\n              >\n                {nextLabel}\n              </Button>\n            }\n          />\n        }\n      />\n    </PageContainer>\n  );\n};\n","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/taxPayment/pages/Gare/PaymentGareDueDate/PaymentGareDueDate.tsx",["4928"],"import React from \"react\";\nimport { ProcessPageLayout } from \"components/ProcessPageLayout\";\nimport { AppBar } from \"components/AppBar\";\nimport { Button } from \"components/Button\";\nimport { Close, KeyboardArrowRight } from \"@material-ui/icons\";\nimport { cancelLabel, nextLabel } from \"constants/buttons/labels\";\nimport { AccountRoutes } from \"features/account/constants/routes\";\nimport { useHistory } from \"react-router-dom\";\nimport { ProcessDescriptionHeader } from \"components/ProcessDescriptionHeader\";\nimport { PageContainer } from \"components/PageContainer\";\nimport { ProcessPageFooter } from \"components/ProcessPageFooter\";\nimport { Grid } from \"@material-ui/core\";\nimport { useStyles } from \"features/taxPayment/pages/Gare/PaymentGareDueDate/PaymentGareDueDate.style\";\nimport { TextField } from \"components/TextField\";\nimport { SchedulingButton } from \"components/SchedulingButton\";\nimport { TaxPaymentRoutes } from \"features/taxPayment/constants/routes\";\nimport { ShortDateFormatter } from \"_translate\";\nimport { compareTransferDates } from \"features/transference/_utils\";\nimport { DateInput } from \"components/DateInput\";\nimport { MaterialUiPickersDate } from \"@material-ui/pickers/typings/date\";\nimport { useDispatch } from \"react-redux\";\nimport { updateGarePaymentData } from \"features/taxPayment/redux/actions\";\n\nexport const PaymentGareDueDate: React.FC = () => {\n  const [openDatePicker, setOpenDatePicker] = React.useState(false);\n  const [displayDate, setDisplayDate] = React.useState(\"\");\n  const [minDate] = React.useState<Date>(new Date());\n  const [startDate, setStartDate] = React.useState<string | null>();\n  const history = useHistory();\n  const styles = useStyles();\n  const dispatch = useDispatch();\n  const [paymentGareDueDate, setPaymentGareDueDate] =\n    React.useState<Date | null>(new Date(Date.now()));\n  const [paymentGareDate, setPaymentGareDate] = React.useState<Date | null>(\n    new Date(Date.now())\n  );\n\n  React.useEffect(() => {\n    setDisplayDate(_getDisplayDate());\n  }, [paymentGareDate]);\n\n  const _getDisplayDate = () => {\n    const today = \"Hoje\";\n    if (!paymentGareDate) return today;\n    else if (compareTransferDates(paymentGareDate, new Date()) === 0)\n      return today;\n    else return ShortDateFormatter.format(paymentGareDate);\n  };\n\n  const onNextButtonClick = (event: React.FormEvent) => {\n    dispatch(\n      updateGarePaymentData({\n        dueDate: paymentGareDueDate,\n        paymentDate: paymentGareDate,\n      })\n    );\n    history.push(TaxPaymentRoutes.paymentGareDescription);\n  };\n\n  const onCancelButtonClick = () => {\n    dispatch(updateGarePaymentData());\n    history.replace(AccountRoutes.home);\n  };\n\n  const onDatePickerClose = () => {\n    setOpenDatePicker(false);\n  };\n\n  const onStartDateChange = (date: Date | null) => {\n    setPaymentGareDate(date);\n  };\n\n  const onStartDueDateChange = (date: MaterialUiPickersDate) => {\n    setStartDate(date?.toString());\n    setPaymentGareDueDate(date);\n  };\n\n  const onSchedulingButtonClick = () => {\n    setOpenDatePicker(true);\n  };\n\n  return (\n    <PageContainer>\n      <ProcessPageLayout\n        appBar={\n          <AppBar\n            homeRoute={AccountRoutes.home}\n            action={\n              <Button\n                palette=\"secondary\"\n                size=\"small\"\n                startIcon={<Close color=\"primary\" />}\n                onClick={onCancelButtonClick}\n                data-test-id=\"cancel-button\"\n              >\n                {cancelLabel}\n              </Button>\n            }\n          />\n        }\n        header={<ProcessDescriptionHeader title=\"Impostos - GARE\" />}\n        main={\n          <React.Fragment>\n            <Grid container direction=\"column\" spacing={4}>\n              <Grid item>\n                <DateInput\n                  label=\"Data de Vencimento\"\n                  value={startDate}\n                  onChange={onStartDueDateChange}\n                />\n              </Grid>\n              <Grid item>\n                <TextField\n                  label=\"Pagar\"\n                  placeholder=\"Hoje\"\n                  value={displayDate}\n                  data-test-id=\"display-date\"\n                />\n              </Grid>\n              <Grid item>\n                <Grid\n                  container\n                  justifyContent=\"center\"\n                  className={styles.scheduleButton}\n                >\n                  <SchedulingButton\n                    open={openDatePicker}\n                    onClose={onDatePickerClose}\n                    value={paymentGareDate}\n                    onDateSelection={onStartDateChange}\n                    onClick={onSchedulingButtonClick}\n                    minDate={minDate}\n                  />\n                </Grid>\n              </Grid>\n            </Grid>\n          </React.Fragment>\n        }\n        footer={\n          <ProcessPageFooter\n            primaryButton={\n              <Button\n                endIcon={<KeyboardArrowRight color=\"secondary\" />}\n                onClick={onNextButtonClick}\n                data-test-id=\"next-button\"\n              >\n                {nextLabel}\n              </Button>\n            }\n          />\n        }\n      />\n    </PageContainer>\n  );\n};\n","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/taxPayment/pages/Gare/PaymentGareCodeNumber/PaymentGareCodeNumber.tsx",["4929","4930","4931"],"import React, { useEffect, useState, FormEvent } from \"react\";\nimport { ProcessPageLayout } from \"components/ProcessPageLayout\";\nimport { AppBar } from \"components/AppBar\";\nimport { Button } from \"components/Button\";\nimport { Close, KeyboardArrowRight } from \"@material-ui/icons\";\nimport { cancelLabel, nextLabel } from \"constants/buttons/labels\";\nimport { AccountRoutes } from \"features/account/constants/routes\";\nimport { useHistory } from \"react-router-dom\";\nimport { ProcessDescriptionHeader } from \"components/ProcessDescriptionHeader\";\nimport { PageContainer } from \"components/PageContainer\";\nimport { ProcessPageFooter } from \"components/ProcessPageFooter\";\nimport { Grid } from \"@material-ui/core\";\nimport { TaxPaymentRoutes } from \"features/taxPayment/constants/routes\";\nimport { TextField } from \"components/TextField\";\nimport { numericOnly } from \"_utils/masks/generics\";\nimport { useMask } from \"hooks/useMask\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { updateGarePaymentData } from \"features/taxPayment/redux/actions\";\nimport { maskTaxPayer } from \"_utils/masks/taxPayer\";\n\nexport const PaymentGareCodeNumber: React.FC = () => {\n  const [codeRevenue, setCodeRevenue] = useMask(numericOnly);\n  const [taxIdContributor, setTaxIdContributor] = useMask(maskTaxPayer);\n  const [stateRegistration, setstateRegistration] = useMask(numericOnly);\n  const [quotationNumber, setQuotationNumber] = useMask(numericOnly);\n  const [isValidValue, setIsValidValue] = useState(true);\n  const dispatch = useDispatch();\n  const history = useHistory();\n\n  const onCancelButtonClick = () => {\n    dispatch(updateGarePaymentData());\n    history.replace(AccountRoutes.home);\n  };\n\n  const onNextButtonClick = (event: React.FormEvent) => {\n    event.preventDefault();\n    dispatch(\n      updateGarePaymentData({\n        contributorTaxId: taxIdContributor,\n        codeRevenue: codeRevenue,\n        quoteNumberNotification: quotationNumber,\n        stateRegistration: stateRegistration,\n      })\n    );\n    history.push(TaxPaymentRoutes.paymentGareValues);\n  };\n\n  const onTaxIdContributor = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setTaxIdContributor(event.target.value);\n  };\n\n  const onCodeRevenue = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setCodeRevenue(event.target.value);\n  };\n\n  const onstateRegistration = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setstateRegistration(event.target.value);\n  };\n\n  const onQuotationNumber = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setQuotationNumber(event.target.value);\n  };\n\n  React.useEffect(() => {\n    setIsValidValue(\n      !(\n        codeRevenue &&\n        quotationNumber &&\n        stateRegistration &&\n        (taxIdContributor.length === 14 || taxIdContributor.length === 18)\n      )\n    );\n  }, [codeRevenue, quotationNumber, stateRegistration, taxIdContributor]);\n\n  return (\n    <PageContainer>\n      <ProcessPageLayout\n        appBar={\n          <AppBar\n            homeRoute={AccountRoutes.home}\n            action={\n              <Button\n                palette=\"secondary\"\n                size=\"small\"\n                startIcon={<Close color=\"primary\" />}\n                onClick={onCancelButtonClick}\n                data-test-id=\"cancel-button\"\n              >\n                {cancelLabel}\n              </Button>\n            }\n          />\n        }\n        header={\n          <React.Fragment>\n            <ProcessDescriptionHeader title=\"Impostos - GARE\" />\n          </React.Fragment>\n        }\n        main={\n          <Grid container direction=\"column\" spacing={2}>\n            <Grid item>\n              <TextField\n                label=\"CPF/CNPJ do contribuidor\"\n                value={taxIdContributor}\n                onChange={onTaxIdContributor}\n                data-test-id=\"taxid-contributor\"\n              />\n            </Grid>\n            <Grid item>\n              <TextField\n                label=\"Código da Receita\"\n                value={codeRevenue}\n                onChange={onCodeRevenue}\n                data-test-id=\"code-revenue\"\n              />\n            </Grid>\n            <Grid item>\n              <TextField\n                label=\"Registro estadual\"\n                value={stateRegistration}\n                onChange={onstateRegistration}\n                data-test-id=\"state-registration\"\n              />\n            </Grid>\n            <Grid item>\n              <TextField\n                label=\"Núm. de Notificação de Cotação\"\n                value={quotationNumber}\n                onChange={onQuotationNumber}\n                data-test-id=\"quotation-number\"\n              />\n            </Grid>\n          </Grid>\n        }\n        footer={\n          <ProcessPageFooter\n            primaryButton={\n              <Button\n                endIcon={<KeyboardArrowRight color=\"secondary\" />}\n                onClick={onNextButtonClick}\n                disabled={isValidValue}\n                data-test-id=\"next-button\"\n              >\n                {nextLabel}\n              </Button>\n            }\n          />\n        }\n      />\n    </PageContainer>\n  );\n};\n","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/topUp/pages/CompleteTopUp/CompleteTopUp.tsx",["4932"],"import React from \"react\";\nimport { Close, KeyboardArrowRight } from \"@material-ui/icons\";\nimport { PageContainer } from \"components/PageContainer\";\nimport { ProcessPageLayout } from \"components/ProcessPageLayout\";\nimport { AppBar } from \"components/AppBar\";\nimport { Button } from \"components/Button\";\nimport { cancelLabel } from \"constants/buttons/labels\";\nimport { ProcessDescriptionHeader } from \"components/ProcessDescriptionHeader\";\nimport { ProcessPageFooter } from \"components/ProcessPageFooter\";\n// import TimIcon from \"_assets/icons/TimIcon.svg\";\nimport { AccountRoutes } from \"features/account/constants/routes\";\nimport { useHistory } from \"react-router-dom\";\nimport { Box, Typography } from \"@material-ui/core\";\nimport { useStyles } from \"./CompleteTopUp.style\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { StoreState } from \"redux/state\";\nimport { CurrencyFormatter, DateFormatter } from \"_translate\";\nimport { AuthorizationSheet } from \"components/AuthorizationSheet\";\nimport { generateTopUp, updateTopUpData } from \"features/topUp/redux/actions\";\nimport { TopUpRoutes } from \"features/topUp/constants/routes\";\nimport { Loader } from \"components/Loader\";\nimport { Alert } from \"components/Alert\";\nimport { SuccessTopUpState } from \"features/topUp/redux/state\";\nimport { OperationType } from \"features/account/redux/models/operationType\";\n\nexport const CompleteTopUp: React.FC = () => {\n  const topUp = useSelector((state: StoreState) => state.topUp.topUp);\n  const topUpState = useSelector((state: StoreState) => state.topUp);\n\n  const [openAuthorizationSheet, setOpenAuthorizationSheet] =\n    React.useState(false);\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const styles = useStyles();\n\n  const { errorMessage, loading } = topUpState;\n\n  React.useEffect(() => {\n    if (topUpState instanceof SuccessTopUpState) {\n      history.push({\n        pathname: TopUpRoutes.concludeTopUp,\n        state: OperationType.purchaseTopUp,\n      });\n      dispatch(updateTopUpData());\n    }\n  }, [topUpState, history, dispatch]);\n\n  const onCancelButtonClick = () => {\n    history.replace(AccountRoutes.home);\n  };\n\n  const onConcludeButtonClick = () => {\n    setOpenAuthorizationSheet(true);\n  };\n\n  const onAuthorizationClose = (tokenIsValid: boolean) => {\n    if (tokenIsValid) dispatch(generateTopUp());\n    setOpenAuthorizationSheet(false);\n  };\n\n  return (\n    <PageContainer>\n      <ProcessPageLayout\n        appBar={\n          <AppBar\n            homeRoute={AccountRoutes.home}\n            action={\n              <Button\n                palette=\"secondary\"\n                size=\"small\"\n                startIcon={<Close color=\"primary\" />}\n                onClick={onCancelButtonClick}\n                data-test-id=\"cancel-button\"\n              >\n                {cancelLabel}\n              </Button>\n            }\n          />\n        }\n        header={\n          <Box className={styles.headerContent}>\n            <ProcessDescriptionHeader\n              title=\"Recargas\"\n              subtitle=\"Celular pré-pago\"\n              description={\"Recarregar o número \" + topUp?.phoneNumber}\n            />\n          </Box>\n        }\n        main={\n          <React.Fragment>\n            {/* <Grid container>\n              <Grid item className={styles.handleText}>\n                <img src={TimIcon} alt=\"Tim Icon\" />\n              </Grid>\n            </Grid> */}\n\n            <Typography\n              data-test-id=\"top-up-operator\"\n              className={styles.handleText}\n            >\n              Operadora\n            </Typography>\n            <Typography className={styles.handleSubText}>\n              {topUp?.topUpProduct?.description}\n            </Typography>\n\n            <Typography\n              data-test-id=\"top-up-value\"\n              className={styles.handleText}\n            >\n              Valor\n            </Typography>\n            <Typography className={styles.handleSubText}>\n              {CurrencyFormatter.format(topUp?.topUpProduct?.productValue!)}\n            </Typography>\n            <Typography\n              data-test-id=\"phone-number\"\n              className={styles.handleTextPhone}\n            >\n              Celular\n            </Typography>\n            <Typography className={styles.handleSubTextPhone}>\n              {topUp?.phoneNumber}\n            </Typography>\n            <Typography\n              data-test-id=\"top-up-data\"\n              className={styles.handleTimeTopUp}\n            >\n              Data da recarga\n            </Typography>\n            <Typography className={styles.handleSubTextTopUp}>\n              {topUp?.topUpDate?.toLocaleDateString()}\n            </Typography>\n\n            <Typography className={styles.handleRepeatTopUp}>\n              Repetir recarga\n            </Typography>\n\n            <Typography className={styles.handleSubRepeatTopUp}>\n              {topUp?.periodicRepetition\n                ? topUp?.periodicRepetition\n                : \"Não repetir\"}\n            </Typography>\n          </React.Fragment>\n        }\n        footer={\n          <ProcessPageFooter\n            primaryButton={\n              <Button\n                onClick={onConcludeButtonClick}\n                size=\"medium\"\n                endIcon={<KeyboardArrowRight color=\"secondary\" />}\n                data-test-id=\"conclude-button\"\n              >\n                Concluir\n              </Button>\n            }\n          />\n        }\n      />\n      <AuthorizationSheet\n        description=\"Está tudo certo? Agora é só inserir seu token para confirmar a recarga\"\n        open={openAuthorizationSheet}\n        onClose={onAuthorizationClose}\n      />\n      <Loader open={loading} />\n      {errorMessage && (\n        <Alert title=\"Error\" message={errorMessage} severity=\"error\" />\n      )}\n    </PageContainer>\n  );\n};\n","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/topUp/pages/CheckDataTopUp/CheckDataTopUp.tsx",["4933","4934"],"import React from \"react\";\nimport { PageContainer } from \"components/PageContainer\";\nimport { ProcessPageLayout } from \"components/ProcessPageLayout\";\nimport { AppBar } from \"components/AppBar\";\nimport { AccountRoutes } from \"features/account/constants/routes\";\nimport { ProcessDescriptionHeader } from \"components/ProcessDescriptionHeader\";\nimport { useStyles } from \"./CheckDataTopUp.style\";\nimport {\n  Box,\n  Typography,\n  List,\n  ListItem,\n  ListItemText,\n  ListItemSecondaryAction,\n} from \"@material-ui/core\";\nimport { ContentBalance } from \"features/topUp/components/ContentBalance\";\nimport { ProcessPageFooter } from \"components/ProcessPageFooter\";\nimport { KeyboardArrowLeft, KeyboardArrowRight } from \"@material-ui/icons\";\nimport { nextLabel } from \"constants/buttons/labels\";\nimport { Button } from \"components/Button\";\nimport { TopUpRoutes } from \"features/topUp/constants/routes\";\nimport { useHistory } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { StoreState } from \"redux/state\";\nimport { updateTopUpData } from \"features/topUp/redux/actions\";\nimport { CurrencyFormatter } from \"_translate\";\nimport { ErrorMessage } from \"components/ErrorMessage\";\n\nexport const CheckDataTopUp: React.FC = () => {\n  const style = useStyles();\n  const history = useHistory();\n  const dispatch = useDispatch();\n  const topUpState = useSelector((store: StoreState) => store.topUp);\n  const balance: number = useSelector(\n    (store: StoreState) => store.account.dashboard?.balance!\n  );\n\n  const { topUpPhoneNumberList, topUp } = topUpState;\n  const product =\n    topUp?.topUpProduct ?? topUpPhoneNumberList?.topUpPhoneNumberList[0];\n\n  const [isValidValue, setIsValidValue] = React.useState(false);\n  const [balanceIsValid, setBalanceIsValid] = React.useState<\n    boolean | undefined\n  >();\n  React.useEffect(() => {\n    dispatch(\n      updateTopUpData({\n        originNSU: topUpPhoneNumberList?.originNSU,\n        topUpProduct: product,\n      })\n    );\n  }, []);\n\n  React.useEffect(() => {\n    const convertedValue = product?.productValue!;\n    setIsValidValue(convertedValue > 0 && convertedValue <= balance);\n    setBalanceIsValid(convertedValue <= balance);\n  }, [product]);\n\n  const onNextButtonClick = () => history.push(TopUpRoutes.topUpSchedule);\n  const onListCharge = () => history.push(TopUpRoutes.topUpValue);\n  const onBack = () => {\n    history.push(TopUpRoutes.topUp);\n  };\n\n  return (\n    <PageContainer>\n      <ProcessPageLayout\n        appBar={<AppBar homeRoute={AccountRoutes.home} />}\n        header={\n          <Box className={style.headerContent}>\n            <ProcessDescriptionHeader\n              title=\"Recargas\"\n              subtitle=\"Celular pré-pago\"\n              description={`Recarregar o número ${topUp?.phoneNumber}`}\n            />\n          </Box>\n        }\n        main={\n          <React.Fragment>\n            <Box>\n              <Box className={style.viewBalance} data-test-id=\"view-balance\">\n                <ContentBalance balance={CurrencyFormatter.format(balance)} />\n              </Box>\n              <Box className={style.operatorView} data-test-id=\"operator-view\">\n                <Typography className={style.txtOperator}>\n                  {/* Sua operadora */}\n                </Typography>\n                {/* <img\n              src={TimIcon}\n              alt=\"Icone Tim\"\n              className={style.iconOperator}\n            /> */}\n                {/* <strong>{product?.description}</strong> */}\n              </Box>\n              <List className={style.list} disablePadding>\n                <Box onClick={onListCharge}>\n                  <ListItem button className={style.listItem}>\n                    <ListItemText\n                      primary={\n                        <Box>\n                          <Box className={style.spantext}>Qual o valor?</Box>\n                          <Typography className={style.valueTopUp}>\n                            {CurrencyFormatter.format(product?.productValue!) +\n                              \" \" +\n                              product?.description}\n                          </Typography>\n                        </Box>\n                      }\n                      secondary={\n                        <Box>\n                          <Typography className={style.validateTopUp}>\n                            Válido por 30 dias\n                          </Typography>\n                        </Box>\n                      }\n                    />\n                    <ListItemSecondaryAction className={style.selectValue}>\n                      <Box>\n                        Selecionar\n                        <Box className={style.blocktext}>valor</Box>\n                      </Box>\n                    </ListItemSecondaryAction>\n                  </ListItem>\n                </Box>\n              </List>\n            </Box>\n            <Box className={style.validator}>\n              {!balanceIsValid && (\n                <ErrorMessage message={\"Saldo insuficiente\"} />\n              )}\n            </Box>\n          </React.Fragment>\n        }\n        footer={\n          <ProcessPageFooter\n            primaryButton={\n              <Button\n                endIcon={<KeyboardArrowRight color=\"secondary\" />}\n                onClick={onNextButtonClick}\n                disabled={!isValidValue}\n                data-test-id=\"next-button\"\n              >\n                {nextLabel}\n              </Button>\n            }\n            secondaryButton={\n              <Button\n                palette=\"secondary\"\n                startIcon={<KeyboardArrowLeft color=\"secondary\" />}\n                onClick={onBack}\n              >\n                Voltar\n              </Button>\n            }\n          />\n        }\n      />\n    </PageContainer>\n  );\n};\n","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/authentication/pages/FirstAccess/ChangePasswordFirstAccess/ChangePasswordFirstAccess.tsx",["4935","4936","4937","4938"],"import React from 'react'\nimport { useHistory } from 'react-router-dom'\nimport { Close, KeyboardArrowRight } from '@material-ui/icons'\nimport { ProcessDescriptionHeader } from 'components/ProcessDescriptionHeader'\nimport { ProcessPageFooter } from 'components/ProcessPageFooter'\nimport { AppBar } from 'components/AppBar'\nimport { Button } from 'components/Button'\nimport { cancelLabel, nextLabel, returnLabel } from 'constants/buttons/labels'\nimport { AuthenticationRoutes } from 'features/authentication/constants/routes'\nimport { ProcessPageLayout } from 'components/ProcessPageLayout'\nimport { PasswordField } from 'components/PasswordField'\nimport { Container, Grid, Typography } from '@material-ui/core'\nimport { useStyles } from './ChangePasswordFirstAccess.style'\nimport { Validator } from 'components/Validator'\nimport {\n  validateLowerUpperNumber,\n  validateLength,\n  validateSpecial,\n} from \"_utils/validate\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { updatePassword } from \"features/authentication/redux/actions\";\nimport { KeyboardArrowLeft } from \"@material-ui/icons\";\nimport { logout } from \"features/authentication/redux/actions\";\nimport { StoreState } from \"redux/state\";\nimport { Alert } from \"components/Alert\";\n\nexport const ChangePasswordFirstAccess: React.FC = () => {\n  const [newPassword, setNewPassword] = React.useState(\"\");\n  const [disableNextButton, setDisableNextButton] = React.useState(false);\n  const [passwordLengthIsValid, setPasswordLenghtIsValid] = React.useState<\n    boolean | undefined\n  >();\n  const [passwordLowerIsValid, setPasswordLowerIsValid] = React.useState<\n    boolean | undefined\n  >();\n  const [passwordUpperIsValid, setPasswordUpperIsValid] = React.useState<\n    boolean | undefined\n  >();\n  const [passwordSpecialIsValid, setPasswordSpecialIsValid] = React.useState<\n    boolean | undefined\n  >();\n  const [passwordValidateNumber, setPasswordValidateNUmber] = React.useState<\n    boolean | undefined\n  >();\n\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const styles = useStyles();\n\n  const condition =\n    passwordLengthIsValid &&\n    passwordLowerIsValid &&\n    passwordUpperIsValid &&\n    passwordSpecialIsValid &&\n    passwordValidateNumber;\n\n  React.useEffect(() => {\n    setDisableNextButton(!(condition && passwordLengthIsValid));\n  }, [condition, passwordLengthIsValid]);\n\n  const onPasswordChange = (event: React.ChangeEvent<HTMLInputElement>) =>\n    setNewPassword(event.target.value);\n\n  const onValidateLength = (value: boolean | undefined) => {\n    setPasswordLenghtIsValid(value);\n  };\n\n  const onValidateLowerUpperNumber = (value: boolean | undefined) => {\n    setPasswordLowerIsValid(value);\n    setPasswordUpperIsValid(value);\n    setPasswordValidateNUmber(value);\n  };\n\n  const onCancelButtonClick = () => {\n    dispatch(logout());\n    history.replace(AuthenticationRoutes.signIn);\n  };\n\n  const onNextButtonClick = (event: React.FormEvent) => {\n    event.preventDefault();\n    history.push(AuthenticationRoutes.confirmPasswordFirstAccess);\n    dispatch(updatePassword({ newPassword }));\n  };\n\n  const authState = useSelector((state: StoreState) => state.auth);\n\n  return (\n    <Container maxWidth=\"xs\" className={styles.container}>  \n\n      <ProcessDescriptionHeader\n        title={'Criar Senha'}\n        description=\"Para utilizar  nossos serviços , você deve estar de acordo com os termos de uso\"\n      />\n  \n      <Grid\n        container\n        direction=\"column\"\n        spacing={3}\n        onSubmit={onNextButtonClick}\n      >\n        {authState.errorMessage && (\n          <Alert\n            title=\"Erro\"\n            message={authState.errorMessage}\n            severity={'error'}\n          />\n        )}\n\n        <Grid item component=\"form\" className={styles.input}>\n          <PasswordField\n            label=\"Nova Senha\"\n            value={newPassword}\n            placeholder=\"Digite sua nova senha\"\n            onChange={onPasswordChange}\n          />\n        </Grid>\n\n        <Grid item>\n          <Typography\n            className={styles.description}\n            data-test-id=\"description-text\"\n          >\n            Sua senha deve atender os critérios a baixo:\n          </Typography>\n        </Grid>\n\n        <Grid item>\n          <Grid container direction=\"column\" spacing={1}>\n            <Grid item>\n              <Validator\n                value={newPassword}\n                description={'Ao menos um caractere especial'}\n                isValid={passwordSpecialIsValid}\n                validation={validateSpecial}\n                onValidate={setPasswordSpecialIsValid}\n                strictValidation={false}\n              />\n            </Grid>\n            <Grid item>\n              <Validator\n                value={newPassword}\n                description={'No mínimo 8 caracteres e no máximo 16'}\n                isValid={passwordLengthIsValid}\n                validation={validateLength}\n                onValidate={onValidateLength}\n                strictValidation={false}\n              />\n            </Grid>\n            <Grid item>\n              <Validator\n                value={newPassword}\n                description={'Letras maiúsculas, minúsculas e números'}\n                isValid={\n                  passwordUpperIsValid &&\n                  passwordLowerIsValid &&\n                  passwordValidateNumber\n                }\n                validation={() => validateLowerUpperNumber(newPassword)}\n                onValidate={onValidateLowerUpperNumber}\n                strictValidation={false}\n              />\n            </Grid>\n          </Grid>\n        </Grid>\n      </Grid>\n      \n      <ProcessPageFooter\n        primaryButton={\n          <Button\n            disabled={disableNextButton}\n            endIcon={<KeyboardArrowRight color=\"secondary\" />}\n            onClick={onNextButtonClick}\n            data-test-id=\"next-button\"\n          >\n            {nextLabel}\n          </Button>\n        }\n        secondaryButton={\n          <Button\n            palette=\"secondary\"\n            startIcon={<KeyboardArrowLeft color=\"secondary\" />}\n            onClick={onCancelButtonClick}\n            data-test-id=\"cancel-button\"\n          >\n            {returnLabel}\n          </Button>\n        }\n      />\n    </Container>\n  )\n}\n","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/account/components/AccountBalance/AccountBalance.style.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/tags/components/TagChip/TagChip.style.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/payment/redux/actionTypes.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/account/components/AccountSheet/AccountSheet.style.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/payment/components/EnterCodeButton/index.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/onboarding/constants/routes.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/payment/components/ShowBalanceButton/ShowBalanceButton.style.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/payment/components/OrientationBarIcon/index.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/payment/components/BarcodeHeader/index.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/card/components/PopUp/PopUpConfirmPassword/index.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/digitalWithdrawal/components/ButtonReadQRCode/index.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/components/SwitchIOS/index.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/account/components/FilterSectionTitleAndDescription/FilterSectionTitleAndDescription.tsx",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/payment/components/ReceiverAndValue/index.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/topUp/components/ListButton/ListButtonRadio/ListButtonRadio.tsx",["4939"],"import React from \"react\";\nimport {\n  List,\n  ListItem,\n  ListItemText,\n  ListItemIcon,\n  Radio,\n  Box,\n} from \"@material-ui/core\";\nimport { useStyles } from \"./ListButtonRadio.style\";\nimport { useHistory } from \"react-router-dom\";\n\ninterface ListOptionsProps {\n  title: string;\n  description?: string;\n  selectedValue?: string;\n  setSelectedValue?: Function;\n  goToRoute: string;\n  onClick?: React.MouseEventHandler<HTMLElement>;\n}\n\nexport const ListButtonRadio: React.FC<ListOptionsProps> = ({\n  title,\n  description,\n  selectedValue,\n  setSelectedValue,\n  goToRoute,\n  onClick,\n}) => {\n  const history = useHistory();\n  const styles = useStyles();\n\n  return (\n    <List disablePadding>\n      <Box onClick={onClick} data-test-id=\"list-radio-button\">\n        <ListItem button divider className={styles.listItem}>\n          <ListItemIcon>\n            <Radio className={styles.radio} checked={selectedValue === title} />\n          </ListItemIcon>\n          <ListItemText\n            className={styles.listItemText}\n            primary={title}\n            secondary={description}\n          ></ListItemText>\n        </ListItem>\n      </Box>\n    </List>\n  );\n};\n","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/topUp/components/CardPhone/CardPhone.tsx",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/components/DateInput/DateInput.tsx",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/topUp/components/InputNumber/InputNumber.tsx",["4940","4941"],"import React, { useEffect } from \"react\";\nimport { Box, Typography } from \"@material-ui/core\";\nimport { TextField } from \"@material-ui/core\";\nimport { maskPhone } from \"_utils/masks/phone\";\nimport { useMask } from \"hooks/useMask\";\nimport { useStyle } from \"./InputNumber.style\";\n\ninterface DescriptionProps {\n  description: string;\n  placeholder?: string;\n  setValuePhone: React.Dispatch<React.SetStateAction<string>>;\n  valueNumberPhone?: string;\n}\n\nexport const InputNumber: React.FC<DescriptionProps> = ({\n  description,\n  placeholder,\n  setValuePhone,\n  valueNumberPhone = \"\",\n}) => {\n  const style = useStyle();\n  const [phoneInput, setPhoneInput] = useMask(maskPhone);\n\n  const onPhoneChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setPhoneInput(event.target.value);\n  };\n\n  useEffect(() => {\n    setPhoneInput(valueNumberPhone);\n  }, []);\n\n  useEffect(() => {\n    setValuePhone(phoneInput);\n  }, [phoneInput]);\n\n  return (\n    <React.Fragment>\n      <Typography className={style.descriptionLabel}>\n        <label>{description}</label>\n      </Typography>\n      <Box className={style.inputContent}>\n        <TextField\n          className={style.textFieldContent}\n          id=\"inputNumber\"\n          placeholder={placeholder}\n          variant=\"outlined\"\n          value={phoneInput}\n          required\n          onChange={onPhoneChange}\n          data-test-id=\"change-phone\"\n        />\n      </Box>\n    </React.Fragment>\n  );\n};\n","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/topUp/components/ContentBalance/ContentBalance.tsx",["4942"],"import React from \"react\";\nimport { Card, Box, Typography } from \"@material-ui/core\";\nimport { useStyles } from \"./ContentBalance.style\";\nimport { CurrencyFormatter } from \"_translate\";\n\ninterface ContentBalanceProps {\n  balance: string;\n}\n\nexport const ContentBalance: React.FC<ContentBalanceProps> = ({ balance }) => {\n  const style = useStyles();\n  return (\n    <Card className={style.card}>\n      <Box>\n        <Typography className={style.txtBalance} data-test-id=\"content-balance\">\n          Seu saldo <strong className={style.strongStyle}>{balance}</strong>\n        </Typography>\n      </Box>\n    </Card>\n  );\n};\n","/home/danielvitor/Documentos/Develop/stonebank_front/src/components/ButtonAttachDocuments/index.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/card/components/Inputs/LastDigitsInput/LastDigitsInput.style.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/payment/components/TitleAndDescriptionTextAttach/index.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/schedulePayments/components/PopUpCancelScheduledPayment/PopUpCancelScheduledPayment.tsx",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/card/components/Inputs/InsertIdCard/InsertIdCard.style.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/schedulePayments/components/SearchFilter/SearchFilter.tsx",["4943","4944"],"import React from \"react\";\nimport { Box, MenuItem, Select, Typography } from \"@material-ui/core\";\nimport { useStyles } from \"./SearchFilter.style\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { StoreState } from \"redux/state\";\nimport {\n  getFutureTransactions,\n  updateTransactions,\n} from \"features/schedulePayments/redux/actions\";\n\ninterface SearchFieldProps {\n  onChange?: (event: React.ChangeEvent<HTMLInputElement>) => void;\n}\n\nexport const SearchFilter: React.FC<SearchFieldProps> = () => {\n  const style = useStyles();\n  const dispatch = useDispatch();\n\n  const { futureTransaction, loading, errorMessage } = useSelector(\n    (state: StoreState) => state.futureTransactions\n  );\n\n  const operationTypes = [\n    { value: 99, name: \"Todos\" },\n    { value: 2, name: \"Boleto a Pagar\" },\n    { value: 3, name: \"Transferência\" },\n    { value: 6, name: \"Transferência Interna\" },\n    { value: 8, name: \"Gare\" },\n    { value: 11, name: \"Fgts\" },\n    { value: 12, name: \"Darj\" },\n    { value: 13, name: \"Transferência por SMS\" },\n  ];\n\n  const valueSelect = (select?: number | null) =>\n    operationTypes.find((op) => op.value === select);\n\n  return (\n    <Box>\n      <Typography color=\"primary\" variant=\"caption\" gutterBottom>\n        Tipo de transação\n      </Typography>\n      <Select\n        data-test-id=\"search-filter\"\n        label=\"Tipo de transação\"\n        name=\"operationType\"\n        margin=\"none\"\n        value={valueSelect(futureTransaction?.operationType)?.name ?? \"Todos\"}\n        className={style.selectTransactionType}\n        fullWidth\n        MenuProps={{\n          anchorOrigin: {\n            vertical: \"bottom\",\n            horizontal: \"left\",\n          },\n          transformOrigin: {\n            vertical: \"top\",\n            horizontal: \"left\",\n          },\n          getContentAnchorEl: null,\n        }}\n        inputProps={{\n          \"aria-label\": \"operationType\",\n        }}\n      >\n        {operationTypes?.map((operation) => (\n          <MenuItem\n            data-test-id=\"operation-type\"\n            onClick={() =>\n              dispatch(\n                updateTransactions({\n                  ...futureTransaction,\n                  operationType: operation.value,\n                })\n              ) && dispatch(getFutureTransactions())\n            }\n            value={operation.name}\n            className={style.selectTransactionType}\n          >\n            {operation.name}\n          </MenuItem>\n        ))}\n      </Select>\n    </Box>\n  );\n};\n","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/digitalWithdrawal/pages/DigitalWithdrawalSuccess/index.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/digitalWithdrawal/pages/DigitalWithdrawalReceipt/index.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/payment/components/AccountBalance/index.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/components/InputCurrency/index.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/schedulePayments/components/TransactionList/TransactionList.tsx",["4945","4946","4947"],"import React, { useEffect, useMemo, useState } from \"react\";\nimport { Close } from \"@material-ui/icons\";\nimport { useStyle } from \"./TransactionList.style\";\nimport { Typography, Box, Card, ListItem, Button } from \"@material-ui/core\";\nimport { CurrencyFormatter } from \"_translate\";\nimport { useSelector } from \"react-redux\";\nimport { StoreState } from \"redux/state\";\nimport { Icon } from \"components/Icon\";\ninterface DayTransactionsProps {\n  typePayment?: string | number;\n  value?: number | bigint;\n  name?: string;\n  status?: number;\n  paymentDate?: Date;\n  dueDate?: Date;\n  onClick: () => void;\n}\nexport const TransactionList: React.FC<DayTransactionsProps> = ({\n  typePayment,\n  value,\n  name,\n  status,\n  paymentDate,\n  onClick,\n}) => {\n  const styles = useStyle();\n  const transactionType = useSelector(\n    (state: StoreState) =>\n      state.futureTransactions.futureTransaction?.futureTransactionType\n  );\n\n  const convertDate = (date: Date) => {\n    if (date) {\n      const dateString = date || new Date();\n      const day = dateString.getDate().toString().padStart(2, \"0\");\n      const month = (dateString.getMonth() + 1).toString().padStart(2, \"0\");\n      const year = dateString.getFullYear();\n      return `${day}/${month}/${year}`;\n    }\n    return undefined;\n  };\n\n  const paymentStatus = useMemo(() => {\n    return {\n      status:\n        status === 0\n          ? {\n              statusName: \"criado\",\n              statusIcon: (\n                <Icon name=\"paymentToExpire\" className={styles.icon} />\n              ),\n            }\n          : status === 1\n          ? {\n              statusName: \"pago\",\n              statusIcon: <Icon name=\"paid\" className={styles.icon} />,\n            }\n          : status === 2\n          ? {\n              statusName: \"cancelado\",\n              statusIcon: (\n                <Icon name=\"paymentCanceled\" className={styles.icon} />\n              ),\n            }\n          : status === 3\n          ? {\n              statusName: \"erro\",\n              statusIcon: <Icon name=\"paymentLate\" className={styles.icon} />,\n            }\n          : {\n              statusName: \"erro de saldo\",\n              statusIcon: <Icon name=\"paymentLate\" className={styles.icon} />,\n            },\n    };\n  }, [status]);\n\n  const transactionsStatus = paymentStatus.status;\n\n  const dateText =\n    typePayment === \"Transferência por SMS\"\n      ? `criado dia: ${convertDate(new Date(paymentDate!))}`\n      : `agendado para o dia: ${convertDate(new Date(paymentDate!))}`;\n\n  const futureTransactionText = !name\n    ? \"\"\n    : transactionType === 0\n    ? `para ${name}`\n    : ` de ${name}`;\n\n  return (\n    <React.Fragment>\n      <Card className={styles.transactionContainer}>\n        <ListItem>\n          <Box\n            className={styles.sheduleTransactionCard}\n            data-test-id=\"transaction-list\"\n          >\n            <Box className={styles.textDescripition}>\n              {typePayment}\n              <Box className={styles.transactionsDate}>{dateText}</Box>\n            </Box>\n            <Box className={styles.transactionValue}>\n              {CurrencyFormatter.format(value!)}\n              <Box className={styles.buttonContainer}>\n                {transactionType === 0 && status === 0 ? (\n                  <Button\n                    className={styles.cancelButton}\n                    size=\"small\"\n                    onClick={onClick}\n                    startIcon={<Close color=\"primary\" />}\n                    data-test-id=\"cancel-button\"\n                  >\n                    Cancelar\n                  </Button>\n                ) : (\n                  \"\"\n                )}\n              </Box>\n            </Box>\n            <Box>\n              <Typography>\n                <Box data-test-id=\"transactions\" className={styles.textName}>\n                  {futureTransactionText}\n                </Box>\n                <Box className={styles.transactionStatus}>\n                  {transactionsStatus?.statusIcon}\n                  &nbsp;{transactionsStatus?.statusName}\n                </Box>\n              </Typography>\n            </Box>\n          </Box>\n        </ListItem>\n      </Card>\n    </React.Fragment>\n  );\n};\n","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/card/components/PopUp/PopUpTempBlock/index.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/card/components/ListButton/ListButtonSwitch/index.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/card/components/SelectCardButton/index.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/components/ConfirmTokenSheet/ConfirmTokenSheet.view.tsx",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/payment/components/ReceiptDescription/index.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/payment/components/BarcodeScanner/index.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/components/ActionList/ActionList.style.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/account/components/ListItemHelp/ListItemHelp.style.tsx",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/topUp/pages/CompleteTopUp/CompleteTopUp.style.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/topUp/pages/CheckDataTopUp/CheckDataTopUp.style.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/tags/redux/actions.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/taxPayment/components/DetailsFgtsDescription/DetailsFgtsDescription.style.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/authentication/pages/FirstAccess/ChangePasswordFirstAccess/ChangePasswordFirstAccess.style.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/taxPayment/components/DetailsGareDescription/DetailsGareDescription.style.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/account/components/ShowMoreButton/index.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/card/components/ReplacementData/index.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/payment/components/DetailPaymentDescription/index.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/payment/components/EnterCodeButton/EnterCodeButton.tsx",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/payment/components/OrientationBarIcon/OrientationBarIcon.tsx",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/payment/components/BarcodeHeader/BarcodeHeader.tsx",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/account/components/FilterSectionTitleAndDescription/FilterSectionTitleAndDescription.style.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/onboarding/pages/ActivateBySMS/ValidatePhoneForSMS/ValidatePhoneForSMS.tsx",["4948","4949","4950"],"import { OnboardingRoutes } from \"features/onboarding/constants/routes\";\nimport { useHistory } from \"react-router-dom\";\nimport { ProcessPageLayout } from \"components/ProcessPageLayout\";\nimport { AppBar } from \"components/AppBar\";\nimport { Button } from \"components/Button\";\nimport { Close, KeyboardArrowRight } from \"@material-ui/icons\";\nimport {\n  cancelLabel,\n  nextLabel,\n  resendTokenLabel,\n} from \"constants/buttons/labels\";\nimport { ProcessDescriptionHeader } from \"components/ProcessDescriptionHeader\";\nimport { Grid } from \"@material-ui/core\";\nimport { TokenInput } from \"features/onboarding/components/inputs/TokenInput\";\nimport { ProcessPageFooter } from \"components/ProcessPageFooter\";\nimport { useStyles } from \"./ValidatePhoneForSMS.style\";\nimport React from \"react\";\nimport { ButtonWithFloatingIcon } from \"components/ButtonWithFloatingIcon\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  closeAlert,\n  generateAuthorizationToken,\n  validateAuthorizationToken,\n} from \"features/onboarding/redux/actions\";\nimport { StoreState } from \"redux/state\";\nimport { PageContainer } from \"components/PageContainer\";\nimport { Loader } from \"components/Loader\";\nimport { Alert } from \"components/Alert\";\nimport { SuccessOnboardingState } from \"features/onboarding/redux/state\";\n\ninterface ResendTokenProsps {\n  tokenRoute: string;\n}\n\nexport const ValidatePhone: React.FC<ResendTokenProsps> = ({ tokenRoute }) => {\n  const [tokenInput, setTokenInput] = React.useState(\"\");\n  const state = useSelector((s: StoreState) => s.onboarding);\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const style = useStyles();\n\n  const { loading, onboardingForm, errorMessage } = state;\n\n  React.useEffect(() => {\n    dispatch(generateAuthorizationToken());\n  }, []);\n\n  React.useEffect(() => {\n    if (state instanceof SuccessOnboardingState && tokenInput.length === 6)\n      history.push(OnboardingRoutes.createPasswordForSMS);\n  }, [state]);\n\n  const onCancelButtonClick = () => {\n    history.go(-5);\n  };\n\n  const onNextButtonClick = () => {\n    if (tokenInput.length === 6)\n      dispatch(validateAuthorizationToken(tokenInput));\n  };\n\n  const onSendTokenClick = () => {\n    dispatch(generateAuthorizationToken());\n  };\n\n  const onAlertClose = () => {\n    dispatch(closeAlert());\n  };\n\n  return (\n    <PageContainer>\n      <ProcessPageLayout\n        appBar={\n          <AppBar\n            homeRoute={OnboardingRoutes.welcome}\n            action={\n              <Button\n                palette=\"secondary\"\n                size=\"small\"\n                startIcon={<Close color=\"primary\" />}\n                onClick={onCancelButtonClick}\n                data-test-id=\"cancel-button\"\n              >\n                {cancelLabel}\n              </Button>\n            }\n          />\n        }\n        header={\n          <ProcessDescriptionHeader\n            title=\"Ative sua Conta\"\n            subtitle=\"Validar seu celular\"\n            description=\"Informe o Token que você recebeu por SMS para continuar o cadastro.\"\n          />\n        }\n        main={\n          <Grid direction=\"column\" alignItems=\"center\">\n            <Grid item component=\"form\">\n              <TokenInput onChange={setTokenInput} value={tokenInput} />\n            </Grid>\n            <Grid item className={style.bgAlignButton}>\n              <ButtonWithFloatingIcon onClick={onSendTokenClick}>\n                {resendTokenLabel}\n              </ButtonWithFloatingIcon>\n            </Grid>\n          </Grid>\n        }\n        footer={\n          <ProcessPageFooter\n            primaryButton={\n              <Button\n                disabled={tokenInput.length !== 6}\n                endIcon={<KeyboardArrowRight color=\"secondary\" />}\n                onClick={onNextButtonClick}\n                data-test-id=\"next-button\"\n              >\n                {nextLabel}\n              </Button>\n            }\n          />\n        }\n      />\n      <Loader open={loading} />\n      {errorMessage && (\n        <Alert\n          title=\"Erro\"\n          message={errorMessage}\n          severity={\"error\"}\n          onClose={onAlertClose}\n        />\n      )}\n    </PageContainer>\n  );\n};\n","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/topUp/components/ListButton/ListButtonRadio/ListButtonRadio.style.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/topUp/components/CardPhone/CardPhone.style.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/qrCodeTransfer/constants/routes.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/topUp/components/InputNumber/InputNumber.style.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/topUp/components/ContentBalance/ContentBalance.style.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/qrCodeTransfer/pages/GenerateQrCodeTransfer/GenerateQrCodeTransfer.tsx",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/components/SwitchIOS/SwitchIOS.tsx",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/digitalWithdrawal/components/ButtonReadQRCode/ButtonReadQRCode.tsx",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/qrCodeTransfer/pages/QrCodeTransfer/QrCodeTransfer.tsx",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/components/TransactionDetailValue/index.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/schedulePayments/components/PopUpCancelScheduledPayment/PopUpCancelScheduledPayment.style.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/components/TransactionDetailName/index.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/payment/components/ReceiverAndValue/ReceiverAndValue.tsx",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/schedulePayments/components/SearchFilter/SearchFilter.style.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/components/TransactionDetail/index.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/components/ButtonAttachDocuments/ButtonAttachDocuments.tsx",["4951","4952","4953"],"import React, { useState } from \"react\";\nimport { Box, Button } from \"@material-ui/core\";\nimport { useStyles } from \"./ButtonAttachDocuments.style\";\nimport { Attachment } from \"features/transference/redux/models/attachment\";\nimport { useDispatch } from \"react-redux\";\n\ninterface ButtonAttachDocumentsProps {\n  title: string;\n  imagePath: string | React.ReactNode;\n  attachments: Attachment[];\n  setAttachments: (attachments: Attachment[]) => void;\n}\n\nexport const ButtonAttachDocuments: React.FC<ButtonAttachDocumentsProps> = ({\n  title,\n  imagePath,\n  attachments,\n  setAttachments,\n}: ButtonAttachDocumentsProps) => {\n  const dispatch = useDispatch();\n  const styleButtonAttachDocuments = useStyles();\n\n  const uploadImage = async (e: any) => {\n    const file = e.target.files[0];\n    let extension = \"\";\n\n    if (file != null || file != undefined)\n      extension = \".\".concat(file.name.split(\".\").pop());\n    const base64 = await convertBase64(file);\n    let cont = String(base64);\n\n    let content = cont.replace(\n      cont.substring(0, cont.indexOf(\"base64,\") + 7),\n      \"\"\n    );\n\n    if (attachments !== null) {\n      setAttachments([...attachments, { content, extension }]);\n    }\n  };\n  const convertBase64 = (file: File) => {\n    return new Promise((resolve, reject) => {\n      const fileReader = new FileReader();\n      fileReader.readAsDataURL(file);\n\n      fileReader.onload = () => {\n        resolve(fileReader.result);\n      };\n\n      fileReader.onerror = (error) => {\n        reject(error);\n      };\n    });\n  };\n\n  return (\n    <Button\n      component=\"label\"\n      className={styleButtonAttachDocuments.ButtonAttachDocuments}\n    >\n      <input\n        type=\"file\"\n        hidden\n        id=\"raised-button-file\"\n        onChange={(e) => {\n          uploadImage(e);\n        }}\n      />\n      <label\n        htmlFor=\"raised-button-file\"\n        className={styleButtonAttachDocuments.contentAttachDocuments}\n      >\n        {imagePath}\n        <Box className={styleButtonAttachDocuments.labelAttachDocuments}>\n          {\" \"}\n          {title}{\" \"}\n        </Box>\n      </label>\n    </Button>\n  );\n};\n","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/schedulePayments/components/TransactionList/TransactionList.style.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/payment/components/TitleAndDescriptionTextAttach/TitleAndDescriptionTextAttach.tsx",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/components/ConfirmTokenSheet/ConfirmTokenSheet.style.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/taxPayment/pages/Darj/PaymentDarjType/PaymentDarjType.style.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/components/InputCurrency/InputCurrency.tsx",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/payment/components/AccountBalance/AccountBalance.tsx",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/digitalWithdrawal/pages/DigitalWithdrawalReceipt/DigitalWithdrawalReceipt.tsx",["4954","4955"],"import React from \"react\";\nimport { Box, Typography } from \"@material-ui/core\";\nimport { PageContainer } from \"components/PageContainer\";\nimport { ProcessPageLayout } from \"components/ProcessPageLayout\";\nimport { Button } from \"components/Button\";\nimport { useHistory } from \"react-router-dom\";\nimport { Close } from \"@material-ui/icons\";\nimport { AppBar } from \"components/AppBar\";\nimport { useStyles } from \"./DigitalWithdrawalReceipt.style\";\nimport { ButtonWithFloatingIcon } from \"components/ButtonWithFloatingIcon\";\nimport { cancelLabel, saveLabel, shareLabel } from \"constants/buttons/labels\";\nimport { DigitalWithdrawalRoutes } from \"features/digitalWithdrawal/constants/routes\";\nimport { AccountRoutes } from \"features/account/constants/routes\";\nimport { ProcessDescriptionHeader } from \"components/ProcessDescriptionHeader\";\nimport { CurrencyFormatter } from \"_translate\";\nimport { Icon } from \"components/Icon\";\n\nexport const DigitalWithdrawalReceipt: React.FC = () => {\n  const history = useHistory();\n  const styles = useStyles();\n\n  const onCancelButtonClick = () => {\n    history.replace(AccountRoutes.home);\n  };\n\n  return (\n    <PageContainer>\n      <ProcessPageLayout\n        appBar={\n          <AppBar\n            homeRoute={AccountRoutes.home}\n            action={\n              <Button\n                palette=\"secondary\"\n                size=\"small\"\n                startIcon={<Close color=\"primary\" />}\n                onClick={onCancelButtonClick}\n                data-test-id=\"cancel-button\"\n              >\n                {cancelLabel}\n              </Button>\n            }\n          />\n        }\n        header={<ProcessDescriptionHeader title=\"Comprovante\" />}\n        main={\n          <Box className={styles.detailContent}>\n            <Typography> Saque </Typography>\n            <Typography className={styles.detail}>\n              {/* {CurrencyFormatter.format(value)} */}\n              R$ 570,00\n            </Typography>\n            <Typography> Realizado em </Typography>\n            <Typography className={styles.detail}>\n              Rede Banco 24 horas\n            </Typography>\n\n            <Typography> Data </Typography>\n            <Typography className={styles.detail}>\n              {/* {DateFormatter.format(date)} */}\n              27/01/2022\n            </Typography>\n            <Typography> Formato do saque </Typography>\n            <Typography className={styles.detail}>QR Code</Typography>\n            <Typography> Identificador de Operação </Typography>\n            <Typography className={styles.detail}>\n              84660000000 0 79890109011 7\n            </Typography>\n\n            <Box className={styles.descriptionBox}>\n              <Typography>Autenticação</Typography>\n              <Typography>Pago via: Open Source Bank</Typography>\n              <Typography>Controle/Protocolo: 44B8-4B9324C-2398721</Typography>\n              <Typography>\n                Protocolo Interno : 44B8-4B9324C-2398721320AB\n              </Typography>\n            </Box>\n          </Box>\n        }\n        footer={\n          <Box className={styles.buttons}>\n            <ButtonWithFloatingIcon\n              icon={<Icon name=\"buttonBg\" />}\n              size=\"large\"\n            >\n              {saveLabel}\n            </ButtonWithFloatingIcon>\n            <ButtonWithFloatingIcon\n              icon={<Icon name=\"buttonBg\" />}\n              size=\"large\"\n            >\n              {shareLabel}\n            </ButtonWithFloatingIcon>\n          </Box>\n        }\n      />\n    </PageContainer>\n  );\n};\n","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/digitalWithdrawal/pages/DigitalWithdrawalSuccess/DigitalWithdrawalSuccess.tsx",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/card/components/SelectCardButton/SelectCardButton.tsx",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/card/components/ListButton/ListButtonSwitch/ListButtonSwitch.tsx",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/tags/redux/actionTypes.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/card/components/PopUp/PopUpTempBlock/PopUpTempBlock.tsx",["4956","4957"],"import React from \"react\";\nimport { Box, Typography } from \"@material-ui/core\";\nimport { useStyle } from \"./PopUpTempBlock.style\";\nimport { Button } from \"components/Button\";\nimport { Close } from \"@material-ui/icons\";\nimport { ButtonWithFloatingIcon } from \"components/ButtonWithFloatingIcon\";\nimport { Drawer, Grid } from \"@material-ui/core\";\nimport { Alert } from \"components/Alert\";\nimport { PageContainer } from \"components/PageContainer\";\nimport { Loader } from \"components/Loader\";\nimport { useDispatch } from \"react-redux\";\nimport { useSelector } from \"react-redux\";\nimport { StoreState } from \"redux/state\";\nimport { Card } from \"features/card/redux/models/card\";\nimport { OtpInput } from \"components/OtpInput/OtpInput\";\nimport { Icon } from \"components/Icon\";\n\ninterface PopUpBlockPropsState {\n  loading: boolean;\n  message?: string;\n  success?: boolean;\n  switchisBlocked?: boolean;\n}\n\ninterface PopUpBlockProps {\n  open: boolean;\n  panLastDigits?: number;\n  identifier?: string;\n  isBlocked?: boolean;\n  flagName: string;\n  onClose: (_?: string) => void;\n}\n\nexport const PopUpTempBlock: React.FC<PopUpBlockProps> = ({\n  open,\n  onClose,\n  isBlocked,\n  flagName,\n  panLastDigits,\n}) => {\n  const [{ loading, success, message }, setState] =\n    React.useState<PopUpBlockPropsState>({\n      loading: false,\n    });\n\n  const [cards] = useSelector<StoreState, [Card | undefined]>((state) => [\n    state.card.card,\n  ]);\n  const [inputValue, setInputValue] = React.useState(\"\");\n  const [displayCards, setDisplayCards] = React.useState(cards);\n  const [disableConcludeButton, setDisableConcludeButton] =\n    React.useState(true);\n\n  const styles = useStyle();\n  const dispatch = useDispatch();\n\n  React.useEffect(() => {\n    setDisplayCards(cards);\n  }, [cards]);\n\n  React.useEffect(() => {\n    if (inputValue.length < 4) setDisableConcludeButton(true);\n    else setDisableConcludeButton(false);\n  }, [inputValue.length]);\n\n  const onCloseButtonClick = () => {\n    onClose();\n  };\n\n  const handlePassword = (value: string) => {\n    setInputValue(value);\n  };\n\n  const onConfirmButtonClick = () => {\n    onClose(inputValue);\n  };\n\n  const blockrUnBlockDescription = !displayCards?.isBlocked ? (\n    <Grid item data-test-id=\"temporary-block\">\n      <Typography className={styles.textBlock}>\n        Deseja realmente bloquear\n        <br /> temporariamente seu cartão?\n      </Typography>\n      <Typography className={styles.subtextBlock}>\n        Seu cartão de crédito pré-pago{\": \"}\n        <strong>\n          {flagName} final {panLastDigits}\n        </strong>\n        , não poderá ser usado até que você reative.\n      </Typography>\n      <Typography className={styles.text}>Digite sua senha</Typography>\n    </Grid>\n  ) : (\n    <Grid item>\n      <Typography className={styles.textBlock}>\n        Deseja realmente desbloquear seu cartão?\n      </Typography>\n      <Typography className={styles.subtextBlock}>\n        Seu cartão de crédito pré-pago{\": \"}\n        <strong>\n          {flagName} final {panLastDigits}\n        </strong>\n        , poderá ser usado normalmente.\n      </Typography>\n      <Typography className={styles.text}>Digite sua senha</Typography>\n    </Grid>\n  );\n\n  return (\n    <React.Fragment>\n      <Drawer\n        className={styles.drawer}\n        anchor=\"bottom\"\n        open={open}\n        onClose={() => onClose()}\n        data-test-id=\"drawer\"\n      >\n        <PageContainer>\n          <Box className={styles.content}>\n            <Box className={styles.closeButton}>\n              <Button\n                size=\"small\"\n                palette=\"secondary\"\n                onClick={onCloseButtonClick}\n                startIcon={<Close color=\"primary\" />}\n                data-test-id=\"close-button\"\n              >\n                Fechar\n              </Button>\n            </Box>\n            <Grid container direction=\"column\" spacing={4}>\n              <Grid item>\n                <Box>{blockrUnBlockDescription}</Box>\n              </Grid>\n              <Grid item>\n                <Box>\n                  <OtpInput\n                    className={styles.OtpInput}\n                    numInputs={4}\n                    onChange={(valueInput: string) =>\n                      handlePassword(valueInput)\n                    }\n                    value={inputValue}\n                    isInputSecure\n                    isInputNum\n                    data-test-id=\"input-password\"\n                  />\n                </Box>\n              </Grid>\n              <Grid item>\n                <Box className={styles.confirm}>\n                  <ButtonWithFloatingIcon\n                    icon={<Icon name={\"confirm\"} />}\n                    disabled={disableConcludeButton}\n                    onClick={onConfirmButtonClick}\n                    data-test-id=\"confirm-button\"\n                  >\n                    Confirmar\n                  </ButtonWithFloatingIcon>\n                </Box>\n              </Grid>\n            </Grid>\n          </Box>\n        </PageContainer>\n      </Drawer>\n      <Loader open={loading} />\n      {message && (\n        <Alert\n          title={success ? \"Sucesso\" : \"Erro\"}\n          message={message}\n          severity={success ? \"success\" : \"error\"}\n        />\n      )}\n    </React.Fragment>\n  );\n};\n","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/taxPayment/pages/Darj/PaymentDarjDueDate/PaymentDarjDueDate.style.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/taxPayment/pages/Gare/PaymentGareDueDate/PaymentGareDueDate.style.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/taxpayment/components/DetailsDarjDescription/DetailsDarjDescription.style.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/payment/components/BarcodeScanner/BarcodeScanner.tsx",["4958"],"import React from \"react\";\nimport { useHistory } from \"react-router\";\nimport { PaymentRoutes } from \"features/payment/constants/routes\";\nimport { getDetailsByNumericSequence } from \"features/payment/redux/actions\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getBaseRequestData } from \"_utils/http\";\nimport { StoreState } from \"redux/state\";\nimport { HttpClient } from \"_config/http\";\nimport { Box } from \"@material-ui/core\";\n//@ts-ignore\nimport ScanditBarcodeScanner from \"scandit-sdk-react\";\nimport { BarcodePicker } from \"scandit-sdk/build/main/lib/barcodePicker/barcodePicker\";\nimport { ScanSettings } from \"scandit-sdk/build/main/lib/scanSettings\";\nimport { Barcode } from \"scandit-sdk/build/main/lib/barcode\";\nimport { PaymentError } from \"features/payment/components/PaymentError\";\nimport { useStyles } from \"./BarCodeScanner.style\";\n\nexport const BarcodeScanner: React.FC = () => {\n  const style = useStyles();\n  const history = useHistory();\n  const dispatch = useDispatch();\n  const [key, setKey] = React.useState(\"\");\n  const [failed, setFailed] = React.useState(false);\n\n  const onReader = (barcode: string) => {\n    history.push(PaymentRoutes.details);\n    dispatch(getDetailsByNumericSequence(barcode));\n  };\n\n  const scanSettings = new ScanSettings({\n    enabledSymbologies: [Barcode.Symbology.INTERLEAVED_2_OF_5],\n  });\n  scanSettings\n    .getSymbologySettings(Barcode.Symbology.INTERLEAVED_2_OF_5)\n    .setActiveSymbolCounts([44, 48])\n    .setEnabled(true);\n\n  const token = useSelector((state: StoreState) => state.auth.token);\n\n  React.useEffect(() => {\n    getLicenseKey();\n  }, []);\n\n  const _onScanError = () => {\n    setFailed(true);\n  };\n\n  const getLicenseKey = async () => {\n    try {\n      const { url, defaultHeaders } = await getBaseRequestData(\n        \"/BoletoPayment/FindScanLicenseKey\"\n      );\n\n      const response = await HttpClient.get(url, {\n        headers: {\n          ...defaultHeaders,\n          Authorization: `Bearer ${token}`,\n        },\n      });\n\n      let licenseKey = response.headers[\"x-license-key\"];\n      setKey(licenseKey);\n    } catch (error: any) {}\n  };\n\n  return (\n    <Box className={style.camera}>\n      {key && (\n        <ScanditBarcodeScanner\n          licenseKey={key}\n          laserArea={{ x: 0, y: 0, width: 1, height: 1 }}\n          vibrateOnScan={false}\n          guiStyle={BarcodePicker.GuiStyle.NONE}\n          videoFit={BarcodePicker.ObjectFit.COVER}\n          scanSettings={scanSettings}\n          playSoundOnScan={true}\n          blurryRecognition={true}\n          enableTorchToggle={true}\n          enableCameraSwitcher={false}\n          enableTapToFocus={true}\n          engineLocation={\"https://cdn.jsdelivr.net/npm/scandit-sdk@5.x/build\"}\n          onScan={(scanResult: any) => onReader(scanResult.barcodes[0].data)}\n          onScanError={_onScanError}\n        />\n      )}\n      {failed && (\n        <Box className={style.wrapper}>\n          <PaymentError />\n        </Box>\n      )}\n    </Box>\n  );\n};\n","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/payment/components/ReceiptDescription/ReceiptDescription.tsx",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/onboarding/pages/ActivateBySMS/CreateNameForSMS/index.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/onboarding/pages/ActivateBySMS/BirthDateForSMS/index.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/payment/components/EnterCodeButton/EnterCodeButton.style.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/account/components/AccountListPopUp/index.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/payment/components/OrientationBarIcon/OrientationBarIcon.style.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/payment/components/BarcodeHeader/BarcodeHeader.style.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/account/components/ShowMoreButton/ShowMoreButton.tsx",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/qrCodeTransfer/pages/QrCodeTransferSendingDetails/index.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/qrCodeTransfer/pages/ReadQrCodeTransfer/index.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/qrCodeTransfer/pages/ShowQrCodeTransfer/index.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/payment/components/DetailPaymentDescription/DetailPaymentDescription.tsx",["4959"],"import { CurrencyFormatter } from \"_translate\";\nimport React, { ReactElement } from \"react\";\nimport { useStyles } from \"./DetailPaymentDescription.style\";\nimport { ShortDateFormatter } from \"_translate\";\nimport { TransactionDetail } from \"components/TransactionDetail\";\nimport { TransactionDetailName } from \"components/TransactionDetailName\";\nimport { TransactionDetailValue } from \"components/TransactionDetailValue\";\n\ninterface DetailPaymentDescriptionProps {\n  paymentValue: number;\n  receiverName?: string;\n  paymentDate?: Date;\n  description: string;\n  bankName: string;\n  tags?: React.ReactNode;\n}\n\nexport const DetailPaymentDescription: React.FC<\n  DetailPaymentDescriptionProps\n> = ({\n  paymentValue,\n  receiverName,\n  paymentDate,\n  description,\n  bankName,\n  tags,\n}) => {\n  const styles = useStyles();\n  return (\n    <React.Fragment>\n      <TransactionDetail\n        className={styles.detailPaymentContent}\n        data-test-id=\"detail-payment-description\"\n      >\n        <TransactionDetailName>Pagamento no valor de</TransactionDetailName>\n        <TransactionDetailValue className={styles.paymentDetail}>\n          {CurrencyFormatter.format(paymentValue)}\n        </TransactionDetailValue>\n        <TransactionDetailName> Recebedor </TransactionDetailName>\n        <TransactionDetailValue className={styles.paymentDetail}>\n          {receiverName}\n        </TransactionDetailValue>\n        <TransactionDetailName>no dia</TransactionDetailName>\n        <TransactionDetailValue className={styles.capitalized}>\n          {paymentDate && ShortDateFormatter.format(paymentDate)}\n        </TransactionDetailValue>\n        {description && (\n          <>\n            <TransactionDetailName>sua descrição foi </TransactionDetailName>\n            <TransactionDetailValue className={styles.paymentDetail}>\n              {description}\n            </TransactionDetailValue>\n          </>\n        )}\n        <TransactionDetailName> Banco Emissor </TransactionDetailName>\n        <TransactionDetailValue className={styles.paymentDetail}>\n          {bankName}\n        </TransactionDetailValue>\n        {tags && (\n          <>\n            <TransactionDetailName>Suas Tags</TransactionDetailName>\n            <TransactionDetailValue className={styles.paymentDetail}>\n              {tags}\n            </TransactionDetailValue>\n          </>\n        )}\n      </TransactionDetail>\n    </React.Fragment>\n  );\n};\n","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/card/components/ReplacementData/ReplacementData.tsx",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/card/components/PopUp/PopUpConfirmPassword/PopUpConfirmPassword.tsx",["4960"],"import React, { useState } from \"react\";\nimport { OtpInput } from \"components/OtpInput/OtpInput\";\nimport { Box, Drawer, Grid, Typography } from \"@material-ui/core\";\nimport { Close } from \"@material-ui/icons\";\nimport { Button } from \"components/Button\";\nimport { ButtonWithFloatingIcon } from \"components/ButtonWithFloatingIcon\";\nimport { PageContainer } from \"components/PageContainer\";\nimport { useStyles } from \"./PopUpConfirmPassword.style\";\nimport { AlertConcluded } from \"components/AlertConcluded\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { StoreState } from \"redux/state\";\nimport { Card } from \"features/card/redux/models/card\";\nimport { useLocation } from \"react-router-dom\";\nimport { CardRoutes } from \"features/card/constants/routes\";\nimport { inactivateAndReissueCard } from \"features/card/redux/actions\";\nimport { Loader } from \"components/Loader\";\nimport { Alert } from \"components/Alert\";\nimport { InactivateCardAndReissueState } from \"features/card/redux/state\";\nimport { Icon } from \"components/Icon\";\n\ninterface PopUpProps {\n  open: boolean;\n  onClose?: (args?: boolean) => void;\n  onClickAlert?: React.MouseEventHandler<HTMLElement>;\n  alertTitle: string;\n}\n\nexport const PopUpConfirmPassword: React.FC<PopUpProps> = ({\n  open,\n  onClose = () => {},\n  onClickAlert,\n  alertTitle,\n}) => {\n  const [password, setPassword] = React.useState<string>();\n  const styles = useStyles();\n  const dispatch = useDispatch();\n  const cardState = useSelector((state: StoreState) => state.card);\n  const [card, loading, errorMessage] = useSelector<\n    StoreState,\n    [Card | undefined, boolean, string | undefined]\n  >((state) => [state.card.card, state.card.loading, state.card.errorMessage]);\n  const [isDisable, setIsDisable] = React.useState<boolean>(true);\n\n  const location = useLocation();\n\n  const handlePassword = (value: string) => {\n    setPassword(value);\n  };\n  const closePopUp = () => {\n    onClose();\n  };\n  const [onShowAlert, setShowAlert] = useState(false);\n  const controllerAlert = () => {\n    if (location.pathname === CardRoutes.reissueDetails)\n      dispatch(\n        inactivateAndReissueCard(\n          card?.identifierCard!,\n          password!,\n          card?.reasonCode!\n        )\n      );\n  };\n\n  const onCloseAlert = () => {\n    setShowAlert(false);\n  };\n\n  const onEnableButton = () => {\n    password?.length === 4 ? setIsDisable(false) : setIsDisable(true);\n  };\n\n  React.useEffect(() => {\n    onEnableButton();\n  }, [password]);\n\n  React.useEffect(() => {\n    if (cardState instanceof InactivateCardAndReissueState) {\n      setShowAlert(true);\n    }\n  }, [cardState]);\n\n  return (\n    <React.Fragment>\n      <Drawer\n        className={styles.drawer}\n        anchor=\"bottom\"\n        elevation={0}\n        open={open}\n        onClose={() => onClose(true)}\n        data-test-id=\"drawer\"\n      >\n        <PageContainer>\n          <Box className={styles.content}>\n            <Box className={styles.closeButton}>\n              <Button\n                data-test-id=\"close-pop-up\"\n                size=\"small\"\n                palette=\"secondary\"\n                onClick={closePopUp}\n                startIcon={<Close color=\"primary\" />}\n              >\n                Fechar\n              </Button>\n            </Box>\n            <Grid container direction=\"column\" spacing={4}>\n              <Grid item>\n                <Typography className={styles.text}>\n                  Digite a senha do seu cartão\n                </Typography>\n              </Grid>\n              <Grid item>\n                <OtpInput\n                  numInputs={4}\n                  onChange={(value: string) => handlePassword(value)}\n                  value={password}\n                  className={styles.OtpInput}\n                  isInputSecure={true}\n                  data-test-id=\"input-password\"\n                  isInputNum\n                />\n              </Grid>\n              <Grid item>\n                <Box className={styles.confirm}>\n                  <ButtonWithFloatingIcon\n                    icon={<Icon name={\"confirm\"} />}\n                    onClick={controllerAlert}\n                    disabled={isDisable}\n                    data-test-id=\"controller-alert\"\n                  >\n                    Confirmar\n                  </ButtonWithFloatingIcon>\n                </Box>\n              </Grid>\n            </Grid>\n          </Box>\n          <Loader open={loading} />\n          {errorMessage && (\n            <Alert title=\"Erro\" message={errorMessage} severity=\"error\" />\n          )}\n          <AlertConcluded\n            open={onShowAlert}\n            onClose={onCloseAlert}\n            onClick={onClickAlert}\n            title={alertTitle}\n          />\n        </PageContainer>\n      </Drawer>\n    </React.Fragment>\n  );\n};\n","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/account/pages/EditAccount/index.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/transference/pages/AccountNumber/index.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/onboarding/pages/ActivateBySMS/ValidatePhoneForSMS/ValidatePhoneForSMS.style.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/transference/pages/SelectAccountType/index.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/transference/pages/BankBranch/index.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/transference/pages/SelectBank/index.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/components/DateInput/DateInput.style.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/transference/pages/FavoredName/index.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/components/SwitchIOS/SwitchIOS.style.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/digitalWithdrawal/components/ButtonReadQRCode/ButtonReadQRCode.style.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/qrCodeTransfer/pages/QrCodeTransfer/QrCodeTransfer.style.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/payment/components/ReceiverAndValue/ReceiverAndValue.style.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/qrCodeTransfer/pages/GenerateQrCodeTransfer/GenerateQrCodeTransfer.style.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/components/ButtonAttachDocuments/ButtonAttachDocuments.style.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/components/TransactionDetailValue/TransactionDetailValue.tsx",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/components/TransactionDetailName/TransactionDetailName.tsx",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/payment/components/TitleAndDescriptionTextAttach/TitleAndDescriptionTextAttach.style.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/user/pages/ChangeConclude/index.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/components/TransactionDetail/TransactionDetail.tsx",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/card/components/ListButton/ListButtonRadio/ListButtonRadio.tsx",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/card/components/Option/Option.tsx",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/components/InputCurrency/InputCurrency.style.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/user/pages/ChangeAddress/index.tsx",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/components/Validator/index.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/payment/components/AccountBalance/AccountBalance.style.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/digitalWithdrawal/pages/DigitalWithdrawalReceipt/DigitalWithdrawalReceipt.style.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/digitalWithdrawal/pages/DigitalWithdrawalSuccess/DigitalWithdrawalSuccess.style.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/card/components/SelectCardButton/SelectCardButton.style.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/card/components/ListButton/ListButtonSwitch/ListButtonSwitch.style.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/card/components/PopUp/PopUpTempBlock/PopUpTempBlock.style.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/payment/components/BarcodeScanner/BarCodeScanner.style.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/payment/components/ReceiptDescription/ReceiptDescription.style.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/onboarding/pages/ActivateBySMS/CreateNameForSMS/CreateNameForSMS.tsx",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/onboarding/pages/ActivateBySMS/BirthDateForSMS/BirthDateForSMS.tsx",["4961"],"import React from \"react\";\nimport { Grid } from \"@material-ui/core\";\nimport { AppBar } from \"components/AppBar\";\nimport { AccountRoutes } from \"features/account/constants/routes\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { cancelLabel, nextLabel } from \"constants/buttons/labels\";\nimport { Button } from \"components/Button\";\nimport { Close, KeyboardArrowRight } from \"@material-ui/icons\";\nimport { ProcessPageFooter } from \"components/ProcessPageFooter\";\nimport { PageContainer } from \"components/PageContainer\";\nimport { useStyles } from \"./BirthDaterSMS.style\";\nimport { LEGAL_AGE, ShortDateFormatter } from \"_translate\";\nimport { OnboardingRoutes } from \"features/onboarding/constants/routes\";\nimport { useHistory } from \"react-router-dom\";\nimport { TextField } from \"components/TextField\";\nimport { ProcessPageLayout } from \"components/ProcessPageLayout\";\nimport { ProcessDescriptionHeader } from \"components/ProcessDescriptionHeader\";\nimport { DateButton } from \"components/DateButton/DateButton\";\nimport { updateOnboardingForm } from \"features/onboarding/redux/actions\";\nimport { StoreState } from \"redux/state\";\nimport { Loader } from \"components/Loader\";\nimport { Alert } from \"components/Alert\";\nimport { PopUpConfirmToken } from \"components/PopUpConfirmToken\";\n\nexport const BirthDate: React.FC = () => {\n  const [birthDate, setBirthDate] = React.useState<Date | null>(null);\n  const [displayDate, setDisplayDate] = React.useState(\"\");\n  const [maxDate, setMaxDate] = React.useState<Date>(new Date());\n  const [openDatePicker, setOpenDatePicker] = React.useState(false);\n  const [disableNextButton, setDisableNextButton] = React.useState(false);\n  const [openAuthorizationSheet, setOpenAuthorizationSheet] =\n    React.useState(false);\n  const history = useHistory();\n\n  const dispatch = useDispatch();\n  const styles = useStyles();\n\n  const isLegalAge = React.useMemo(() => {\n    const today = new Date();\n\n    const age = today.getFullYear() - (birthDate?.getFullYear() ?? 0);\n\n    if (\n      (birthDate?.getMonth() ?? 0) >= today.getMonth() &&\n      (birthDate?.getDate() ?? 0) > today.getDate()\n    )\n      return age - 1 >= LEGAL_AGE;\n\n    return age >= LEGAL_AGE;\n  }, [birthDate]);\n\n  const onboardingSms = useSelector(\n    (state: StoreState) => state.onboarding.onboardingForm\n  );\n\n  const onboardingSmsState = useSelector(\n    (state: StoreState) => state.onboarding\n  );\n\n  const { loading, errorMessage } = onboardingSmsState;\n\n  React.useEffect(() => {\n    setDisplayDate(_getDisplayDate());\n    const today = new Date();\n    setMaxDate(today);\n  }, [birthDate]);\n\n  React.useEffect(() => {\n    if (displayDate.length === 0) setDisableNextButton(true);\n    else setDisableNextButton(false);\n  }, [displayDate.length]);\n\n  const _getDisplayDate = () => {\n    if (!birthDate) return displayDate;\n    else return ShortDateFormatter.format(birthDate);\n  };\n\n  const onSchedulingButtonClick = () => {\n    setOpenDatePicker(true);\n  };\n\n  const onDatePickerClose = () => {\n    setOpenDatePicker(false);\n  };\n\n  const onDateChange = (date: Date | null) => {\n    setBirthDate(date);\n  };\n\n  const onCancelButtonClick = () => {\n    history.go(-5);\n  };\n\n  const onAuthorizationClose = (tokenIsValid: boolean) => {\n    if (tokenIsValid) history.push(OnboardingRoutes.createPasswordForSMS);\n    setOpenAuthorizationSheet(false);\n  };\n\n  const onNextButtonClick = () => {\n    dispatch(\n      updateOnboardingForm({\n        birthDate: birthDate!,\n      })\n    );\n    setOpenAuthorizationSheet(true);\n  };\n\n  return (\n    <PageContainer>\n      <ProcessPageLayout\n        appBar={\n          <AppBar\n            homeRoute={AccountRoutes.home}\n            action={\n              <Button\n                palette=\"secondary\"\n                size=\"small\"\n                startIcon={<Close color=\"primary\" />}\n                onClick={onCancelButtonClick}\n                data-test-id=\"cancel-button\"\n              >\n                {cancelLabel}\n              </Button>\n            }\n          />\n        }\n        header={\n          <ProcessDescriptionHeader\n            title=\"Ative Sua Conta\"\n            subtitle=\"Qual a sua data de nascimento\"\n          />\n        }\n        main={\n          <Grid container direction=\"column\">\n            <Grid item>\n              <TextField\n                label=\"Quando você nasceu?\"\n                placeholder={\"Ex: 10/05/1972\"}\n                value={displayDate}\n                data-test-id=\"display-date\"\n              />\n            </Grid>\n            <Grid item>\n              <Grid\n                container\n                justify=\"center\"\n                className={styles.scheduleButton}\n                data-test-id=\"schedule-button\"\n              >\n                <Grid item>\n                  <DateButton\n                    open={openDatePicker}\n                    value={birthDate}\n                    maxDate={maxDate}\n                    onClick={onSchedulingButtonClick}\n                    onDateSelection={onDateChange}\n                    onClose={onDatePickerClose}\n                  />\n                </Grid>\n              </Grid>\n            </Grid>\n          </Grid>\n        }\n        footer={\n          <ProcessPageFooter\n            primaryButton={\n              <Button\n                endIcon={<KeyboardArrowRight color=\"secondary\" />}\n                onClick={onNextButtonClick}\n                disabled={disableNextButton || !isLegalAge}\n                data-test-id=\"next-button\"\n              >\n                {nextLabel}\n              </Button>\n            }\n          />\n        }\n      />\n      <PopUpConfirmToken\n        open={openAuthorizationSheet}\n        onClose={onAuthorizationClose}\n        phoneNumber={onboardingSms?.phoneNumber}\n        taxId={onboardingSms?.taxId}\n        mail={onboardingSms?.mail}\n      />\n      <Loader open={loading} />\n      {errorMessage && (\n        <Alert title=\"Error\" message={errorMessage} severity=\"error\" />\n      )}\n    </PageContainer>\n  );\n};\n","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/account/components/ShowMoreButton/ShowMoreButton.style.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/card/components/ReplacementData/ReplacementData.style.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/payment/components/DetailPaymentDescription/DetailPaymentDescription.style.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/card/components/PopUp/PopUpConfirmPassword/PopUpConfirmPassword.style.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/onboarding/redux/state.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/account/components/AccountListPopUp/AccountListPopUp.tsx",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/account/pages/EditAccount/EditAccount.tsx",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/transference/pages/AccountNumber/AccountNumber.tsx",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/qrCodeTransfer/pages/ShowQrCodeTransfer/ShowQrCodeTransfer.tsx",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/qrCodeTransfer/pages/ReadQrCodeTransfer/ReadQrCodeTransfer.tsx",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/qrCodeTransfer/pages/QrCodeTransferSendingDetails/QrCodeTransferSendingDetails.tsx",["4962","4963"],"import React from \"react\";\nimport { AppBar } from \"components/AppBar\";\nimport { ProcessDescriptionHeader } from \"components/ProcessDescriptionHeader\";\nimport { Close, KeyboardArrowRight } from \"@material-ui/icons\";\nimport { AccountRoutes } from \"features/account/constants/routes\";\nimport { useStyles } from \"./QrCodeTransferSendingDetails.style\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { StoreState } from \"redux/state\";\nimport { useHistory } from \"react-router-dom\";\nimport { Button } from \"components/Button\";\nimport { cancelLabel, nextLabel } from \"constants/buttons/labels\";\nimport { ProcessPageFooter } from \"components/ProcessPageFooter\";\nimport { PageContainer } from \"components/PageContainer\";\nimport { ProcessPageLayout } from \"components/ProcessPageLayout\";\nimport { Box, Grid, Typography } from \"@material-ui/core\";\nimport { CurrencyFormatter } from \"_translate\";\nimport {\n  sendQrCodeTransfer,\n  updateQrCodeTransferState,\n} from \"features/qrCodeTransfer/redux/actions\";\nimport {\n  InitialQrCodeTransferState,\n  LoadingQrCodeTransferState,\n  QrCodeTransferState,\n  SuccessQrCodeTransferState,\n} from \"features/qrCodeTransfer/redux/state\";\nimport { Loader } from \"components/Loader\";\nimport { AuthorizationSheet } from \"components/AuthorizationSheet\";\nimport { Alert } from \"components/Alert\";\nimport { QrCodeTransferRoutes } from \"features/qrCodeTransfer/constants/routes\";\nimport { usePrevious } from \"hooks/usePrevious\";\nimport { OperationType } from \"features/account/redux/models/operationType\";\nimport { ErrorMessage } from \"components/ErrorMessage\";\n\nexport const QrCodeTransferSendingDetails: React.FC = () => {\n  const [qrCodeTransferState, balance, loading, errorMessage] = useSelector<\n    StoreState,\n    [QrCodeTransferState, number | undefined, boolean, string | undefined]\n  >((state) => [\n    state.qrCodeTransfer,\n    state.account.dashboard?.balance,\n    state.qrCodeTransfer.loading,\n    state.qrCodeTransfer.errorMessage,\n  ]);\n\n  const previousQrCodeTransferState = usePrevious(qrCodeTransferState);\n  const [balanceIsSufficient, setBalanceIsSufficient] = React.useState(false);\n  const [openAuthorizationSheet, setOpenAuthorizationSheet] =\n    React.useState(false);\n\n  const history = useHistory();\n  const dispatch = useDispatch();\n  const styles = useStyles();\n\n  React.useEffect(() => {\n    if (\n      qrCodeTransferState instanceof SuccessQrCodeTransferState &&\n      previousQrCodeTransferState instanceof LoadingQrCodeTransferState\n    )\n      history.push({\n        pathname: QrCodeTransferRoutes.completedTransfer,\n        state: OperationType.qrCode,\n      });\n  }, [history, previousQrCodeTransferState, qrCodeTransferState]);\n\n  React.useEffect(() => {\n    if (qrCodeTransferState.transferenceData!.value < balance!)\n      setBalanceIsSufficient(true);\n  }, [qrCodeTransferState]);\n\n  const _resetState = () =>\n    dispatch(updateQrCodeTransferState(new InitialQrCodeTransferState()));\n\n  const onCancelButtonClick = () => {\n    history.replace(AccountRoutes.home);\n    _resetState();\n  };\n\n  const onNextButtonClick = () => {\n    setOpenAuthorizationSheet(true);\n  };\n\n  const onAuthorizationSheetClose = (tokenIsValid: boolean) => {\n    setOpenAuthorizationSheet(false);\n    if (tokenIsValid) dispatch(sendQrCodeTransfer());\n  };\n\n  return (\n    <PageContainer>\n      <ProcessPageLayout\n        appBar={\n          <AppBar\n            homeRoute={AccountRoutes.home}\n            action={\n              <Button\n                palette=\"secondary\"\n                size=\"small\"\n                startIcon={<Close color=\"primary\" />}\n                onClick={onCancelButtonClick}\n                data-test-id=\"cancel-button\"\n              >\n                {cancelLabel}\n              </Button>\n            }\n          />\n        }\n        header={\n          <React.Fragment>\n            <ProcessDescriptionHeader title=\"Enviar transferência via QR code\" />\n            <Box\n              className={`${styles.box} ${styles.valueSection}`}\n              data-test-id=\"qr-code-transference-sending\"\n            >\n              <Typography>Você está pagando</Typography>\n              <Typography className={styles.value}>\n                {CurrencyFormatter.format(\n                  qrCodeTransferState.transferenceData!.value\n                )}\n              </Typography>\n              {!balanceIsSufficient && (\n                <ErrorMessage message={\"Seu saldo é insuficiente\"} />\n              )}\n            </Box>\n          </React.Fragment>\n        }\n        main={\n          <Box className={styles.box}>\n            <Typography>Para</Typography>\n            <Typography\n              className={styles.value}\n              data-test-id=\"qr-code-transfer-name\"\n            >\n              {qrCodeTransferState.transferenceData!.name}\n            </Typography>\n          </Box>\n        }\n        footer={\n          <ProcessPageFooter\n            primaryButton={\n              <Button\n                endIcon={<KeyboardArrowRight color=\"secondary\" />}\n                disabled={!balanceIsSufficient}\n                onClick={onNextButtonClick}\n                data-test-id=\"next-button\"\n              >\n                {nextLabel}\n              </Button>\n            }\n          />\n        }\n      />\n      <AuthorizationSheet\n        open={openAuthorizationSheet}\n        onClose={onAuthorizationSheetClose}\n      />\n      <Loader open={loading} />\n      {errorMessage && (\n        <Alert title=\"Error\" message={errorMessage} severity=\"error\" />\n      )}\n    </PageContainer>\n  );\n};\n","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/transference/pages/SelectBank/SelectBank.tsx",["4964"],"import React from \"react\";\nimport { PageContainer } from \"components/PageContainer\";\nimport { AppBar } from \"components/AppBar\";\nimport { AccountRoutes } from \"features/account/constants/routes\";\nimport { SearchField } from \"components/SearchField/SearchField\";\nimport { ProcessPageLayout } from \"components/ProcessPageLayout\";\nimport { ProcessDescriptionHeader } from \"components/ProcessDescriptionHeader\";\nimport { Box } from \"@material-ui/core\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { StoreState } from \"redux/state\";\nimport { BankCard } from \"features/transference/components/BankCard/BankCard\";\nimport { ProcessPageFooter } from \"components/ProcessPageFooter\";\nimport { Button } from \"components/Button\";\nimport { cancelLabel, nextLabel } from \"constants/buttons/labels\";\nimport { Bank } from \"features/transference/redux/models/bank\";\nimport { useHistory } from \"react-router-dom\";\nimport { TransferenceRoutes } from \"features/transference/constants/routes\";\nimport { useStyles } from \"./SelectBank.style\";\nimport { Close, KeyboardArrowRight } from \"@material-ui/icons\";\nimport {\n  listBanks,\n  updateTransferenceData,\n} from \"features/transference/redux/actions\";\nimport { Loader } from \"components/Loader\";\nimport { Alert } from \"components/Alert\";\n\nexport const SelectBank: React.FC = () => {\n  const [toBank, setToBank] = React.useState(\"\");\n  const [disableNextButton, setDisableNextButton] = React.useState(false);\n  const [banks, loading, errorMessage] = useSelector<\n    StoreState,\n    [Bank[] | undefined, boolean, string | undefined]\n  >((state) => [\n    state.transference.banks,\n    state.transference.loading,\n    state.transference.errorMessage,\n  ]);\n  const history = useHistory();\n  const dispatch = useDispatch();\n  const styles = useStyles();\n  const [displayBanks, setDisplayBanks] = React.useState(banks);\n\n  React.useEffect(() => {\n    dispatch(listBanks());\n  }, []);\n\n  React.useEffect(() => {\n    setDisplayBanks(banks);\n  }, [banks]);\n\n  React.useEffect(() => {\n    if (toBank.length === 0) setDisableNextButton(true);\n    else setDisableNextButton(false);\n  }, [toBank]);\n\n  const _search = (value: string) => {\n    value = value.replace(/^\\s+|\\s+$/, \"\").toLowerCase();\n    const result = banks?.filter(\n      (bank) =>\n        bank.code.includes(value.replace(/^0/, \"\")) ||\n        bank.name.toLowerCase().includes(value)\n    );\n    setDisplayBanks(result);\n  };\n\n  const onBankClick = (bank: Bank) => {\n    setToBank(bank.code);\n  };\n\n  const onNextButtonClick = () => {\n    dispatch(updateTransferenceData({ bank: toBank }));\n    history.push(TransferenceRoutes.selectAccountType);\n  };\n\n  const onCancelButtonClick = () => {\n    dispatch(updateTransferenceData());\n    history.go(-4);\n  };\n\n  return (\n    <PageContainer>\n      <ProcessPageLayout\n        appBar={\n          <AppBar\n            homeRoute={AccountRoutes.home}\n            action={\n              <Button\n                palette=\"secondary\"\n                size=\"small\"\n                startIcon={<Close color=\"primary\" />}\n                onClick={onCancelButtonClick}\n                data-test-id=\"cancel-button\"\n              >\n                {cancelLabel}\n              </Button>\n            }\n          />\n        }\n        header={\n          <ProcessDescriptionHeader\n            title=\"Transferência\"\n            description=\"Selecione a instituição na lista ou busque pelo nome ou código do banco.\"\n          />\n        }\n        main={\n          <Box display=\"flex\" flexDirection=\"column\">\n            <Box className={styles.searchField}>\n              <SearchField\n                placeholder=\"Busque por nome ou código\"\n                onChange={(e) => _search(e.target.value)}\n              />\n            </Box>\n            <Box>\n              {displayBanks?.map((bank) => (\n                <BankCard\n                  key={bank.code}\n                  bank={bank}\n                  selected={toBank === bank.code}\n                  onClick={onBankClick}\n                />\n              ))}\n            </Box>\n          </Box>\n        }\n        footer={\n          <ProcessPageFooter\n            primaryButton={\n              <Button\n                palette=\"primary\"\n                endIcon={<KeyboardArrowRight color=\"secondary\" />}\n                disabled={disableNextButton}\n                onClick={onNextButtonClick}\n                data-test-id=\"next-button\"\n              >\n                {nextLabel}\n              </Button>\n            }\n          />\n        }\n        footerPosition=\"fixed\"\n      />\n      <Loader open={loading} />\n      {errorMessage && (\n        <Alert title=\"Erro\" message={errorMessage} severity=\"error\" />\n      )}\n    </PageContainer>\n  );\n};\n","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/transference/pages/BankBranch/BankBranch.tsx",["4965"],"import React from \"react\";\nimport { AppBar } from \"components/AppBar\";\nimport { ProcessDescriptionHeader } from \"components/ProcessDescriptionHeader\";\nimport { AccountRoutes } from \"features/account/constants/routes\";\nimport { useHistory } from \"react-router-dom\";\nimport { Button } from \"components/Button\";\nimport { Close, KeyboardArrowRight } from \"@material-ui/icons\";\nimport { cancelLabel, nextLabel } from \"constants/buttons/labels\";\nimport { PageContainer } from \"components/PageContainer\";\nimport { ProcessPageLayout } from \"components/ProcessPageLayout\";\nimport { TextField } from \"components/TextField\";\nimport { ProcessPageFooter } from \"components/ProcessPageFooter\";\nimport { TransferenceRoutes } from \"features/transference/constants/routes\";\nimport { useDispatch } from \"react-redux\";\nimport { useMask } from \"hooks/useMask\";\nimport { maskTransference } from \"_utils/masks/transferenceNumber\";\nimport { updateTransferenceData } from \"features/transference/redux/actions\";\nimport { Box } from \"@material-ui/core\";\nimport { numericOnly } from \"_utils/masks/generics\";\n\nexport const BankBranch: React.FC = () => {\n  const [bankBranch, setBankBranch] = useMask(maskTransference);\n  const dispatch = useDispatch();\n  const history = useHistory();\n\n  const onBankBranchChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    if (event.target.value.length <= 4) setBankBranch(event.target.value);\n  };\n\n  const onCancelButtonClick = () => {\n    dispatch(updateTransferenceData());\n    history.go(-6);\n  };\n\n  const onSubmit = (event: React.FormEvent) => {\n    event.preventDefault();\n    if (bankBranch.length > 0) {\n      dispatch(updateTransferenceData({ bankBranch }));\n      history.push(TransferenceRoutes.accountNumber);\n    }\n  };\n\n  return (\n    <PageContainer>\n      <ProcessPageLayout\n        appBar={\n          <AppBar\n            homeRoute={AccountRoutes.home}\n            action={\n              <Button\n                palette=\"secondary\"\n                size=\"small\"\n                startIcon={<Close color=\"primary\" />}\n                onClick={onCancelButtonClick}\n                data-test-id=\"cancel-button\"\n              >\n                {cancelLabel}\n              </Button>\n            }\n          />\n        }\n        header={\n          <ProcessDescriptionHeader\n            title=\"Transferência\"\n            subtitle=\"Qual o número da agência?\"\n            description=\"Informe o número completo da agência, incluindo o dígito.\"\n          />\n        }\n        main={\n          <Box component=\"form\" onSubmit={onSubmit}>\n            <TextField\n              label=\"Agência\"\n              placeholder=\"Digite apenas números\"\n              inputMode=\"numeric\"\n              value={bankBranch}\n              onChange={onBankBranchChange}\n              data-test-id=\"change-bank-branch\"\n            />\n          </Box>\n        }\n        footer={\n          <ProcessPageFooter\n            primaryButton={\n              <Button\n                palette=\"primary\"\n                endIcon={<KeyboardArrowRight color=\"secondary\" />}\n                disabled={bankBranch.length === 0}\n                onClick={onSubmit}\n                data-test-id=\"submit-button\"\n              >\n                {nextLabel}\n              </Button>\n            }\n          />\n        }\n      />\n    </PageContainer>\n  );\n};\n","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/transference/pages/FavoredName/FavoredName.tsx",["4966"],"import React from \"react\";\nimport { AppBar } from \"components/AppBar\";\nimport { PageContainer } from \"components/PageContainer\";\nimport { AccountRoutes } from \"features/account/constants/routes\";\nimport { ProcessDescriptionHeader } from \"components/ProcessDescriptionHeader\";\nimport { ProcessPageLayout } from \"components/ProcessPageLayout\";\nimport { TextField } from \"components/TextField\";\nimport { ProcessPageFooter } from \"components/ProcessPageFooter\";\nimport { Button } from \"components/Button\";\nimport { cancelLabel, nextLabel } from \"constants/buttons/labels\";\nimport { useHistory } from \"react-router-dom\";\nimport { TransferenceRoutes } from \"features/transference/constants/routes\";\nimport { Close, KeyboardArrowRight } from \"@material-ui/icons\";\nimport { useDispatch } from \"react-redux\";\nimport { updateTransferenceData } from \"features/transference/redux/actions\";\nimport { Box } from \"@material-ui/core\";\nimport { TransferType } from \"features/transference/redux/models/enum\";\nimport { useMask } from \"hooks/useMask\";\nimport { lettersOnly } from \"_utils/masks/generics\";\n\nexport const FavoredName: React.FC = () => {\n  const [toName, setToName] = useMask(lettersOnly);\n  const [disableNextButton, setDisableNextButton] = React.useState(false);\n  const history = useHistory();\n  const dispatch = useDispatch();\n\n  React.useEffect(() => {\n    dispatch(\n      updateTransferenceData({\n        transferType: TransferType.MoneyTransfer,\n      })\n    );\n  }, []);\n\n  React.useEffect(() => {\n    if (toName.length === 0) setDisableNextButton(true);\n    else setDisableNextButton(false);\n  }, [toName.length]);\n\n  const onToNameChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setToName(event.target.value);\n  };\n\n  const onCancelButtonClick = () => {\n    dispatch(updateTransferenceData());\n    history.go(-3);\n  };\n\n  const onSubmit = (event: React.FormEvent) => {\n    event.preventDefault();\n    if (disableNextButton) return;\n\n    dispatch(updateTransferenceData({ toName }));\n    history.push(TransferenceRoutes.selectBank);\n  };\n\n  return (\n    <PageContainer>\n      <ProcessPageLayout\n        appBar={\n          <AppBar\n            homeRoute={AccountRoutes.home}\n            action={\n              <Button\n                palette=\"secondary\"\n                size=\"small\"\n                startIcon={<Close color=\"primary\" />}\n                onClick={onCancelButtonClick}\n                data-test-id=\"cancel-button\"\n              >\n                {cancelLabel}\n              </Button>\n            }\n          />\n        }\n        header={\n          <ProcessDescriptionHeader\n            title=\"Transferência\"\n            subtitle=\"Qual o nome de quem receberá sua transferência\"\n            description=\"Não encontramos em seus contatos o CPF informado, precisamos de mais informações.\"\n          />\n        }\n        main={\n          <Box component=\"form\" onSubmit={onSubmit} data-test-id=\"form-submit\">\n            <TextField\n              label=\"Nome completo\"\n              value={toName}\n              onChange={onToNameChange}\n              data-test-id=\"change-name\"\n            />\n          </Box>\n        }\n        footer={\n          <ProcessPageFooter\n            primaryButton={\n              <Button\n                palette=\"primary\"\n                disabled={disableNextButton}\n                endIcon={<KeyboardArrowRight color=\"secondary\" />}\n                onClick={onSubmit}\n                data-test-id=\"submit-button\"\n              >\n                {nextLabel}\n              </Button>\n            }\n          />\n        }\n      />\n    </PageContainer>\n  );\n};\n","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/transference/pages/SelectAccountType/SelectAccountType.tsx",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/components/TransactionDetailValue/TransactionDetailValue.style.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/components/TransactionDetailName/TransactionDetailName.style.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/qrCodeTransfer/redux/actions.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/qrCodeTransfer/redux/state.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/components/TransactionDetail/TransactionDetail.style.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/card/components/ListButton/ListButtonRadio/ListButtonRadio.style.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/card/components/Option/Option.style.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/user/pages/ChangeConclude/ChangeConclude.tsx",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/user/pages/ChangeAddress/ChangeAddress.tsx",["4967","4968"],"import React from \"react\";\nimport { PageContainer } from \"components/PageContainer\";\nimport { AppBar } from \"components/AppBar\";\nimport { ProcessDescriptionHeader } from \"components/ProcessDescriptionHeader\";\nimport \"_assets/css/forms/mainform.scss\";\nimport { ProcessPageLayout } from \"components/ProcessPageLayout\";\nimport { Button } from \"components/Button\";\nimport { Close, KeyboardArrowRight } from \"@material-ui/icons\";\nimport { useHistory } from \"react-router-dom\";\nimport { cancelLabel, nextLabel } from \"constants/buttons/labels\";\nimport { Grid } from \"@material-ui/core\";\nimport { ProcessPageFooter } from \"components/ProcessPageFooter\";\nimport { TextField } from \"components/TextField\";\nimport { AuthorizationSheet } from \"components/AuthorizationSheet\";\nimport { AccountRoutes } from \"features/account/constants/routes\";\nimport { maskZipCode } from \"_utils/masks/zipCode\";\nimport { useMask } from \"hooks/useMask\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { StoreState } from \"redux/state\";\nimport { updateUserInformation } from \"features/user/redux/actions\";\nimport { Loader } from \"components/Loader\";\nimport { Alert } from \"components/Alert\";\nimport { closeAlert } from \"features/account/redux/actions\";\nimport { numericOnly } from \"_utils/masks/generics\";\nimport { UserRoutes } from \"features/user/constants/routes\";\nimport { SuccessUpdateUserInformationState } from \"features/user/redux/state\";\nimport { updateAuthData } from \"features/authentication/redux/actions\";\n\nexport const ChangeAddress: React.FC = () => {\n  const [district, setDistrictInput] = React.useState(\"\");\n  const [streetName, setStreetNameInput] = React.useState(\"\");\n  const [complementName, setComplementNameInput] = React.useState(\"\");\n  const [noStreetNumber, setNoStreetNumber] = React.useState(false);\n  const [city, setCity] = React.useState(\"\");\n  const [state, setState] = React.useState(\"\");\n  const [referenceName, setReferenceNameInput] = React.useState(\"\");\n  const [countryName, setCountryNameInput] = React.useState(\"\");\n\n  const [disableNextButton, setDisableNextButton] = React.useState(false);\n  const [openAuthorizationSheet, setOpenAuthorizationSheet] =\n    React.useState(false);\n  const [streetNumber, setStreetNumberInput] = useMask(numericOnly);\n  const [zipCode, setZipCodeInput] = useMask(maskZipCode);\n  const [validatedToken, setValidatedToken] = React.useState(false);\n\n  const { user } = useSelector((store: StoreState) => store.auth);\n\n  const userInformationState = useSelector(\n    (store: StoreState) => store.userInformation\n  );\n\n  const { loading, errorMessage } = userInformationState;\n\n  const history = useHistory();\n\n  const dispatch = useDispatch();\n\n  React.useEffect(() => {\n    const condition =\n      zipCode &&\n      streetName &&\n      streetNumber &&\n      district &&\n      complementName &&\n      city &&\n      state &&\n      countryName;\n    if (condition) {\n      setDisableNextButton(false);\n    } else setDisableNextButton(true);\n  }, [\n    district,\n    streetName,\n    streetNumber,\n    zipCode,\n    complementName,\n    city,\n    state,\n    referenceName,\n    countryName,\n  ]);\n\n  React.useEffect(() => {\n    if (\n      validatedToken &&\n      userInformationState instanceof SuccessUpdateUserInformationState\n    ) {\n      history.push(UserRoutes.changeConclude);\n      dispatch(\n        updateAuthData({\n          ...user,\n          zipCode: zipCode,\n          street: streetName,\n          number: streetNumber,\n          district: district,\n          complement: complementName,\n          city: city,\n          state: state,\n          reference: referenceName,\n          country: countryName,\n        })\n      );\n    }\n  }, [\n    complementName,\n    dispatch,\n    district,\n    history,\n    streetName,\n    streetNumber,\n    user,\n    userInformationState,\n    validatedToken,\n    zipCode,\n    city,\n    state,\n    referenceName,\n    countryName,\n  ]);\n\n  const onZipCodeChange = (event: React.ChangeEvent<HTMLInputElement>) =>\n    setZipCodeInput(event.target.value);\n\n  const onStreetNameChange = (event: React.ChangeEvent<HTMLInputElement>) =>\n    setStreetNameInput(event.target.value);\n\n  const onStreetNumberChange = (event: React.ChangeEvent<HTMLInputElement>) =>\n    setStreetNumberInput(event.target.value);\n\n  const onComplementNameChange = (event: React.ChangeEvent<HTMLInputElement>) =>\n    setComplementNameInput(event.target.value);\n\n  const onDistrictChange = (event: React.ChangeEvent<HTMLInputElement>) =>\n    setDistrictInput(event.target.value);\n\n  const onCityChange = (event: React.ChangeEvent<HTMLInputElement>) =>\n    setCity(event.target.value);\n\n  const onStateChange = (event: React.ChangeEvent<HTMLInputElement>) =>\n    setState(event.target.value);\n\n  const onReferenceNameChange = (event: React.ChangeEvent<HTMLInputElement>) =>\n    setReferenceNameInput(event.target.value);\n\n  const onCountryNameChange = (event: React.ChangeEvent<HTMLInputElement>) =>\n    setCountryNameInput(event.target.value);\n\n  const onCancelButtonClick = () => {\n    history.go(-2);\n  };\n\n  const onNextButtonClick = () => {\n    setOpenAuthorizationSheet(true);\n  };\n\n  const onAlertClose = () => {\n    dispatch(closeAlert());\n  };\n\n  const onAuthorizationSheetClose = (isTokenValid: boolean) => {\n    if (isTokenValid) {\n      setValidatedToken(true);\n\n      dispatch(\n        updateUserInformation({\n          zipCode: zipCode,\n          street: streetName,\n          number: streetNumber,\n          district: district,\n          complement: complementName,\n          city: city,\n          state: state,\n          reference: referenceName,\n          country: countryName,\n        })\n      );\n    }\n\n    setOpenAuthorizationSheet(false);\n  };\n\n  return (\n    <PageContainer>\n      <ProcessPageLayout\n        appBar={\n          <AppBar\n            homeRoute={AccountRoutes.home}\n            action={\n              <Button\n                palette=\"secondary\"\n                size=\"small\"\n                startIcon={<Close color=\"primary\" />}\n                onClick={onCancelButtonClick}\n                data-test-id=\"cancel-button\"\n              >\n                {cancelLabel}\n              </Button>\n            }\n          />\n        }\n        header={\n          <ProcessDescriptionHeader\n            title=\"Endereço\"\n            description=\"Confirme seu endereço de correspondência\"\n          />\n        }\n        main={\n          <Grid container direction=\"column\" spacing={2}>\n            <Grid item>\n              <TextField\n                label=\"CEP\"\n                inputMode=\"numeric\"\n                value={zipCode}\n                required\n                onChange={onZipCodeChange}\n                data-test-id=\"change-zip-code\"\n              />\n            </Grid>\n            <Grid item>\n              <TextField\n                label=\"Logradouro\"\n                value={streetName}\n                required\n                onChange={onStreetNameChange}\n                data-test-id=\"change-street-name\"\n              />\n            </Grid>\n            <Grid item>\n              <TextField\n                label=\"Número\"\n                type=\"number\"\n                inputMode=\"numeric\"\n                value={streetNumber}\n                required\n                onChange={onStreetNumberChange}\n                data-test-id=\"change-street-number\"\n              />\n            </Grid>\n            <Grid item>\n              <TextField\n                label=\"Bairro\"\n                value={district}\n                required\n                onChange={onDistrictChange}\n                data-test-id=\"change-street-district\"\n              />\n            </Grid>\n            <Grid item>\n              <TextField\n                label=\"Complemento\"\n                value={complementName}\n                required\n                onChange={onComplementNameChange}\n                data-test-id=\"change-complement\"\n              />\n            </Grid>\n            <Grid item>\n              <TextField\n                label=\"Referência\"\n                value={referenceName}\n                onChange={onReferenceNameChange}\n                data-test-id=\"change-street-reference\"\n              />\n            </Grid>\n            <Grid item>\n              <TextField\n                label=\"País\"\n                value={countryName}\n                required\n                onChange={onCountryNameChange}\n                data-test-id=\"change-street-country\"\n              />\n            </Grid>\n            <Grid item>\n              <TextField\n                label=\"Cidade\"\n                value={city}\n                required\n                onChange={onCityChange}\n                data-test-id=\"change-city\"\n              />\n            </Grid>\n            <Grid item>\n              <TextField\n                label=\"Estado\"\n                value={state}\n                required\n                onChange={onStateChange}\n                data-test-id=\"change-state\"\n              />\n            </Grid>\n          </Grid>\n        }\n        footer={\n          <ProcessPageFooter\n            primaryButton={\n              <Button\n                palette=\"primary\"\n                endIcon={<KeyboardArrowRight color=\"secondary\" />}\n                disabled={disableNextButton}\n                onClick={onNextButtonClick}\n                data-test-id=\"next-button\"\n              >\n                {nextLabel}\n              </Button>\n            }\n          />\n        }\n      />\n      <AuthorizationSheet\n        open={openAuthorizationSheet}\n        description=\"Para autenticar a operação\"\n        onClose={onAuthorizationSheetClose}\n      />\n      {errorMessage && (\n        <Alert\n          title=\"Erro\"\n          message={errorMessage}\n          severity={\"error\"}\n          onClose={onAlertClose}\n        />\n      )}\n      <Loader open={loading} />\n    </PageContainer>\n  );\n};\n","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/transference/constants/routes.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/transference/pages/Transference/Transference.tsx",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/account/components/AccountListPopUp/AccountListPopUp.style.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/account/pages/EditAccount/EditAccount.style.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/qrCodeTransfer/pages/ShowQrCodeTransfer/ShowQrCodeTransfer.style.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/qrCodeTransfer/pages/ReadQrCodeTransfer/ReadQrCodeTransfer.style.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/qrCodeTransfer/pages/QrCodeTransferSendingDetails/QrCodeTransferSendingDetails.style.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/transference/pages/SelectBank/SelectBank.style.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/transference/pages/SelectAccountType/SelectAccountType.style.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/user/pages/CurrentAddress/index.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/qrCodeTransfer/redux/actionTypes.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/user/pages/ConfirmNewPassword/index.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/user/pages/ChooseNewPassword/index.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/onboarding/components/inputs/TokenInput/index.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/user/pages/ChangePassword/index.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/user/pages/ChangeNickname/index.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/user/pages/ChangeConclude/ChangeConclude.styles.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/user/pages/ChangePhone/index.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/user/pages/ChangeEmail/index.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/user/pages/UserInformation/index.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/transference/pages/Summary/Summary.tsx",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/transference/pages/FavoredIdentification/index.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/transference/pages/TransferValue/index.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/transference/pages/TransferReceipt/index.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/payment/components/PaymentError/index.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/transference/pages/Transference/Transference.style.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/transference/redux/models/enum.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/transference/pages/TransferDescription/index.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/transference/pages/ScheduleTransfer/index.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/transference/pages/FavoredAccountSelection/index.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/user/pages/CurrentAddress/CurrentAddress.tsx",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/transference/pages/AttachDocuments/index.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/user/pages/ConfirmNewPassword/ConfirmNewPassword.tsx",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/user/pages/ChooseNewPassword/ChooseNewPassword.tsx",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/onboarding/components/inputs/TokenInput/TokenInput.tsx",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/user/pages/ChangePassword/ChangePassword.tsx",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/user/pages/ChangeNickname/ChangeNickname.tsx",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/account/pages/Receipt/index.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/account/pages/Details/index.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/account/pages/BankStatementFilter/index.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/account/pages/AccountSettings/index.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/authentication/pages/SignOut/index.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/account/pages/AllAccounts/index.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/account/pages/StoneBankHome/index.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/account/pages/Home/index.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/transference/pages/Summary/Summary.style.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/account/pages/BankStatement/index.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/onboarding/pages/AccountEmail/index.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/_utils/masks/zipCode.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/user/redux/actions.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/user/redux/state.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/onboarding/pages/ActivateByCard/EnterBirthDateForCard/index.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/onboarding/pages/ActivateByCard/InvalidDataForCard/index.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/onboarding/pages/ActivateByCard/EnterPhoneForCard/index.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/onboarding/pages/ActivateByCard/ConfirmPasswordForCard/index.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/onboarding/pages/ActivateByCard/CreatePasswordForCard/index.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/transference/pages/TransferReceipt/TransferReceipt.tsx",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/transference/pages/FavoredIdentification/FavoredIdentification.tsx",["4969"],"import React from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { PageContainer } from \"components/PageContainer\";\nimport { AccountRoutes } from \"features/account/constants/routes\";\nimport { AppBar } from \"components/AppBar\";\nimport { ProcessDescriptionHeader } from \"components/ProcessDescriptionHeader\";\nimport { maskTaxPayer } from \"_utils/masks/taxPayer\";\nimport { useMask } from \"hooks/useMask\";\nimport { ProcessPageLayout } from \"components/ProcessPageLayout\";\nimport { cancelLabel, nextLabel } from \"constants/buttons/labels\";\nimport { Button } from \"components/Button\";\nimport { Close, KeyboardArrowRight } from \"@material-ui/icons\";\nimport { ProcessPageFooter } from \"components/ProcessPageFooter\";\nimport { TextField } from \"components/TextField\";\nimport { TransferenceRoutes } from \"features/transference/constants/routes\";\nimport {\n  closeAlert,\n  getAccountsByTaxId,\n  updateTransferenceData,\n} from \"features/transference/redux/actions\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { StoreState } from \"redux/state\";\nimport { Box } from \"@material-ui/core\";\nimport { Alert } from \"components/Alert\";\nimport { Loader } from \"components/Loader\";\nimport { SuccessTransferenceState } from \"features/transference/redux/state\";\n\nexport const FavoredIdentification: React.FC = () => {\n  const [submitted, setSubmitted] = React.useState(false);\n  const history = useHistory();\n  const [taxId, setTaxId] = useMask(maskTaxPayer);\n  const transferType = useSelector(\n    (state: StoreState) => state.transference.transference?.transferType\n  );\n  const transference = useSelector((state: StoreState) => state.transference);\n  const dispatch = useDispatch();\n  const { loading, favoredAccounts, errorMessage } = transference;\n  const isValid = taxId.length === 14 || taxId.length === 18;\n\n  React.useEffect(() => {\n    dispatch(updateTransferenceData());\n  }, []);\n\n  React.useEffect(() => {\n    if (submitted && transference instanceof SuccessTransferenceState) {\n      history.push(\n        favoredAccounts!.length > 0\n          ? TransferenceRoutes.favoredAccountSelection\n          : TransferenceRoutes.favoredName\n      );\n    }\n  }, [\n    favoredAccounts,\n    submitted,\n    dispatch,\n    taxId,\n    history,\n    transferType,\n    transference,\n  ]);\n\n  const onTaxIdChange = (event: React.ChangeEvent<HTMLInputElement>) =>\n    setTaxId(event.target.value);\n\n  const onCancelButtonClick = () => {\n    dispatch(updateTransferenceData());\n    history.go(-2);\n  };\n\n  const onSubmit = (event: React.FormEvent) => {\n    event.preventDefault();\n    if (!isValid) return;\n    dispatch(getAccountsByTaxId(taxId));\n    setSubmitted(true);\n  };\n\n  const onAlertClose = () => {\n    dispatch(closeAlert());\n  };\n\n  return (\n    <PageContainer>\n      <ProcessPageLayout\n        appBar={\n          <AppBar\n            homeRoute={AccountRoutes.home}\n            action={\n              <Button\n                palette=\"secondary\"\n                size=\"small\"\n                startIcon={<Close color=\"primary\" />}\n                onClick={onCancelButtonClick}\n                data-test-id=\"cancel-button\"\n              >\n                {cancelLabel}\n              </Button>\n            }\n          />\n        }\n        header={\n          <ProcessDescriptionHeader\n            title=\"Transferência\"\n            subtitle=\"Vamos identificar quem receberá sua transferência\"\n            description=\"Informe o CPF, CNPJ ou busque em seus contatos\"\n          />\n        }\n        main={\n          <Box component=\"form\" onSubmit={onSubmit}>\n            <TextField\n              label=\"CPF ou CNPJ\"\n              placeholder=\"Digite apenas números\"\n              inputMode=\"numeric\"\n              value={taxId}\n              onChange={onTaxIdChange}\n              data-test-id=\"change-taxid\"\n            />\n          </Box>\n        }\n        footer={\n          <ProcessPageFooter\n            primaryButton={\n              <Button\n                palette=\"primary\"\n                endIcon={<KeyboardArrowRight color=\"secondary\" />}\n                disabled={!isValid}\n                onClick={onSubmit}\n                data-test-id=\"submit-button\"\n              >\n                {nextLabel}\n              </Button>\n            }\n          />\n        }\n      />\n\n      {errorMessage && (\n        <Alert\n          title=\"Erro\"\n          message={errorMessage}\n          severity={\"error\"}\n          onClose={onAlertClose}\n        />\n      )}\n      <Loader open={loading} />\n    </PageContainer>\n  );\n};\n","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/transference/pages/TransferValue/TransferValue.tsx",["4970"],"/* eslint-disable react-hooks/exhaustive-deps */\nimport { Box, Grid, Typography } from \"@material-ui/core\";\nimport React from \"react\";\nimport { AppBar } from \"components/AppBar\";\nimport { TransferenceRoutes } from \"../../constants/routes\";\nimport { ProcessDescriptionHeader } from \"components/ProcessDescriptionHeader\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { StoreState } from \"redux/state\";\nimport { ProcessPageLayout } from \"components/ProcessPageLayout\";\nimport { Button } from \"components/Button\";\nimport { Close, KeyboardArrowRight } from \"@material-ui/icons\";\nimport { cancelLabel, nextLabel } from \"constants/buttons/labels\";\nimport { ProcessPageFooter } from \"components/ProcessPageFooter\";\nimport { PageContainer } from \"components/PageContainer\";\nimport { useHistory } from \"react-router-dom\";\nimport { CurrencyFormatter, parseCurrency } from \"_translate\";\nimport { updateTransferenceData } from \"features/transference/redux/actions\";\nimport { TransferType } from \"features/transference/redux/models/enum\";\nimport { useValue } from \"hooks/useValue\";\nimport { maskMoney } from \"_utils/masks/money\";\nimport { TextField } from \"components/TextField\";\nimport { Alert } from \"components/Alert\";\nimport { ErrorMessage } from \"components/ErrorMessage\";\n\nexport const TransferValue: React.FC = () => {\n  const [isValidValue, setIsValidValue] = React.useState(false);\n  const { balance, transferType, name } = useSelector((store: StoreState) => ({\n    balance: store.account.dashboard!.balance,\n    transferType: store.transference.transference?.transferType,\n    name: store.transference.transference?.toName,\n  }));\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const [valueInput, setValueInput] = useValue(maskMoney);\n  const [balanceIsInvalid, setBalanceIsInvalid] = React.useState<\n    boolean | undefined\n  >();\n\n  React.useEffect(() => {\n    const convertedValue = parseCurrency(\n      isNaN(parseCurrency(valueInput))\n        ? CurrencyFormatter.format(0)\n        : valueInput\n    );\n    setIsValidValue(convertedValue > 0 && convertedValue <= balance);\n    setBalanceIsInvalid(convertedValue > balance);\n  }, [valueInput]);\n\n  const onValueChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setValueInput(event.target.value);\n  };\n\n  const onCancelButtonClick = () => {\n    dispatch(updateTransferenceData());\n    history.go(transferType === TransferType.InternalTransfer ? -4 : -8);\n  };\n\n  const onSubmit = (event: React.FormEvent) => {\n    event.preventDefault();\n    if (!isValidValue) return;\n\n    history.push(TransferenceRoutes.schedule);\n    dispatch(\n      updateTransferenceData({ transferValue: parseCurrency(valueInput) })\n    );\n  };\n\n  return (\n    <PageContainer>\n      <ProcessPageLayout\n        appBar={\n          <AppBar\n            homeRoute={TransferenceRoutes.transference}\n            action={\n              <Button\n                palette=\"secondary\"\n                size=\"small\"\n                startIcon={<Close color=\"primary\" />}\n                onClick={onCancelButtonClick}\n                data-test-id=\"cancel-button\"\n              >\n                {cancelLabel}\n              </Button>\n            }\n          />\n        }\n        header={\n          <ProcessDescriptionHeader\n            title=\"Transferência\"\n            subtitle=\"Quanto deseja transferir?\"\n            description={`Você está transferindo para conta de ${name}`}\n          />\n        }\n        main={\n          <Grid container direction=\"column\" spacing={3}>\n            <Grid item>\n              <Typography data-test-id=\"balance\">\n                <strong>Seu saldo {CurrencyFormatter.format(balance)}</strong>\n              </Typography>\n            </Grid>\n            <Grid item component=\"form\" onSubmit={onSubmit}>\n              <TextField\n                label=\"Valor\"\n                placeholder=\"R$ 0,00\"\n                inputMode=\"numeric\"\n                value={\n                  isNaN(parseCurrency(valueInput))\n                    ? CurrencyFormatter.format(0)\n                    : valueInput\n                }\n                onChange={onValueChange}\n                data-test-id=\"change-value\"\n              />\n            </Grid>\n            <Box>\n              {balanceIsInvalid && (\n                <ErrorMessage message={\"Saldo insuficiente\"} />\n              )}\n            </Box>\n          </Grid>\n        }\n        footer={\n          <ProcessPageFooter\n            primaryButton={\n              <Button\n                endIcon={<KeyboardArrowRight color=\"secondary\" />}\n                onClick={onSubmit}\n                disabled={!isValidValue}\n                data-test-id=\"next-button\"\n              >\n                {nextLabel}\n              </Button>\n            }\n          />\n        }\n      />\n    </PageContainer>\n  );\n};\n","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/user/pages/UserInformation/UserInformation.tsx",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/user/pages/ChangeEmail/ChangeEmail.tsx",["4971"],"import React, { Fragment } from \"react\";\nimport { ProcessDescriptionHeader } from \"components/ProcessDescriptionHeader\";\nimport { AppBar } from \"components/AppBar\";\nimport { PageContainer } from \"components/PageContainer\";\nimport { ProcessPageLayout } from \"components/ProcessPageLayout\";\nimport { Button } from \"components/Button\";\nimport { Close, KeyboardArrowRight } from \"@material-ui/icons\";\nimport { cancelLabel, nextLabel } from \"constants/buttons/labels\";\nimport { useHistory } from \"react-router-dom\";\nimport { ProcessPageFooter } from \"components/ProcessPageFooter\";\nimport { AuthorizationSheet } from \"components/AuthorizationSheet\";\nimport { AccountRoutes } from \"features/account/constants/routes\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { StoreState } from \"redux/state\";\nimport { Alert } from \"components/Alert\";\nimport { Loader } from \"components/Loader\";\nimport { closeAlert } from \"features/account/redux/actions\";\nimport { updateUserInformation } from \"features/user/redux/actions\";\nimport { UserRoutes } from \"features/user/constants/routes\";\nimport { SuccessUpdateUserInformationState } from \"features/user/redux/state\";\nimport { updateAuthData } from \"features/authentication/redux/actions\";\nimport { TextField } from \"components/TextField\";\nimport { useStyles } from \"./ChangeEmail.style\";\nimport { validateEmail } from \"_utils/validate\";\n\nexport const ChangeEmail: React.FC = () => {\n  const [email, setEmail] = React.useState(\"\");\n  const [error, setError] = React.useState(false);\n\n  const [openAuthorizationSheet, setOpenAuthorizationSheet] =\n    React.useState(false);\n\n  const [validatedToken, setValidatedToken] = React.useState(false);\n\n  const { user } = useSelector((store: StoreState) => store.auth);\n\n  const userInformationState = useSelector(\n    (store: StoreState) => store.userInformation\n  );\n\n  const { loading, errorMessage } = userInformationState;\n\n  const history = useHistory();\n\n  const dispatch = useDispatch();\n  const style = useStyles();\n\n  const onEmailChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setEmail(event.target.value);\n  };\n\n  React.useEffect(() => {\n    if (\n      validatedToken &&\n      userInformationState instanceof SuccessUpdateUserInformationState\n    ) {\n      history.push(UserRoutes.changeConclude);\n      dispatch(updateAuthData({ ...user, mail: email }));\n    }\n  }, [dispatch, email, history, userInformationState, user, validatedToken]);\n\n  const onNextButtonClick = () => {\n    setOpenAuthorizationSheet(true);\n  };\n\n  const onCancelButtonClick = () => {\n    history.go(-1);\n  };\n\n  const onAlertClose = () => {\n    dispatch(closeAlert());\n  };\n\n  const onAuthorizationSheetClose = (isTokenValid: boolean) => {\n    if (isTokenValid) {\n      setValidatedToken(true);\n      dispatch(\n        updateUserInformation({\n          mail: email,\n        })\n      );\n    }\n\n    setOpenAuthorizationSheet(false);\n  };\n\n  const validateError = () => {\n    if (validateEmail(email)) setError(false);\n    else setError(true);\n  };\n\n  React.useEffect(() => {\n    validateError();\n  }, [email]);\n\n  return (\n    <PageContainer>\n      <ProcessPageLayout\n        appBar={\n          <AppBar\n            homeRoute={AccountRoutes.home}\n            action={\n              <Button\n                palette=\"secondary\"\n                size=\"small\"\n                startIcon={<Close color=\"primary\" />}\n                onClick={onCancelButtonClick}\n                data-test-id=\"cancel-button\"\n              >\n                {cancelLabel}\n              </Button>\n            }\n          />\n        }\n        header={\n          <ProcessDescriptionHeader\n            title=\"Editar email\"\n            subtitle={`Seu email atual é: ${user?.mail ?? \"\"}`}\n            data-test-id=\"email\"\n          />\n        }\n        main={\n          <Fragment>\n            <TextField\n              label=\"Edite seu email\"\n              error={email ? error : false}\n              placeholder=\"seuemail@email.com\"\n              type=\"email\"\n              value={email}\n              onChange={onEmailChange}\n              variant=\"outlined\"\n              required\n              data-test-id=\"change-email\"\n            />\n            {email.length > 0 && error && (\n              <span className={style.inputError}>E-mail inválido</span>\n            )}\n          </Fragment>\n        }\n        footer={\n          <ProcessPageFooter\n            primaryButton={\n              <Button\n                palette=\"primary\"\n                endIcon={<KeyboardArrowRight color=\"secondary\" />}\n                disabled={error}\n                onClick={onNextButtonClick}\n                data-test-id=\"next-button\"\n              >\n                {nextLabel}\n              </Button>\n            }\n          />\n        }\n      />\n      <AuthorizationSheet\n        open={openAuthorizationSheet}\n        description=\"Para autenticar a operação\"\n        onClose={onAuthorizationSheetClose}\n      />\n      {errorMessage && (\n        <Alert\n          title=\"Erro\"\n          message={errorMessage}\n          severity={\"error\"}\n          onClose={onAlertClose}\n        />\n      )}\n      <Loader open={loading} />\n    </PageContainer>\n  );\n};\n","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/user/pages/ChangePhone/ChangePhone.tsx",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/components/PopUpConfirmToken/index.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/payment/components/PaymentError/PaymentError.tsx",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/onboarding/pages/ActivateBySMS/BirthDateForSMS/BirthDaterSMS.style.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/components/BadgeButton/index.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/account/components/EditPageHeader/index.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/account/components/BadgeChangeProfileButton/index.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/user/pages/CurrentAddress/CurrentAddress.style.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/onboarding/components/inputs/TokenInput/TokenInput.style.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/transference/pages/AttachDocuments/AttachDocuments.tsx",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/transference/pages/FavoredAccountSelection/FavoredAccountSelection.tsx",["4972"],"import React from \"react\";\nimport { Box } from \"@material-ui/core\";\nimport { AccountRoutes } from \"features/account/constants/routes\";\nimport { ButtonWithFloatingIcon } from \"components/ButtonWithFloatingIcon\";\nimport { PageContainer } from \"components/PageContainer\";\nimport { ProcessPageLayout } from \"components/ProcessPageLayout\";\nimport { ProcessPageFooter } from \"components/ProcessPageFooter\";\nimport { AppBar } from \"components/AppBar\";\nimport { Button } from \"components/Button\";\nimport { Close } from \"@material-ui/icons\";\nimport { useHistory } from \"react-router-dom\";\nimport { cancelLabel } from \"constants/buttons/labels\";\nimport { ProcessDescriptionHeader } from \"components/ProcessDescriptionHeader\";\nimport { SelectionCard } from \"components/SelectionCard\";\nimport { useStyles } from \"./FavoredAccountSelection.style\";\nimport { TransferenceRoutes } from \"features/transference/constants/routes\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { StoreState } from \"redux/state\";\nimport { updateTransferenceData } from \"features/transference/redux/actions\";\nimport { Alert } from \"components/Alert\";\nimport { Loader } from \"components/Loader\";\nimport { closeAlert } from \"features/account/redux/actions\";\nimport { TransferType } from \"features/transference/redux/models/enum\";\nimport { Icon } from \"components/Icon\";\n\nexport const FavoredAccountSelection: React.FC = () => {\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const styles = useStyles();\n  const transferenceState = useSelector(\n    (store: StoreState) => store.transference\n  );\n\n  React.useEffect(() => {\n    dispatch(\n      updateTransferenceData({\n        transferType: TransferType.InternalTransfer,\n      })\n    );\n  }, []);\n\n  const { loading, favoredAccounts, errorMessage } = transferenceState;\n\n  const onCancelButtonClick = () => {\n    dispatch(updateTransferenceData());\n    history.go(-3);\n  };\n\n  const onAccountCardClick = (i: number) => {\n    const { name, bank, bankBranch, bankAccount, bankAccountDigit } =\n      favoredAccounts![i];\n\n    dispatch(\n      updateTransferenceData({\n        toName: name,\n        bank: bank,\n        bankBranch: bankBranch,\n        bankAccount: bankAccount,\n        bankAccountDigit: bankAccountDigit,\n      })\n    );\n    history.push(TransferenceRoutes.value);\n  };\n\n  const onOtherAccountClick = () => {\n    history.replace(TransferenceRoutes.favoredName);\n  };\n\n  const onAlertClose = () => {\n    dispatch(closeAlert());\n  };\n\n  return (\n    <PageContainer>\n      <ProcessPageLayout\n        appBar={\n          <AppBar\n            homeRoute={AccountRoutes.home}\n            action={\n              <Button\n                palette=\"secondary\"\n                size=\"small\"\n                startIcon={<Close color=\"primary\" />}\n                onClick={onCancelButtonClick}\n                data-test-id=\"cancel-button\"\n              >\n                {cancelLabel}\n              </Button>\n            }\n          />\n        }\n        header={\n          <ProcessDescriptionHeader\n            title=\"Transferência\"\n            subtitle=\"Vimos que o CPF/CNPJ especificado já tem conta(s) com a gente\"\n            description=\"Deseja enviar para alguma conta encontrada ou de outro banco?\"\n          />\n        }\n        main={\n          <Box className={styles.content}>\n            {favoredAccounts?.map((account, i) => (\n              <SelectionCard\n                key={i}\n                title={account.name}\n                bankAccount={\n                  account.bankAccount\n                    ? `Conta ${account.bankAccount}-${account.bankAccountDigit}`\n                    : \"\"\n                }\n                bank={account.bank ? `Bank ${account.bank}` : \"\"}\n                endIcon={\"next\"}\n                onClick={() => onAccountCardClick(i)}\n              />\n            ))}\n\n            <Box mt={8} display=\"flex\" justifyContent=\"center\">\n              <ButtonWithFloatingIcon\n                icon={<Icon name=\"buttonBg\" />}\n                className={styles.otherAccountButton}\n                onClick={onOtherAccountClick}\n                data-test-id=\"favored-account-selection\"\n              >\n                Outra conta\n              </ButtonWithFloatingIcon>\n            </Box>\n          </Box>\n        }\n        footer={<ProcessPageFooter />}\n      />\n      {errorMessage && (\n        <Alert\n          title=\"Erro\"\n          message={errorMessage}\n          severity={\"error\"}\n          onClose={onAlertClose}\n        />\n      )}\n      <Loader open={loading} />\n    </PageContainer>\n  );\n};\n","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/transference/pages/ScheduleTransfer/ScheduleTransfer.tsx",["4973","4974"],"import React from \"react\";\nimport { Grid } from \"@material-ui/core\";\nimport { AppBar } from \"components/AppBar\";\nimport { ProcessDescriptionHeader } from \"components/ProcessDescriptionHeader\";\nimport { AccountRoutes } from \"features/account/constants/routes\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { ProcessPageLayout } from \"components/ProcessPageLayout\";\nimport { cancelLabel, nextLabel } from \"constants/buttons/labels\";\nimport { Button } from \"components/Button\";\nimport { Close, KeyboardArrowRight } from \"@material-ui/icons\";\nimport { ProcessPageFooter } from \"components/ProcessPageFooter\";\nimport { useHistory } from \"react-router-dom\";\nimport { TextField } from \"components/TextField\";\nimport { SchedulingButton } from \"components/SchedulingButton\";\nimport { ShortDateFormatter } from \"_translate\";\nimport { PageContainer } from \"components/PageContainer\";\nimport { useStyles } from \"./ScheduleTransfer.style\";\nimport { TransferenceRoutes } from \"features/transference/constants/routes\";\nimport {\n  getExpectedTransferDate,\n  updateTransferenceData,\n} from \"features/transference/redux/actions\";\nimport { StoreState } from \"redux/state\";\nimport { Loader } from \"components/Loader\";\nimport { Alert } from \"components/Alert\";\nimport { TransferType } from \"features/transference/redux/models/enum\";\nimport { compareTransferDates } from \"features/transference/_utils\";\nimport { ConfirmSchedulingDialog } from \"features/transference/components/ConfirmSchedulingDialog\";\n\nexport const ScheduleTransfer: React.FC = () => {\n  const [transferDate, setTransferDate] = React.useState<Date | null>(null);\n  const [displayDate, setDisplayDate] = React.useState(\"\");\n  const [minDate, setMinDate] = React.useState(new Date());\n  const [choseDate, setChoseDate] = React.useState(false);\n  const [openDatePicker, setOpenDatePicker] = React.useState(false);\n  const { expectedTransferDate, transferType, toName, loading, errorMessage } =\n    useSelector((state: StoreState) => ({\n      expectedTransferDate:\n        state.transference.transference?.expectedTransferDate,\n      transferType: state.transference.transference?.transferType,\n      toName: state.transference.transference?.toName,\n      loading: state.transference.loading,\n      errorMessage: state.transference.errorMessage,\n    }));\n\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const styles = useStyles();\n\n  React.useEffect(() => {\n    if (expectedTransferDate && !transferDate) {\n      setMinDate(new Date());\n      setTransferDate(expectedTransferDate);\n    }\n  }, [expectedTransferDate, transferDate]);\n\n  React.useEffect(() => {\n    if (expectedTransferDate && transferDate !== expectedTransferDate)\n      setTransferDate(expectedTransferDate);\n  }, [expectedTransferDate]);\n\n  React.useEffect(() => {\n    setDisplayDate(_getDisplayDate());\n  }, [transferDate]);\n\n  const _getDisplayDate = () => {\n    const today = \"Hoje\";\n\n    if (!transferDate || compareTransferDates(transferDate, new Date()) === 0)\n      return today;\n    else return ShortDateFormatter.format(transferDate);\n  };\n\n  const _transferDateIsValid = () => {\n    return (\n      transferDate &&\n      expectedTransferDate &&\n      compareTransferDates(transferDate, expectedTransferDate) === 0\n    );\n  };\n\n  const onSchedulingButtonClick = () => {\n    setOpenDatePicker(true);\n  };\n\n  const onDatePickerClose = () => {\n    setOpenDatePicker(false);\n  };\n\n  const onDateChange = (date: Date | null) => {\n    setTransferDate(date);\n  };\n\n  const onConfirmSchedulingDialogClose = (confirmedScheduling: boolean) => {\n    if (confirmedScheduling) {\n      dispatch(updateTransferenceData({ transferDate }));\n      history.push(TransferenceRoutes.description);\n      return;\n    }\n\n    setChoseDate(false);\n  };\n\n  const onCancelButtonClick = () => {\n    dispatch(updateTransferenceData());\n    history.go(transferType === TransferType.InternalTransfer ? -5 : -9);\n  };\n\n  const onNextButtonClick = async (event: React.FormEvent) => {\n    event.preventDefault();\n    setChoseDate(true);\n\n    if (transferType === TransferType.MoneyTransfer)\n      dispatch(getExpectedTransferDate(transferDate));\n\n    dispatch(\n      updateTransferenceData({ transferDate: transferDate ?? new Date() })\n    );\n\n    history.push(TransferenceRoutes.description);\n  };\n\n  return (\n    <PageContainer>\n      <ProcessPageLayout\n        appBar={\n          <AppBar\n            homeRoute={AccountRoutes.home}\n            action={\n              <Button\n                palette=\"secondary\"\n                size=\"small\"\n                startIcon={<Close color=\"primary\" />}\n                onClick={onCancelButtonClick}\n                data-test-id=\"cancel-button\"\n              >\n                {cancelLabel}\n              </Button>\n            }\n          />\n        }\n        header={\n          <ProcessDescriptionHeader\n            title=\"Transferência\"\n            subtitle=\"Quando deseja transferir?\"\n            description={`Escolhendo a data de hoje, ${toName} receberá o valor em breve.`}\n          />\n        }\n        main={\n          <Grid container direction=\"column\">\n            <Grid item>\n              <TextField\n                label=\"Quando?\"\n                value={displayDate}\n                data-test-id=\"display-date\"\n              />\n            </Grid>\n            <Grid item>\n              <Grid\n                container\n                justify=\"center\"\n                className={styles.scheduleButton}\n              >\n                <Grid item>\n                  <SchedulingButton\n                    open={openDatePicker}\n                    value={transferDate}\n                    minDate={minDate}\n                    onClick={onSchedulingButtonClick}\n                    onDateSelection={onDateChange}\n                    onClose={onDatePickerClose}\n                  />\n                </Grid>\n              </Grid>\n            </Grid>\n          </Grid>\n        }\n        footer={\n          <ProcessPageFooter\n            primaryButton={\n              <Button\n                endIcon={<KeyboardArrowRight color=\"secondary\" />}\n                onClick={onNextButtonClick}\n                data-test-id=\"next-button\"\n              >\n                {nextLabel}\n              </Button>\n            }\n          />\n        }\n      />\n      <Loader open={loading} />\n      {errorMessage && (\n        <Alert title=\"Erro\" message={errorMessage} severity=\"error\" />\n      )}\n      {choseDate && !_transferDateIsValid() && !loading && (\n        <ConfirmSchedulingDialog\n          open={choseDate}\n          onClose={onConfirmSchedulingDialogClose}\n        />\n      )}\n    </PageContainer>\n  );\n};\n","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/transference/pages/TransferDescription/TransferDescription.tsx",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/user/redux/actionTypes.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/transference/redux/state.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/account/pages/AccountSettings/AccountSettings.tsx",["4975","4976"],"import React from \"react\";\nimport { PageContainer } from \"components/PageContainer\";\nimport { ProcessPageLayout } from \"components/ProcessPageLayout\";\nimport { ProcessDescriptionHeader } from \"components/ProcessDescriptionHeader\";\nimport { AccountCard } from \"features/account/components/AccountCard\";\nimport { ProcessPageFooter } from \"components/ProcessPageFooter\";\nimport { useStyles } from \"./AccountSettings.style\";\nimport { useHistory } from \"react-router-dom\";\nimport { AccountRoutes } from \"features/account/constants/routes\";\nimport { Box } from \"@material-ui/core\";\nimport { ButtonWithFloatingIcon } from \"components/ButtonWithFloatingIcon\";\nimport { ActionList } from \"components/ActionList\";\nimport { ActionListItem } from \"components/ActionListItem\";\nimport { ConfirmSignoutDialog } from \"features/authentication/components/ConfirmSignoutDialog\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Button } from \"components/Button\";\nimport { KeyboardArrowLeft } from \"@material-ui/icons\";\nimport { StoreState } from \"redux/state\";\nimport { UserRoutes } from \"features/user/constants/routes\";\nimport { Divider } from \"components/Divider\";\nimport {\n  changeAccount,\n  getAccountDashboard,\n} from \"features/account/redux/actions\";\nimport { Account } from \"features/account/redux/models/account\";\nimport { Loader } from \"components/Loader\";\nimport { Icon } from \"components/Icon\";\n\nexport const AccountSettings: React.FC = () => {\n  const { dashboard } = useSelector((state: StoreState) => ({\n    dashboard: state.account,\n  }));\n  const { account, loading } = useSelector(\n    (state: StoreState) => state.account\n  );\n  const { accounts } = dashboard.dashboard!;\n  const accountIn = dashboard.account?.accountId;\n  const [openConfirmSignoutDialog, setOpenConfirmSignoutDialog] =\n    React.useState(false);\n  const history = useHistory();\n  const styles = useStyles();\n  const dispatch = useDispatch();\n  const onSeeAllButtonClick = () => {\n    history.push(AccountRoutes.allAccounts);\n  };\n  const onChangeClick = (account: Account) => {\n    dispatch(changeAccount(account));\n  };\n  const onBackToHome = () => history.push(AccountRoutes.home);\n  const onPersonalInformationClick = () => {\n    history.push(UserRoutes.home);\n  };\n  const onHelpClick = () => {\n    history.push(AccountRoutes.help);\n  };\n  const onSignOutClick = () => {\n    setOpenConfirmSignoutDialog(true);\n  };\n  const onConfirmSignoutClose = () => {\n    setOpenConfirmSignoutDialog(false);\n  };\n  React.useEffect(() => {\n    dispatch(getAccountDashboard());\n  }, []);\n\n  return (\n    <PageContainer>\n      <ProcessPageLayout\n        header={\n          <React.Fragment>\n            <ProcessDescriptionHeader title=\"Configurações\" />\n            <AccountCard\n              className={styles.cardBackground}\n              account={account!}\n              endIcon={<Icon name=\"check\" />}\n            />\n            {accounts.map((accountItem, index) => {\n              if (accountItem.accountId === account?.accountId) return \"\";\n              if (!accountItem.isFixedAccount) return \"\";\n\n              const accountComponent = (\n                <AccountCard\n                  className={styles.cardBackground}\n                  key={accountItem.accountId}\n                  account={accountItem}\n                  onClick={() => onChangeClick(accountItem)}\n                  favorite\n                />\n              );\n\n              if (index < accounts.length - 1)\n                return (\n                  <React.Fragment>\n                    <Divider spacing={1} />\n                    {accountComponent}\n                  </React.Fragment>\n                );\n\n              return (\n                <React.Fragment>\n                  <Divider spacing={1} />\n                  {accountComponent}\n                </React.Fragment>\n              );\n            })}\n          </React.Fragment>\n        }\n        main={\n          <React.Fragment>\n            <Box\n              display=\"flex\"\n              justifyContent=\"center\"\n              className={styles.seeAllButton}\n            >\n              <ButtonWithFloatingIcon\n                onClick={onSeeAllButtonClick}\n                data-test-id=\"see-all-button\"\n              >\n                Ver Todas\n              </ButtonWithFloatingIcon>\n            </Box>\n            <ActionList>\n              <ActionListItem\n                key=\"Informações pessoais\"\n                onClick={onPersonalInformationClick}\n                data-test-id=\"user-information-button\"\n              >\n                Informações pessoais\n              </ActionListItem>\n              <ActionListItem\n                key=\"Ajuda\"\n                onClick={onHelpClick}\n                data-test-id=\"help-button\"\n              >\n                Ajuda\n              </ActionListItem>\n              <ActionListItem\n                key=\"Sair\"\n                onClick={onSignOutClick}\n                data-test-id=\"signout-button\"\n              >\n                Sair\n              </ActionListItem>\n            </ActionList>\n          </React.Fragment>\n        }\n        footer={\n          <ProcessPageFooter\n            secondaryButton={\n              <Button\n                palette=\"secondary\"\n                startIcon={<KeyboardArrowLeft color=\"secondary\" />}\n                onClick={onBackToHome}\n                data-test-id=\"home-button\"\n              >\n                Voltar\n              </Button>\n            }\n          />\n        }\n      />\n      <Loader open={loading} />\n      <ConfirmSignoutDialog\n        open={openConfirmSignoutDialog}\n        onClose={onConfirmSignoutClose}\n        data-test-id=\"confirm-signout-close\"\n      />\n    </PageContainer>\n  );\n};\n","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/account/pages/BankStatementFilter/BankStatementFilter.tsx",["4977","4978","4979"],"import React from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useHistory } from \"react-router-dom\";\nimport {\n  Grid,\n  Typography,\n  Box,\n  Select,\n  MenuItem,\n  InputLabel,\n  Input,\n} from \"@material-ui/core\";\nimport { Close } from \"@material-ui/icons\";\nimport { MaterialUiPickersDate } from \"@material-ui/pickers/typings/date\";\nimport { AccountRoutes } from \"features/account/constants/routes\";\nimport { AppBar } from \"components/AppBar\";\nimport { Button } from \"components/Button\";\nimport { DateInput } from \"components/DateInput\";\nimport { Loader } from \"components/Loader\";\nimport { Alert } from \"components/Alert\";\nimport { Divider } from \"components/Divider\";\nimport { FilterSectionTitleAndDescription } from \"features/account/components/FilterSectionTitleAndDescription\";\nimport { ProcessDescriptionHeader } from \"components/ProcessDescriptionHeader\";\nimport { ButtonWithFloatingIcon } from \"components/ButtonWithFloatingIcon/ButtonWithFloatingIcon\";\nimport { PageContainer } from \"components/PageContainer\";\nimport { ProcessPageLayout } from \"components/ProcessPageLayout\";\nimport { cancelLabel } from \"constants/buttons/labels\";\nimport { TransactionType } from \"features/account/redux/models/transactionType\";\nimport {\n  closeAlert,\n  setBankStatementFilters,\n} from \"features/account/redux/actions\";\nimport { StoreState } from \"redux/state\";\nimport { useStyles } from \"./BankStatementFilter.style\";\nimport { TagChip } from \"features/tags/components/TagChip\";\nimport { Icon } from \"components/Icon\";\nimport { OperationType } from \"features/account/redux/models/operationType\";\nconst defaultStartDate = new Date();\ndefaultStartDate.setDate(defaultStartDate.getDate() - 30);\n\nexport const BankStatementFilter: React.FC = () => {\n  const { loading, bankStatementFilters, errorMessage } = useSelector(\n    (state: StoreState) => state.account\n  );\n\n  const [startDate, setStartDate] = React.useState<\n    MaterialUiPickersDate | undefined\n  >(bankStatementFilters?.startDate ?? defaultStartDate);\n\n  const [endDate, setEndDate] = React.useState<\n    MaterialUiPickersDate | undefined\n  >(bankStatementFilters?.endDate ?? new Date());\n\n  const [transactionType, setTransactionType] = React.useState<\n    TransactionType | undefined\n  >(bankStatementFilters?.transactionType);\n\n  const [tags, setTags] = React.useState<string[]>([]);\n  const [datesAreValid, setDatesAreValid] = React.useState(false);\n\n  const [operationType, setOperationType] = React.useState<\n    OperationType | undefined\n  >(bankStatementFilters?.operationType ?? 100);\n\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const styles = useStyles();\n\n  React.useEffect(() => {\n    setDatesAreValid(startDate!.getTime() <= endDate!.getTime());\n  }, [startDate, endDate]);\n\n  const onCancelButtonClick = () => {\n    history.goBack();\n  };\n\n  const onResetDateChange = () => {\n    const date = new Date();\n    const startDate = new Date();\n    startDate.setDate(date.getDate() - 30);\n\n    setStartDate(startDate);\n    setEndDate(date);\n  };\n\n  const onStartDateChange = (date: MaterialUiPickersDate) => {\n    if (date === undefined) date = new Date();\n\n    setStartDate(date);\n  };\n\n  const onEndDateChange = (date: MaterialUiPickersDate) => {\n    if (date === undefined) date = new Date();\n\n    setEndDate(date);\n  };\n\n  const onTagClick = (tag: string) => {\n    let newTags = [...tags];\n\n    if (tags.includes(tag)) newTags = newTags.filter((x) => x !== tag);\n    else newTags.push(tag);\n\n    setTags(newTags);\n  };\n\n  const onChangeOperationType = (\n    event: React.ChangeEvent<{ value: unknown }>\n  ) => {\n    setOperationType(event.target.value as number);\n  };\n\n  const onApplyButtonClick = () => {\n    dispatch(\n      setBankStatementFilters({\n        startDate: startDate as Date,\n        endDate: endDate as Date,\n        transactionType,\n        tags,\n        operationType:\n          operationType?.valueOf() != 100 ? operationType : undefined,\n      })\n    );\n    history.goBack();\n  };\n\n  return (\n    <PageContainer>\n      <ProcessPageLayout\n        appBar={\n          <AppBar\n            homeRoute={AccountRoutes.home}\n            action={\n              <Button\n                palette=\"secondary\"\n                size=\"small\"\n                startIcon={<Close color=\"primary\" />}\n                onClick={onCancelButtonClick}\n                data-test-id=\"cancel-button\"\n              >\n                {cancelLabel}\n              </Button>\n            }\n          />\n        }\n        header={\n          <ProcessDescriptionHeader\n            title=\"Filtrar Extrato\"\n            description=\"Selecione as características das transações que deseja visualizar.\"\n          />\n        }\n        main={\n          <React.Fragment>\n            <FilterSectionTitleAndDescription\n              title=\"Por Data\"\n              description=\"Escolha o período que deseja visualizar\"\n            />\n            <Grid\n              container\n              spacing={1}\n              wrap=\"nowrap\"\n              className={styles.datesSection}\n            >\n              <Grid item>\n                <Grid container wrap=\"nowrap\" alignItems=\"center\">\n                  <Grid item>\n                    <Typography variant=\"body2\">de&nbsp;</Typography>\n                  </Grid>\n                  <Grid item>\n                    <DateInput\n                      maxValue={endDate}\n                      value={startDate}\n                      onChange={onStartDateChange}\n                    />\n                  </Grid>\n                </Grid>\n              </Grid>\n              <Grid item>\n                <Grid container wrap=\"nowrap\" alignItems=\"center\">\n                  <Grid item>\n                    <Typography variant=\"body2\">até&nbsp;</Typography>\n                  </Grid>\n                  <Grid item>\n                    <DateInput value={endDate} onChange={onEndDateChange} />\n                  </Grid>\n                </Grid>\n              </Grid>\n            </Grid>\n            <Box>\n              {!datesAreValid && (\n                <Grid\n                  container\n                  justifyContent=\"center\"\n                  className={styles.errorMessage}\n                >\n                  <Grid>\n                    <Icon name=\"alert\" />\n                  </Grid>\n                  <Grid>As datas estão inválidas</Grid>\n                </Grid>\n              )}\n            </Box>\n            <Box className={styles.clearButton}>\n              <ButtonWithFloatingIcon\n                onClick={() => {\n                  onResetDateChange();\n                }}\n                size=\"small\"\n                data-test-id=\"date-clear-button\"\n              >\n                Limpar\n              </ButtonWithFloatingIcon>\n            </Box>\n            <Divider spacing={2} />\n            <Box component=\"section\">\n              <FilterSectionTitleAndDescription\n                title=\"Por Transação\"\n                description=\"Filtrar por gastos ou receitas\"\n              />\n              <Grid container spacing={1}>\n                <Grid item>\n                  <Button\n                    data-test-id=\"sent-button\"\n                    variant={\n                      transactionType === TransactionType.sent\n                        ? \"contained\"\n                        : \"outlined\"\n                    }\n                    size=\"small\"\n                    onClick={() =>\n                      setTransactionType(\n                        transactionType === TransactionType.sent\n                          ? undefined\n                          : TransactionType.sent\n                      )\n                    }\n                  >\n                    Enviados\n                  </Button>\n                </Grid>\n                <Grid item>\n                  <Button\n                    data-test-id=\"received-button\"\n                    variant={\n                      transactionType === TransactionType.received\n                        ? \"contained\"\n                        : \"outlined\"\n                    }\n                    size=\"small\"\n                    onClick={() =>\n                      setTransactionType(\n                        transactionType === TransactionType.received\n                          ? undefined\n                          : TransactionType.received\n                      )\n                    }\n                  >\n                    Recebidos\n                  </Button>\n                </Grid>\n              </Grid>\n              <Box className={styles.clearButton}>\n                <ButtonWithFloatingIcon\n                  size=\"small\"\n                  onClick={() => setTransactionType(undefined)}\n                  data-test-id=\"transaction-clear-button\"\n                >\n                  Limpar\n                </ButtonWithFloatingIcon>\n              </Box>\n            </Box>\n            <Divider spacing={2} />\n            <Box component=\"section\">\n              <FilterSectionTitleAndDescription\n                title=\"Por tipo\"\n                description=\"Filtrar por gastos ou receitas\"\n              />\n              <Box>\n                <Select\n                  data-test-id=\"select-button\"\n                  fullWidth={true}\n                  value={operationType}\n                  onChange={onChangeOperationType}\n                  displayEmpty={true}\n                  variant={\"outlined\"}\n                  placeholder=\"Todas\"\n                  defaultChecked={true}\n                  defaultValue={100}\n                >\n                  <MenuItem data-test-id=\"all-button\" value={100}>\n                    Todas\n                  </MenuItem>\n                  <MenuItem data-test-id=\"boleto-button\" value={2}>\n                    Pagamento de Boleto\n                  </MenuItem>\n                  <MenuItem data-test-id=\"Transfer-button\" value={3}>\n                    Transferência\n                  </MenuItem>\n                  <MenuItem data-test-id=\"internalTransfer-button\" value={6}>\n                    Transferência interna\n                  </MenuItem>\n                  <MenuItem data-test-id=\"paymentGare-button\" value={8}>\n                    Pagamento de GARE\n                  </MenuItem>\n                  <MenuItem data-test-id=\"paymentFgts-button\" value={11}>\n                    Pagamento de FGTS\n                  </MenuItem>\n                  <MenuItem data-test-id=\"paymentDarj-button\" value={12}>\n                    Pagamento de DARJ\n                  </MenuItem>\n                  <MenuItem data-test-id=\"smsTransfer-button\" value={13}>\n                    Transferência por SMS\n                  </MenuItem>\n                  <MenuItem data-test-id=\"topUp-button\" value={37}>\n                    Recarga de Celular\n                  </MenuItem>\n                  <MenuItem data-test-id=\"QrCodeTransfer-button\" value={44}>\n                    Transferência por QR Code\n                  </MenuItem>\n                </Select>\n              </Box>\n              <Box className={styles.clearButton}>\n                <ButtonWithFloatingIcon\n                  size=\"small\"\n                  onClick={() => setOperationType(100)}\n                  data-test-id=\"type-clear-button\"\n                >\n                  Limpar\n                </ButtonWithFloatingIcon>\n              </Box>\n            </Box>\n            <Divider spacing={2} />\n            <Box>\n              <FilterSectionTitleAndDescription\n                title=\"Por TAGs\"\n                description=\"As tags identificam suas transações, selecione\n                            quais deseja visualizar\"\n              />\n              <Box className={styles.customTagButtonsFilter}>\n                <TagChip\n                  label=\"Crédito\"\n                  selected={tags.includes(\"Crédito\")}\n                  onClick={() => onTagClick(\"Crédito\")}\n                />\n                <TagChip\n                  label=\"Débito\"\n                  selected={tags.includes(\"Débito\")}\n                  onClick={() => onTagClick(\"Débito\")}\n                />\n                <TagChip\n                  label=\"Manutenção\"\n                  selected={tags.includes(\"Manutenção\")}\n                  onClick={() => onTagClick(\"Manutenção\")}\n                />\n                <TagChip\n                  label=\"Escola\"\n                  selected={tags.includes(\"Escola\")}\n                  onClick={() => onTagClick(\"Escola\")}\n                />\n              </Box>\n            </Box>\n            <Divider spacing={2} />\n            <Box className={styles.applyButton}>\n              <ButtonWithFloatingIcon\n                icon={<Icon name=\"filter\" />}\n                size=\"large\"\n                disabled={!datesAreValid}\n                onClick={onApplyButtonClick}\n                data-test-id=\"apply-button\"\n              >\n                Aplicar Filtros\n              </ButtonWithFloatingIcon>\n            </Box>\n          </React.Fragment>\n        }\n      />\n      <Loader open={loading} />\n      {errorMessage && (\n        <Alert\n          message={errorMessage}\n          title=\"Erro\"\n          severity=\"error\"\n          onClose={() => dispatch(closeAlert())}\n        />\n      )}\n    </PageContainer>\n  );\n};\n","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/authentication/pages/SignOut/SignOut.tsx",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/account/pages/AllAccounts/AllAccounts.tsx",["4980"],"import React from \"react\";\nimport { PageContainer } from \"components/PageContainer\";\nimport { ProcessDescriptionHeader } from \"components/ProcessDescriptionHeader\";\nimport { useStyles } from \"./AllAccounts.style\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { StoreState } from \"redux/state\";\nimport { Loader } from \"components/Loader\";\nimport { Alert } from \"components/Alert\";\nimport { Divider } from \"components/Divider\";\nimport { ProcessPageLayout } from \"components/ProcessPageLayout\";\nimport { ProcessPageFooter } from \"components/ProcessPageFooter\";\nimport { changeAccount } from \"features/account/redux/actions\";\nimport { Account } from \"features/account/redux/models/account\";\nimport { AccountCard } from \"features/account/components/AccountCard\";\nimport { Grid } from \"@material-ui/core\";\nimport { SearchField } from \"components/SearchField\";\nimport { SuccessAccountState } from \"features/account/redux/state\";\nimport { Icon } from \"components/Icon\";\n\nexport const AllAccounts: React.FC = () => {\n  const { dashboard, account, errorMessage } = useSelector(\n    (state: StoreState) => state.account\n  );\n  const [displayAccounts, setAccounts] = React.useState(dashboard!.accounts);\n  const style = useStyles();\n  const { accounts } = dashboard!;\n  const dispatch = useDispatch();\n\n  const _search = (value: string) => {\n    value = value.replace(/^\\s+|\\s+$/, \"\");\n    const result = dashboard!.accounts.filter((account) =>\n      account.name.toLowerCase().includes(value.toLowerCase())\n    );\n    setAccounts(result);\n  };\n\n  const onSearchFieldChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    _search(event.target.value);\n  };\n\n  const onAccountClick = (account: Account) => {\n    dispatch(changeAccount(account));\n  };\n\n  return (\n    <PageContainer>\n      <ProcessPageLayout\n        header={\n          <React.Fragment>\n            <ProcessDescriptionHeader title={\"Todas as Contas\"} />\n            <AccountCard\n              account={account!}\n              endIcon={<Icon name=\"check\" />}\n              className={style.currentAccount}\n              data-test-id=\"current-account\"\n            />\n            <Divider spacing={2} />\n          </React.Fragment>\n        }\n        main={\n          <Grid container direction=\"column\" spacing={2}>\n            <Grid item className={style.searcField}>\n              <SearchField\n                placeholder=\"Busque pelo nome da conta\"\n                onChange={onSearchFieldChange}\n              />\n            </Grid>\n            <Grid item>\n              <Grid container direction=\"column\">\n                {displayAccounts.map((x, index) => {\n                  const accountComponent = (\n                    <AccountCard\n                      key={x.name}\n                      account={x}\n                      endIcon={\n                        account?.accountId === x.accountId ? (\n                          <Icon name=\"check\" />\n                        ) : undefined\n                      }\n                      onClick={() => onAccountClick(x)}\n                      starIcon={x.isFixedAccount}\n                      btnStar\n                      data-test-id=\"account-card-container\"\n                    />\n                  );\n                  if (index < displayAccounts.length - 1)\n                    return (\n                      <Grid item>\n                        {accountComponent}\n                        <Divider spacing={1} />\n                      </Grid>\n                    );\n\n                  return (\n                    <Grid item>\n                      {accountComponent}\n                      {index < displayAccounts.length - 1 && (\n                        <Divider spacing={0} />\n                      )}\n                    </Grid>\n                  );\n                })}\n              </Grid>\n            </Grid>\n          </Grid>\n        }\n        footer={<ProcessPageFooter />}\n      />\n      <Loader open={dashboard instanceof SuccessAccountState} />\n      {errorMessage && (\n        <Alert\n          title=\"Erro\"\n          message={errorMessage}\n          severity=\"error\"\n          data-test-id=\"error-message\"\n        />\n      )}\n    </PageContainer>\n  );\n};\n","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/account/pages/Details/Details.tsx",["4981"],"import React from \"react\";\nimport { useHistory, useLocation } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Close } from \"@material-ui/icons\";\nimport { AppBar } from \"components/AppBar\";\nimport { Loader } from \"components/Loader\";\nimport { Alert } from \"components/Alert\";\nimport { Button } from \"components/Button\";\nimport { ProcessPageLayout } from \"components/ProcessPageLayout\";\nimport { closeLabel } from \"constants/buttons/labels\";\nimport { ProcessDescriptionHeader } from \"components/ProcessDescriptionHeader\";\nimport { DetailDescription } from \"features/account/components/DetailDescription\";\nimport { TagsDescription } from \"features/account/components/Tags/TagsDescription\";\nimport { PageContainer } from \"components/PageContainer\";\nimport {\n  closeAlert,\n  getTransactionDetails,\n} from \"features/account/redux/actions\";\nimport { AccountRoutes } from \"features/account/constants/routes\";\nimport { StoreState } from \"redux/state\";\nimport { useStyles } from \"./Details.style\";\nimport \"_assets/css/forms/mainform.scss\";\n\nexport const Details: React.FC = () => {\n  const { state } = useLocation();\n  const { loading, transactionDetails, errorMessage } = useSelector(\n    (state: StoreState) => state.account\n  );\n\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const styles = useStyles();\n\n  const { externalIdentifier, operationType } = state as any;\n\n  React.useEffect(() => {\n    try {\n      if (externalIdentifier && operationType)\n        dispatch(getTransactionDetails(externalIdentifier, operationType));\n    } catch (error: any) {}\n  }, []);\n\n  const onCancelButtonClick = () => {\n    history.replace(AccountRoutes.bankStatement);\n  };\n\n  return (\n    <PageContainer>\n      <ProcessPageLayout\n        appBar={\n          <AppBar\n            homeRoute={AccountRoutes.home}\n            action={\n              <Button\n                size=\"small\"\n                palette=\"secondary\"\n                startIcon={<Close />}\n                onClick={onCancelButtonClick}\n                data-test-id=\"cancel-button\"\n              >\n                {closeLabel}\n              </Button>\n            }\n          />\n        }\n        header={<ProcessDescriptionHeader title=\"Detalhes\" />}\n        main={\n          <React.Fragment>\n            <div className={styles.detailDescription}>\n              <DetailDescription\n                details={transactionDetails}\n                operationType={operationType}\n              />\n            </div>\n            <div className={styles.detailInfoTagsTags}>\n              {transactionDetails?.tags?.map((i) => (\n                <TagsDescription tag={i} key={i} />\n              ))}\n            </div>\n          </React.Fragment>\n        }\n      />\n      <Loader open={loading} />\n      {errorMessage && (\n        <Alert\n          severity=\"error\"\n          title=\"Erro\"\n          message={errorMessage}\n          onClose={() => dispatch(closeAlert())}\n        />\n      )}\n    </PageContainer>\n  );\n};\n","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/account/pages/Receipt/Receipt.tsx",["4982"],"import React from \"react\";\nimport { useHistory, useLocation } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Grid } from \"@material-ui/core\";\nimport { Close } from \"@material-ui/icons\";\nimport { ProcessPageLayout } from \"components/ProcessPageLayout\";\nimport { Divider } from \"components/Divider\";\nimport { ProcessDescriptionHeader } from \"components/ProcessDescriptionHeader\";\nimport { PageContainer } from \"components/PageContainer\";\nimport { AppBar } from \"components/AppBar\";\nimport { Button } from \"components/Button\";\nimport { Loader } from \"components/Loader\";\nimport { Alert } from \"components/Alert\";\nimport { ReceiptDescription } from \"features/account/components/ReceiptDescription\";\nimport { Authentication } from \"features/account/components/Authentication\";\nimport { AccountRoutes } from \"features/account/constants/routes\";\nimport { closeLabel } from \"constants/buttons/labels\";\nimport { StoreState } from \"redux/state\";\nimport {\n  closeAlert,\n  getTransactionReceipt,\n} from \"features/account/redux/actions\";\n\nimport { useStyles } from \"./Receipt.style\";\nimport \"_assets/css/forms/mainform.scss\";\nimport { ButtonWithFloatingIcon } from \"components/ButtonWithFloatingIcon\";\n\nexport const Receipt: React.FC = () => {\n  const { state } = useLocation();\n  const { loading, transactionReceipt, errorMessage } = useSelector(\n    (state: StoreState) => state.account\n  );\n\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const styles = useStyles();\n\n  const showShareButton =\n    (window as any).flutter_inappwebview || navigator.share;\n\n  React.useEffect(() => {\n    try {\n      const { externalIdentifier, operationType } = state as any;\n\n      if (externalIdentifier && operationType)\n        dispatch(getTransactionReceipt(externalIdentifier, operationType));\n    } catch (error: any) {}\n  }, []);\n\n  const onSaveReceipt = () => {\n    const webview = (window as any).flutter_inappwebview;\n    const receiptUrl = transactionReceipt?.receiptUrl;\n\n    if (webview)\n      return webview.callHandler(\"onDownloadTransactionReceipt\", receiptUrl);\n\n    window.open(receiptUrl, \"_blank\");\n  };\n\n  const onShareReceipt = () => {\n    const webview = (window as any).flutter_inappwebview;\n    const receiptUrl = transactionReceipt?.receiptUrl;\n\n    if (webview)\n      return webview.callHandler(\"onShareTransactionReceipt\", receiptUrl);\n\n    navigator.share({\n      title: \"Compartilhar comprovante\",\n      url: receiptUrl,\n    });\n  };\n\n  const onCancelButtonClick = () => {\n    history.replace(AccountRoutes.bankStatement);\n  };\n\n  return (\n    <PageContainer>\n      <ProcessPageLayout\n        appBar={\n          <AppBar\n            homeRoute={AccountRoutes.home}\n            action={\n              <Button\n                palette=\"secondary\"\n                size=\"small\"\n                startIcon={<Close color=\"primary\" />}\n                onClick={onCancelButtonClick}\n                data-test-id=\"cancel-button\"\n              >\n                {closeLabel}\n              </Button>\n            }\n          />\n        }\n        header={<ProcessDescriptionHeader title=\"Comprovante\" />}\n        main={\n          <Grid\n            container\n            direction=\"column\"\n            justify=\"space-between\"\n            className={styles.content}\n          >\n            <Grid item>\n              <ReceiptDescription receipt={transactionReceipt} />\n            </Grid>\n            <Grid className={styles.footer}>\n              <Grid>\n                <Divider />\n                <Grid className={styles.authenticationDetails}>\n                  <Authentication\n                    controlProtocol={transactionReceipt?.controlCode}\n                    internalProtocol={transactionReceipt?.protocolCode}\n                  />\n                </Grid>\n                <Grid className={styles.buttons}>\n                  <ButtonWithFloatingIcon\n                    size=\"large\"\n                    onClick={onSaveReceipt}\n                    data-test-id=\"save-button\"\n                  >\n                    Salvar\n                  </ButtonWithFloatingIcon>\n                  {showShareButton && (\n                    <ButtonWithFloatingIcon\n                      data-test-id=\"share-button\"\n                      size=\"large\"\n                      onClick={onShareReceipt}\n                    >\n                      Compartilhar\n                    </ButtonWithFloatingIcon>\n                  )}\n                </Grid>\n              </Grid>\n            </Grid>\n          </Grid>\n        }\n      />\n      <Loader open={loading} />\n      {errorMessage && (\n        <Alert\n          severity=\"error\"\n          title=\"Erro\"\n          message={errorMessage}\n          onClose={() => dispatch(closeAlert())}\n        />\n      )}\n    </PageContainer>\n  );\n};\n","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/account/pages/StoneBankHome/StoneBankHome.controller.tsx",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/account/pages/Home/Home.controller.tsx",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/user/pages/UserInformation/UserInformation.style.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/account/pages/BankStatement/BankStatement.tsx",["4983","4984","4985"],"import React, { useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { Box, Grid, Typography } from \"@material-ui/core\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { DayTransactions } from \"features/account/components/DayTransactions\";\nimport { AccountRoutes } from \"features/account/constants/routes\";\nimport { StoreState } from \"redux/state\";\nimport { Alert } from \"components/Alert\";\nimport { Loader } from \"components/Loader\";\nimport { SearchField } from \"components/SearchField/SearchField\";\nimport { AppBar } from \"components/AppBar\";\nimport { ButtonWithFloatingIcon } from \"components/ButtonWithFloatingIcon\";\nimport { ProcessPageFooter } from \"components/ProcessPageFooter\";\nimport { closeAlert, getBankStatement } from \"features/account/redux/actions\";\nimport { ProcessDescriptionHeader } from \"components/ProcessDescriptionHeader\";\nimport { AccountBalance } from \"features/account/components/AccountBalance\";\nimport { useStyles } from \"./BankStatement.style\";\nimport { ProcessPageLayout } from \"components/ProcessPageLayout\";\nimport { PageContainer } from \"components/PageContainer\";\nimport { TransactionTypeFilterButton } from \"features/account/components/TransactionTypeFilterButton\";\nimport { TransactionType } from \"features/account/redux/models/transactionType\";\nimport { EmptyList } from \"components/EmptyList\";\nimport { Icon } from \"components/Icon\";\n\nexport const BankStatement: React.FC = () => {\n  const accountState = useSelector((store: StoreState) => store.account);\n  const { loading, bankStatement, errorMessage } = accountState;\n  const [searchValue, setSearchValue] = React.useState(\"\");\n  const [dateFilter, setDateFilter] = React.useState(0);\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const styles = useStyles();\n\n  React.useEffect(() => {\n    dispatch(getBankStatement(dateFilter));\n  }, [dateFilter]);\n\n  React.useEffect(() => {\n    const intersectionObserver = new IntersectionObserver(\n      (entries) => {\n        if (entries.some((entry) => entry.isIntersecting)) {\n          if (!loading) {\n            setDateFilter(dateFilter + 30);\n            window.scroll(0, window.pageYOffset - 110);\n          }\n        }\n      },\n      { threshold: 1 }\n    );\n\n    intersectionObserver.observe(document.querySelector(\"#observer\")!);\n\n    return () => intersectionObserver.disconnect();\n  }, [bankStatement]);\n\n  const displayBankStatement = React.useMemo(() => {\n    const normalize = (text: string) => {\n      return text\n        .replace(/[àáâãäå]/, \"a\")\n        .replace(/[èéêë]/, \"e\")\n        .replace(/[íìïî]/, \"i\")\n        .replace(/[òóôö]/, \"o\")\n        .replace(/[úùûü]/, \"u\")\n        .replace(/[ç]/, \"c\")\n        .toLowerCase();\n    };\n\n    const lowerSearchValue = normalize(searchValue);\n\n    const filteredBankStatement = bankStatement\n      ?.map((bankStatement) => {\n        const filteredTransactions = bankStatement.transactions?.filter(\n          (transaction) => {\n            return (\n              transaction.title.toLowerCase().includes(lowerSearchValue) ||\n              normalize(transaction.title).includes(lowerSearchValue) ||\n              transaction.tags?.forEach((tag) =>\n                tag.toLowerCase().includes(lowerSearchValue)\n              )\n            );\n          }\n        );\n        return {\n          ...bankStatement,\n          transactions: filteredTransactions,\n        };\n      })\n      .filter((bankStatement) => bankStatement.transactions?.length);\n\n    return filteredBankStatement;\n  }, [bankStatement, searchValue]);\n\n  const onSearchValueChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setSearchValue(e.target.value);\n  };\n\n  const onMoreFiltersButtonClick = () => {\n    history.push(AccountRoutes.filter);\n  };\n\n  const onAlertClose = () => {\n    dispatch(closeAlert());\n  };\n\n  const isEmptyList = () => {\n    return !displayBankStatement?.length!;\n  };\n\n  return (\n    <PageContainer>\n      <ProcessPageLayout\n        appBar={<AppBar homeRoute={AccountRoutes.home} />}\n        header={\n          <React.Fragment>\n            <ProcessDescriptionHeader\n              title=\"Extrato\"\n              description=\"Acompanhe a movimentação da sua conta com todos os detalhes de suas movimentações.\"\n            />\n            <Box\n              data-test-id=\"balance\"\n              display=\"flex\"\n              className={styles.balanceSubheader}\n            >\n              <Typography>Seu saldo&nbsp;</Typography>\n              <AccountBalance size=\"small\" variant=\"body1\" show />\n            </Box>\n          </React.Fragment>\n        }\n        main={\n          <React.Fragment>\n            <SearchField\n              placeholder=\"Busque por nome ou Tag\"\n              onChange={onSearchValueChange}\n            />\n            <Grid\n              container\n              justify=\"space-between\"\n              spacing={2}\n              className={styles.filters}\n            >\n              <Grid item>\n                <Typography data-test-id=\"filter\" variant=\"subtitle2\">\n                  Filtrar por:\n                </Typography>\n              </Grid>\n              <Grid item>\n                <Grid container spacing={3}>\n                  <Grid item data-test-id=\"received-button\">\n                    <TransactionTypeFilterButton\n                      transactionType={TransactionType.received}\n                    />\n                  </Grid>\n                  <Grid item data-test-id=\"sent-button\">\n                    <TransactionTypeFilterButton\n                      transactionType={TransactionType.sent}\n                    />\n                  </Grid>\n\n                  <Grid item>\n                    <ButtonWithFloatingIcon\n                      icon={<Icon name=\"filter\" />}\n                      onClick={onMoreFiltersButtonClick}\n                      data-test-id=\"more-filters-button\"\n                    >\n                      Mais filtros\n                    </ButtonWithFloatingIcon>\n                  </Grid>\n                </Grid>\n              </Grid>\n            </Grid>\n            {isEmptyList() ? (\n              <EmptyList />\n            ) : (\n              <Box>\n                {displayBankStatement?.map((dayTransactions, i) => (\n                  <DayTransactions key={i} dayTransactions={dayTransactions} />\n                ))}\n              </Box>\n            )}\n            <Box id=\"observer\" style={{ marginTop: 100 }}></Box>\n          </React.Fragment>\n        }\n        footer={<ProcessPageFooter />}\n        footerPosition=\"fixed\"\n      />\n\n      {errorMessage && (\n        <Alert\n          title=\"Erro\"\n          message={errorMessage}\n          severity={\"error\"}\n          onClose={onAlertClose}\n        />\n      )}\n      <Loader open={loading} />\n    </PageContainer>\n  );\n};\n","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/transference/pages/TransferReceipt/storeAutentication.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/transference/pages/TransferReceipt/TransferReceipt.style.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/transference/pages/TransferReceipt/store.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/onboarding/pages/AccountEmail/AccountEmail.tsx",["4986"],"import { Close, KeyboardArrowRight } from \"@material-ui/icons\";\nimport { AppBar } from \"components/AppBar\";\nimport { Button } from \"components/Button\";\nimport { PageContainer } from \"components/PageContainer\";\nimport { ProcessDescriptionHeader } from \"components/ProcessDescriptionHeader\";\nimport { ProcessPageFooter } from \"components/ProcessPageFooter\";\nimport { ProcessPageLayout } from \"components/ProcessPageLayout\";\nimport { TextField } from \"components/TextField\";\nimport { cancelLabel, nextLabel } from \"constants/buttons/labels\";\nimport { OnboardingRoutes } from \"features/onboarding/constants/routes\";\nimport { updateOnboardingForm } from \"features/onboarding/redux/actions\";\nimport { Fragment, useEffect, useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { useHistory } from \"react-router-dom\";\nimport { validateEmail } from \"_utils/validate\";\nimport { useStyles } from \"./AccountEmail.style\";\n\nexport const AccountEmail: React.FC = () => {\n  const [emailValue, setEmailValue] = useState(\"\");\n  const [error, setError] = useState(false);\n\n  const history = useHistory();\n  const dispatch = useDispatch();\n  const style = useStyles();\n\n  const onChangeEmail = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setEmailValue(event.target.value);\n  };\n\n  const onNextButtonClick = (e: React.FormEvent) => {\n    e.preventDefault();\n    dispatch(updateOnboardingForm({ mail: emailValue }));\n    history.push(OnboardingRoutes.createPasswordForSMS);\n  };\n\n  const onCancelButtonClick = () => {\n    history.go(-7);\n  };\n\n  const validateError = () => {\n    setError(!validateEmail(emailValue));\n  };\n\n  useEffect(() => {\n    validateError();\n  }, [emailValue]);\n\n  return (\n    <PageContainer>\n      <ProcessPageLayout\n        appBar={\n          <AppBar\n            homeRoute={OnboardingRoutes.welcome}\n            action={\n              <Button\n                palette=\"secondary\"\n                size=\"small\"\n                startIcon={<Close color=\"primary\" />}\n                onClick={onCancelButtonClick}\n                data-test-id=\"cancel-button\"\n              >\n                {cancelLabel}\n              </Button>\n            }\n          />\n        }\n        header={\n          <ProcessDescriptionHeader\n            title=\"Abertura de conta\"\n            subtitle=\"Email\"\n            description=\"Se possuir, cadastre seu email. Esse campo é opcional.\"\n          />\n        }\n        main={\n          <Fragment>\n            <TextField\n              label=\"Email (opcional)\"\n              error={emailValue ? error : false}\n              value={emailValue}\n              onChange={onChangeEmail}\n              variant=\"outlined\"\n              placeholder=\"Digite aqui\"\n              data-test-id=\"account-email\"\n            />\n            {emailValue.length > 0 && error && (\n              <span className={style.inputError}>E-mail inválido</span>\n            )}\n          </Fragment>\n        }\n        footer={\n          <ProcessPageFooter\n            primaryButton={\n              <Button\n                endIcon={<KeyboardArrowRight color=\"secondary\" />}\n                onClick={onNextButtonClick}\n                data-test-id=\"next-button\"\n              >\n                {nextLabel}\n              </Button>\n            }\n          />\n        }\n      />\n    </PageContainer>\n  );\n};\n","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/user/pages/ChangeEmail/ChangeEmail.style.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/payment/components/PaymentError/PaymentError.style.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/onboarding/pages/ActivateByCard/CreatePasswordForCard/CreatePasswordForCard.tsx",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/redux/rootReducer.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/onboarding/pages/ActivateByCard/ConfirmPasswordForCard/ConfirmPasswordForCard.tsx",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/onboarding/pages/ActivateByCard/EnterPhoneForCard/EnterPhoneForCard.tsx",["4987"],"import React from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { Close, KeyboardArrowRight } from \"@material-ui/icons\";\nimport { ProcessDescriptionHeader } from \"components/ProcessDescriptionHeader\";\nimport { ProcessPageFooter } from \"components/ProcessPageFooter\";\nimport { AppBar } from \"components/AppBar\";\nimport { Button } from \"components/Button\";\nimport { TextField } from \"components/TextField\";\nimport { useMask } from \"hooks/useMask\";\nimport { maskPhone } from \"_utils/masks/phone\";\nimport { cancelLabel, nextLabel } from \"constants/buttons/labels\";\nimport { ProcessPageLayout } from \"components/ProcessPageLayout\";\nimport { PopUpConfirmToken } from \"components/PopUpConfirmToken\";\nimport { PageContainer } from \"components/PageContainer\";\nimport { AccountRoutes } from \"features/account/constants/routes\";\nimport { OnboardingRoutes } from \"features/onboarding/constants/routes\";\nimport { Box } from \"@material-ui/core\";\nimport { updateOnboardingForm } from \"features/onboarding/redux/actions\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { StoreState } from \"redux/state\";\n\nexport const EnterPhoneForCard: React.FC = () => {\n  const history = useHistory();\n  const dispatch = useDispatch();\n\n  const [phoneNumber, setPhoneNumber] = useMask(maskPhone);\n  const [sentRequest, setSentRequest] = React.useState(false);\n  const [openTokenPopUp, setOpenTokenPopUp] = React.useState(false);\n  const { onboardingForm } = useSelector(\n    (state: StoreState) => state.onboarding\n  );\n\n  React.useEffect(() => {\n    if (sentRequest) history.push(OnboardingRoutes.createPasswordForCard);\n  }, [sentRequest]);\n\n  const onCancelButtonClick = () => {\n    history.replace(OnboardingRoutes.activateAccount);\n  };\n\n  const onNextButtonClick = (e: React.FormEvent) => {\n    e.preventDefault();\n\n    dispatch(updateOnboardingForm({ phoneNumber }));\n    setOpenTokenPopUp(true);\n  };\n\n  const onTokenCloseButtonClick = (tokenIsValid: boolean) => {\n    if (tokenIsValid) {\n      setSentRequest(true);\n    }\n    setOpenTokenPopUp(false);\n  };\n\n  const onPhoneChange = (event: React.ChangeEvent<HTMLInputElement>) =>\n    setPhoneNumber(event.target.value);\n\n  return (\n    <PageContainer>\n      <ProcessPageLayout\n        appBar={\n          <AppBar\n            homeRoute={AccountRoutes.home}\n            action={\n              <Button\n                palette=\"secondary\"\n                size=\"small\"\n                startIcon={<Close color=\"primary\" />}\n                onClick={onCancelButtonClick}\n                data-test-id=\"cancel-button\"\n              >\n                {cancelLabel}\n              </Button>\n            }\n          />\n        }\n        header={\n          <Box>\n            <ProcessDescriptionHeader\n              title=\"Ative sua conta\"\n              subtitle=\"Informe o número de celular cadastrado\"\n              description=\"Você receberá, por mensagem de texto, um código de validação do seu acesso.\"\n            />\n          </Box>\n        }\n        main={\n          <React.Fragment>\n            <TextField\n              label=\"Celular com DDD\"\n              value={phoneNumber}\n              placeholder=\"(XX) X XXXX.XXXX\"\n              onChange={onPhoneChange}\n              maxValue={11}\n              data-test-id=\"change-phone-number\"\n            />\n          </React.Fragment>\n        }\n        footer={\n          <Box>\n            <ProcessPageFooter\n              primaryButton={\n                <Button\n                  disabled={phoneNumber.length !== 16}\n                  endIcon={<KeyboardArrowRight color=\"secondary\" />}\n                  onClick={onNextButtonClick}\n                  data-test-id=\"next-button\"\n                >\n                  {nextLabel}\n                </Button>\n              }\n            />\n            <PopUpConfirmToken\n              open={openTokenPopUp}\n              onClose={onTokenCloseButtonClick}\n              mail={onboardingForm?.mail}\n              taxId={onboardingForm?.taxId}\n              phoneNumber={onboardingForm?.phoneNumber}\n              nextRoute={OnboardingRoutes.createPasswordForCard}\n            />\n          </Box>\n        }\n      />\n    </PageContainer>\n  );\n};\n","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/onboarding/pages/ActivateByCard/InvalidDataForCard/InvalidDataForCard.tsx",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/onboarding/pages/ActivateByCard/EnterBirthDateForCard/EnterBirthDateForCard.tsx",["4988"],"import React from \"react\";\nimport { AccountRoutes } from \"features/account/constants/routes\";\nimport { useDispatch } from \"react-redux\";\nimport { PageContainer } from \"components/PageContainer\";\nimport { LEGAL_AGE, ShortDateFormatter } from \"_translate\";\nimport { TextField } from \"components/TextField\";\nimport { DateButton } from \"components/DateButton/DateButton\";\nimport { useHistory } from \"react-router-dom\";\nimport { Close, KeyboardArrowRight } from \"@material-ui/icons\";\nimport { ProcessDescriptionHeader } from \"components/ProcessDescriptionHeader\";\nimport { ProcessPageFooter } from \"components/ProcessPageFooter\";\nimport { AppBar } from \"components/AppBar\";\nimport { Button } from \"components/Button\";\nimport { cancelLabel, nextLabel } from \"constants/buttons/labels\";\nimport { OnboardingRoutes } from \"features/onboarding/constants/routes\";\nimport { ProcessPageLayout } from \"components/ProcessPageLayout\";\nimport { Grid } from \"@material-ui/core\";\nimport { useStyles } from \"./EnterBirthDateForCard.style\";\nimport { updateOnboardingForm } from \"features/onboarding/redux/actions\";\n\nexport const EnterBirthDateForCard: React.FC = () => {\n  const styles = useStyles();\n  const history = useHistory();\n  const dispatch = useDispatch();\n\n  const [birthDate, setBirthDate] = React.useState<Date | null>(null);\n  const [displayDate, setDisplayDate] = React.useState(\"\");\n  const [maxDate, setMaxDate] = React.useState<Date>(new Date());\n  const [openDatePicker, setOpenDatePicker] = React.useState(false);\n  const [disableNextButton, setDisableNextButton] = React.useState(false);\n\n  const isLegalAge = React.useMemo(() => {\n    const today = new Date();\n    const age = today.getFullYear() - (birthDate?.getFullYear() ?? 0);\n\n    if (\n      (birthDate?.getMonth() ?? 0) >= today.getMonth() &&\n      (birthDate?.getDate() ?? 0) > today.getDate()\n    )\n      return age - 1 >= LEGAL_AGE;\n\n    return age >= LEGAL_AGE;\n  }, [birthDate]);\n\n  React.useEffect(() => {\n    setDisplayDate(_getDisplayDate());\n    const today = new Date();\n    setMaxDate(today);\n  }, [birthDate]);\n\n  React.useEffect(() => {\n    if (displayDate.length === 0) setDisableNextButton(true);\n    else setDisableNextButton(false);\n  }, [displayDate.length]);\n\n  const _getDisplayDate = () => {\n    if (!birthDate) return displayDate;\n    else return ShortDateFormatter.format(birthDate);\n  };\n\n  const onSchedulingButtonClick = () => {\n    setOpenDatePicker(true);\n  };\n\n  const onDatePickerClose = () => {\n    setOpenDatePicker(false);\n  };\n\n  const onDateChange = (date: Date | null) => {\n    setBirthDate(date);\n  };\n\n  const onCancelButtonClick = () => {\n    history.replace(OnboardingRoutes.activateAccount);\n  };\n\n  const onSubmit = (e: React.FormEvent) => {\n    e.preventDefault();\n\n    dispatch(\n      updateOnboardingForm({\n        birthDate: birthDate!,\n      })\n    );\n    history.push(OnboardingRoutes.enterPhoneForCard);\n  };\n\n  return (\n    <PageContainer>\n      <ProcessPageLayout\n        appBar={\n          <AppBar\n            homeRoute={AccountRoutes.home}\n            action={\n              <Button\n                palette=\"secondary\"\n                size=\"small\"\n                startIcon={<Close color=\"primary\" />}\n                onClick={onCancelButtonClick}\n                data-test-id=\"cancel-button\"\n              >\n                {cancelLabel}\n              </Button>\n            }\n          />\n        }\n        header={\n          <ProcessDescriptionHeader\n            title=\"Ative Sua Conta\"\n            subtitle=\"Qual a sua data de nascimento ?\"\n          />\n        }\n        main={\n          <Grid container direction=\"column\">\n            <Grid item>\n              <TextField\n                label=\"Quando você nasceu?\"\n                placeholder={\"Ex: 10/05/1972\"}\n                value={displayDate}\n                data-test-id=\"display-date\"\n              />\n            </Grid>\n            <Grid item>\n              <Grid\n                container\n                alignItems=\"center\"\n                className={styles.scheduleButton}\n                data-test-id=\"schedule-button\"\n              >\n                <Grid item>\n                  <DateButton\n                    open={openDatePicker}\n                    value={birthDate}\n                    maxDate={maxDate}\n                    onClick={onSchedulingButtonClick}\n                    onDateSelection={onDateChange}\n                    onClose={onDatePickerClose}\n                  />\n                </Grid>\n              </Grid>\n            </Grid>\n          </Grid>\n        }\n        footer={\n          <ProcessPageFooter\n            primaryButton={\n              <Button\n                endIcon={<KeyboardArrowRight color=\"secondary\" />}\n                onClick={onSubmit}\n                disabled={disableNextButton || !isLegalAge}\n                data-test-id=\"next-button\"\n              >\n                {nextLabel}\n              </Button>\n            }\n          />\n        }\n      />\n    </PageContainer>\n  );\n};\n","/home/danielvitor/Documentos/Develop/stonebank_front/src/components/PopUpConfirmToken/PopUpConfirmToken.tsx",["4989","4990","4991"],"import React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { useHistory } from \"react-router-dom\";\nimport { Box, Drawer, Grid, Typography } from \"@material-ui/core\";\nimport { Close } from \"@material-ui/icons\";\nimport { Alert } from \"components/Alert\";\nimport { Button } from \"components/Button\";\nimport { ButtonWithFloatingIcon } from \"components/ButtonWithFloatingIcon\";\nimport { Loader } from \"components/Loader\";\nimport { PageContainer } from \"components/PageContainer\";\nimport { getBaseRequestData } from \"_utils/http\";\nimport { StoreState } from \"redux/state\";\nimport { HttpClient } from \"_config/http\";\nimport { ApiResponse } from \"_config/api\";\nimport { useStyles } from \"./PopUpConfirmToken.style\";\nimport { OtpInput } from \"components/OtpInput\";\nimport { Icon } from \"components/Icon\";\n\ninterface PopUpConfirmTokenSheetState {\n  loading: boolean;\n  message?: string;\n  success?: boolean;\n  validatedToken?: boolean;\n}\n\ninterface PopUpConfirmTokenSheetProps {\n  nextRoute?: string;\n  phoneNumber?: string;\n  mail?: string;\n  taxId?: string;\n  open: boolean;\n  onClose: Function | ((tokenIsValid: boolean) => void);\n}\n\nexport const PopUpConfirmToken: React.FC<PopUpConfirmTokenSheetProps> = ({\n  nextRoute,\n  phoneNumber,\n  taxId,\n  mail,\n  open,\n  onClose,\n}) => {\n  const [{ loading, success, validatedToken, message }, setState] =\n    React.useState<PopUpConfirmTokenSheetState>({\n      loading: false,\n    });\n  const [token, setToken] = React.useState(\"\");\n  const [disableConfirmButton, setDisableConfirmButton] = React.useState(true);\n  const [requestToken] = useSelector((state: StoreState) => {\n    return [state.auth.token];\n  });\n  const history = useHistory();\n  const styles = useStyles();\n\n  React.useEffect(() => {\n    if (open) generateToken();\n  }, [open]);\n\n  React.useEffect(() => {\n    if (loading) setDisableConfirmButton(true);\n    if (token.length === 6 && !loading) setDisableConfirmButton(false);\n    else setDisableConfirmButton(true);\n  }, [history, loading, nextRoute, token.length]);\n\n  React.useEffect(() => {\n    if (validatedToken) onClose(validatedToken);\n  }, [validatedToken]);\n\n  const generateToken = async () => {\n    setState({ loading: true });\n\n    try {\n      const { url, defaultHeaders } = await getBaseRequestData(\n        \"/authorizationToken/GenerateUnauthenticatedAuthorizationToken\"\n      );\n      const data = { phoneNumber, taxId, mail };\n\n      await HttpClient.post(url, data, {\n        headers: {\n          ...defaultHeaders,\n          Authorization: `Bearer ${requestToken}`,\n        },\n      });\n      setState({\n        loading: false,\n        success: true,\n        message: \"Token gerado com sucesso, por favor aguarde o envio.\",\n      });\n    } catch (error: any) {\n      let response: ApiResponse | undefined;\n      if (error.response) response = error.response?.data;\n      setState({\n        loading: false,\n        message: response?.message ?? error.message,\n      });\n    }\n  };\n\n  const onTokenChange = (newValue: string) => {\n    setToken(newValue);\n  };\n\n  const onCloseButtonClick = () => {\n    onClose(validatedToken ?? false);\n  };\n\n  const onResendTokenButtonClick = () => {\n    generateToken();\n  };\n\n  const onConfirmButtonClick = async () => {\n    setState({ loading: true });\n    try {\n      const { url, defaultHeaders } = await getBaseRequestData(\n        \"/authorizationToken/ValidateUnauthenticatedAuthorizationToken\"\n      );\n      const data = {\n        code: token,\n        taxId,\n      };\n      await HttpClient.post(url, data, {\n        headers: {\n          ...defaultHeaders,\n          Authorization: `Bearer ${requestToken}`,\n        },\n      });\n      setState({\n        loading: false,\n        success: true,\n        validatedToken: true,\n        message: undefined,\n      });\n    } catch (error: any) {\n      let response: ApiResponse | undefined;\n      if (error.response) response = error.response?.data;\n      setState({\n        loading: false,\n        validatedToken: false,\n        message: \"Não foi possível validar seu token.\",\n      });\n    }\n  };\n\n  const onShowSucessMessageClose = () => {\n    if (nextRoute) history.push(nextRoute);\n  };\n\n  return (\n    <React.Fragment>\n      <Drawer\n        className={styles.drawer}\n        anchor=\"bottom\"\n        elevation={0}\n        open={open}\n        onClose={() => onClose(validatedToken ?? false)}\n        data-test-id=\"drawer\"\n      >\n        <PageContainer>\n          <Box className={styles.content}>\n            <Box className={styles.closeButton}>\n              <Button\n                size=\"small\"\n                palette=\"secondary\"\n                onClick={onCloseButtonClick}\n                startIcon={<Close color=\"primary\" />}\n                data-test-id=\"close-button\"\n              >\n                Fechar\n              </Button>\n            </Box>\n            <Grid container direction=\"column\" spacing={4}>\n              <Grid item data-test-id=\"input-token\">\n                <Typography variant=\"h6\" gutterBottom>\n                  Digite seu token\n                </Typography>\n                <Typography variant=\"body2\" className={styles.subtitle}>\n                  Está tudo certo? Agora é só inserir seu token para confirmar a\n                  operação.\n                </Typography>\n              </Grid>\n              <Grid item className={styles.inputRow}>\n                <OtpInput\n                  className={styles.OtpInput}\n                  value={token}\n                  onChange={onTokenChange}\n                  isInputSecure={true}\n                  numInputs={6}\n                  data-test-id=\"change-token\"\n                />\n              </Grid>\n              <Grid item className={styles.buttonsRow}>\n                <Grid container justify=\"center\" spacing={4}>\n                  <Grid item>\n                    <ButtonWithFloatingIcon\n                      onClick={onResendTokenButtonClick}\n                      data-test-id=\"resend-token\"\n                    >\n                      Reenviar Token\n                    </ButtonWithFloatingIcon>\n                  </Grid>\n                  <Grid item>\n                    <ButtonWithFloatingIcon\n                      icon={<Icon name={\"confirm\"} />}\n                      disabled={disableConfirmButton}\n                      onClick={onConfirmButtonClick}\n                      data-test-id=\"confirm-button\"\n                    >\n                      Confirmar\n                    </ButtonWithFloatingIcon>\n                  </Grid>\n                </Grid>\n              </Grid>\n            </Grid>\n          </Box>\n        </PageContainer>\n      </Drawer>\n      <Loader open={loading} />\n      {message && (\n        <Alert\n          title={success ? \"Sucesso\" : \"Erro\"}\n          message={message}\n          severity={success ? \"success\" : \"error\"}\n          onClose={validatedToken ? onShowSucessMessageClose : undefined}\n        />\n      )}\n    </React.Fragment>\n  );\n};\n","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/account/components/BadgeChangeProfileButton/BadgeChangeProfileButton.tsx",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/account/components/EditPageHeader/EditPageHeader.tsx",["4992"],"import React from \"react\";\nimport { Box, CardContent, Toolbar } from \"@material-ui/core\";\n//import { CancelButton } from \"components/CancelButton\";\nimport { ProcessDescriptionHeader } from \"components/ProcessDescriptionHeader\";\n\nimport { useStyle } from \"./EditPageHeader.style\";\nimport { AccountRoutes } from \"features/account/constants/routes\";\n\nexport const EditPageHeader: React.FC = () => {\n  const style = useStyle();\n\n  return (\n    <Box className={style.mainHeader}>\n      <CardContent>\n        <Toolbar className={style.toolbar}>\n          <ProcessDescriptionHeader\n            title=\"Editar Conta\"\n            data-test-id=\"edit-page-button\"\n          />\n          <div className={style.button}>\n            {/* <CancelButton redirectRoute={AccountRoutes.home} /> */}\n          </div>\n        </Toolbar>\n      </CardContent>\n    </Box>\n  );\n};\n","/home/danielvitor/Documentos/Develop/stonebank_front/src/components/BadgeButton/BadgeButton.tsx",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/transference/pages/FavoredAccountSelection/FavoredAccountSelection.style.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/transference/pages/TransferDescription/TransferDescription.style.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/transference/pages/ScheduleTransfer/ScheduleTransfer.style.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/account/pages/BankStatementFilter/BankStatementFilter.style.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/account/pages/Details/Details.style.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/account/pages/Receipt/Receipt.style.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/tags/redux/state.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/account/redux/state.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/account/pages/BankStatement/BankStatement.style.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/onboarding/pages/AccountEmail/AccountEmail.style.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/components/DetailTransferDescription/index.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/transference/components/TransactionAuthentication/index.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/transference/components/ReceiptSummary/index.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/account/pages/StoneBankHome/StoneBankHome.view.tsx",["4993","4994","4995"],"import { Box, Container, Grid, Typography } from \"@material-ui/core\";\nimport { GitHub, PlusOne, WhatsApp } from \"@material-ui/icons\";\nimport { PageContainer } from \"components\";\nimport { Icon } from \"components/Icon\";\nimport { StoneBankHomePageHeader } from \"features/account/components/StoneBankHomePageHeader\";\nimport { useStyles } from \"./StoneBankHome.style\";\n\nexport const StoneBankHomeView: React.FC = () => {\n  const styles = useStyles();\n\n  return (\n    <PageContainer className={styles.pageContainer}>\n      <StoneBankHomePageHeader className={styles.header} />\n      <Box style={{ padding: '5px 15px' }}>\n        <Typography className={styles.title}>\n          {'Favoritos'}\n        </Typography>\n        <Grid container style={{ padding: '7px 30px', justifyContent: 'space-between', flexDirection: 'row' }}>\n          <Grid container style={{ flexDirection: 'column', width: '70px' }}>\n            <Grid item className={styles.functions}>\n              <Icon name=\"pixImage\" />\n            </Grid>\n            <Typography className={styles.functionName}>\n              {'Área pix'}\n            </Typography>\n          </Grid>\n          <Grid container style={{ flexDirection: 'column', width: '70px' }}>\n            <Grid item className={styles.functions}>\n              <Icon name=\"invest\" />\n            </Grid>\n            <Typography className={styles.functionName}>\n              {'Investimento'}\n            </Typography>\n          </Grid>\n          <Grid container style={{ flexDirection: 'column', width: '70px' }}>\n            <Grid item className={styles.functions}>\n              <PlusOne fontSize=\"large\" className={styles.functionIcon} />\n            </Grid>\n            <Typography className={styles.functionName}>\n              {''}\n            </Typography>\n          </Grid>\n          <Grid container style={{ flexDirection: 'column', width: '70px' }}>\n            <Grid item className={styles.functions}>\n              <PlusOne fontSize=\"large\" className={styles.functionIcon} />\n            </Grid>\n            <Typography className={styles.functionName}>\n              {''}\n            </Typography>\n          </Grid>\n        </Grid>\n        <Box style={{ padding: '5px 0px', marginTop: '10px', borderRadius: '8px', boxShadow: '0px 4px 4px rgba(0, 0, 0, 0.25)' }}>\n          <Box style={{ textAlign: 'center', color: '#000' }}>\n            <Typography>{'Serviços'}</Typography>\n            <Grid container style={{ padding: '7px 30px', justifyContent: 'space-between', flexDirection: 'row' }}>\n              <Grid container style={{ flexDirection: 'column', width: '75px' }}>\n                <Grid item className={styles.functions2}>\n                  <Icon name=\"smartphone\"/>\n                </Grid>\n                <Typography className={styles.functionName}>\n                  {'Recarga'}\n                </Typography>\n              </Grid>\n              <Grid container style={{ flexDirection: 'column', width: '75px' }}>\n                <Grid item className={styles.functions2}>\n                  <Icon name=\"card\"/>\n                </Grid>\n                <Typography className={styles.functionName}>\n                  {'Meus cartões'}\n                </Typography>\n              </Grid>\n              <Grid container style={{ flexDirection: 'column', width: '75px' }}>\n                <Grid item className={styles.functions2}>\n                  <Icon name=\"transf\"/>\n                </Grid>\n                <Typography className={styles.functionName}>\n                  {'Transferência'}\n                </Typography>\n              </Grid>\n            </Grid>\n            <Grid container style={{ padding: '7px 30px', justifyContent: 'space-between', flexDirection: 'row' }}>\n              <Grid container style={{ flexDirection: 'column', width: '75px' }}>\n                <Grid item className={styles.functions2}>\n                  <PlusOne fontSize=\"large\" className={styles.functionIcon} />\n                </Grid>\n                <Typography className={styles.functionName}>\n                  {''}\n                </Typography>\n              </Grid>\n              <Grid container style={{ flexDirection: 'column', width: '75px' }}>\n                <Grid item className={styles.functions2}>\n                  <PlusOne fontSize=\"large\" className={styles.functionIcon} />\n                </Grid>\n                <Typography className={styles.functionName}>\n                  {''}\n                </Typography>\n              </Grid>\n              <Grid container style={{ flexDirection: 'column', width: '75px' }}>\n                <Grid item className={styles.functions2}>\n                  <PlusOne fontSize=\"large\" className={styles.functionIcon} />\n                </Grid>\n                <Typography className={styles.functionName}>\n                  {''}\n                </Typography>\n              </Grid>\n            </Grid>\n          </Box>\n        </Box>\n        <Box style={{ padding: '5px 15px', marginTop: '30px', backgroundColor: '#D9D9D9', borderRadius: '8px', boxShadow: '0px 4px 4px rgba(0, 0, 0, 0.25)', height: '101px' }}>\n          <Grid container justifyContent='center' style={{ flexDirection: 'row' }}>\n            <Typography style={{ color: '#000', textAlign: 'center', fontSize: '13px', width: '100%' }}>\n              {'Cartão de Crédito'}\n            </Typography>\n            <Grid container style={{ flexDirection: 'row', width: '100%', justifyContent: 'space-between' }}>\n              <Grid item style={{ flexDirection: 'row' }}>\n                <Typography style={{ color: '#000', textAlign: 'left', fontSize: '12px' }}>\n                  {'Fatura atual'}\n                </Typography>\n                <Typography style={{ color: '#000', textAlign: 'left', fontSize: '20px' }}>\n                  {'R$ 700,00'}\n                </Typography>\n                <Typography style={{ color: '#000', textAlign: 'left', fontSize: '12px' }}>\n                  {'Limite disponível: R$ 300,00'}\n                </Typography>\n              </Grid>\n              <Grid item style={{ margin: '0', alignSelf: 'center' }}>\n                <Icon name=\"arrowRight2\"/>\n              </Grid>\n            </Grid>\n          </Grid>\n        </Box>\n      </Box>\n    </PageContainer>\n  );\n};\n","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/account/pages/Home/Home.view.tsx",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/onboarding/pages/ActivateByCard/CreatePasswordForCard/CreatePasswordForCard.style.tsx",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/onboarding/pages/ActivateByCard/ConfirmPasswordForCard/ConfirmPasswordForCard.style.tsx",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/onboarding/pages/ActivateByCard/InvalidDataForCard/InvalidDataForCard.style.tsx",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/onboarding/pages/ActivateByCard/EnterBirthDateForCard/EnterBirthDateForCard.style.tsx",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/account/components/BadgeChangeProfileButton/BadgeChangeProfileButton.style.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/account/components/EditPageHeader/EditPageHeader.style.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/onboarding/pages/ActivateByCard/EnterDigitsForCard/index.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/onboarding/pages/ActivateByCard/EnterIdentifierForCard/index.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/onboarding/pages/ActivateByCard/EnterTaxPayerForCard/index.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/onboarding/pages/ActivateBySMS/EnterTaxPayerForSMS/index.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/onboarding/pages/ActivateBySMS/ConfirmPasswordForSMS/index.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/onboarding/pages/ActivateBySMS/CreatePasswordForSMS/index.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/onboarding/pages/ActivateBySMS/ActivationTokenForSMS/index.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/onboarding/pages/AccountActivationCompletedForCard/index.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/onboarding/pages/AccountActivationCompleted/index.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/onboarding/pages/ActivateAccount/index.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/onboarding/pages/Terms/index.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/onboarding/pages/Welcome/index.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/components/PopUpConfirmToken/PopUpConfirmToken.style.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/user/components/PasswordField/index.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/authentication/pages/SignIn/index.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/account/redux/models/transactionType.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/account/pages/StoneBankHome/StoneBankHome.style.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/account/pages/Home/Home.style.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/user/components/Account/index.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/pix/redux/reducer.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/schedulePayments/redux/reducer.ts",["4996"],"import {\n  FutureTransactionsAction,\n  FutureTransactionsActions,\n} from \"./actionTypes\";\nimport {\n  FailFutureTransactionsState,\n  FutureTransactionsState,\n  InitialFutureTransactionsState,\n  LoadingFutureTransactionsState,\n  SuccessCancelTransactionsState,\n  SuccessFutureTransactionsState,\n  UpdateTransactions,\n} from \"./state\";\n\nconst initialState: FutureTransactionsState =\n  new InitialFutureTransactionsState();\n\nexport const futureTransactionsReducer = (\n  state = initialState,\n  action: FutureTransactionsAction\n) => {\n  switch (action.type) {\n    case FutureTransactionsActions.CANCEL_TRANSACTIONS_START:\n    case FutureTransactionsActions.FIND_FUTURE_TRANSACTIONS_LIST_START:\n      return new LoadingFutureTransactionsState(\n        state.futureTransactions,\n        state.futureTransaction\n      );\n\n    case FutureTransactionsActions.FIND_FUTURE_TRANSACTIONS_LIST_START:\n      return new LoadingFutureTransactionsState(\n        state.futureTransactions,\n        state.futureTransaction\n      );\n    case FutureTransactionsActions.FIND_FUTURE_TRANSACTIONS_LIST_SUCCESS:\n      return new SuccessFutureTransactionsState(\n        action.payload,\n        state.futureTransaction\n      );\n\n    case FutureTransactionsActions.CANCEL_TRANSACTIONS_SUCCESS:\n      return new SuccessCancelTransactionsState({\n        ...state.futureTransaction,\n        success: action.payload,\n      });\n\n    case FutureTransactionsActions.UPDATE_TRANSACTIONS:\n      return new UpdateTransactions({\n        ...action.payload!,\n      });\n\n    case FutureTransactionsActions.CANCEL_TRANSACTIONS_FAIL:\n    case FutureTransactionsActions.FIND_FUTURE_TRANSACTION_LIST_FAIL:\n      return new FailFutureTransactionsState(action.payload);\n\n    case FutureTransactionsActions.SELECT_TRANSACTIONS:\n      return new SuccessFutureTransactionsState(\n        state.futureTransactions!,\n        action.payload\n      );\n\n    default:\n      return state;\n  }\n};\n","/home/danielvitor/Documentos/Develop/stonebank_front/src/components/DetailTransferDescription/DetailTransferDescription.tsx",["4997"],"import React from \"react\";\nimport { ConfigContext } from \"_config\";\nimport { CurrencyFormatter, DateFormatter } from \"_translate\";\nimport { useStyles } from \"./DetailTransferDescription.style\";\nimport { TransactionDetail } from \"components/TransactionDetail\";\nimport { TransactionDetailName } from \"components/TransactionDetailName\";\nimport { TransactionDetailValue } from \"components/TransactionDetailValue\";\nimport { Typography } from \"@material-ui/core\";\n\ninterface DetailTransferDescriptionProps {\n  value: number;\n  accountName: string;\n  date?: Date;\n  description?: string;\n  tags?: React.ReactNode;\n}\n\nexport const DetailTransferDescription: React.FC<\n  DetailTransferDescriptionProps\n> = ({ value, accountName, date, description }) => {\n  const { company } = React.useContext(ConfigContext);\n\n  const styles = useStyles();\n\n  return (\n    <React.Fragment data-test-id=\"detail-transfer-content\">\n      <TransactionDetail className={styles.detailTransferContent}>\n        <TransactionDetailName>Transferência no valor de</TransactionDetailName>\n        <TransactionDetailValue>\n          <strong>{CurrencyFormatter.format(value)}</strong>\n        </TransactionDetailValue>\n        <TransactionDetailName>\n          para a conta {company.name} de\n        </TransactionDetailName>\n        <TransactionDetailValue>\n          <strong>{accountName}</strong>\n        </TransactionDetailValue>\n        <TransactionDetailName>\n          <div> no dia </div>\n        </TransactionDetailName>\n        <TransactionDetailValue>\n          <strong>{DateFormatter.format(date)}</strong>\n        </TransactionDetailValue>\n        <TransactionDetailName>\n          <div> sua descrição foi </div>\n        </TransactionDetailName>\n        <TransactionDetailValue>\n          <strong> {description} </strong>\n        </TransactionDetailValue>\n      </TransactionDetail>\n    </React.Fragment>\n  );\n};\n","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/smsTransfer/redux/reducer.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/account/pages/AllAccounts/AllAccounts.style.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/account/pages/AccountSettings/AccountSettings.style.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/account/components/Tags/TagsDescription.tsx",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/transference/components/ReceiptSummary/ReceiptSummary.tsx",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/transference/components/TransactionAuthentication/TransactionAuthentication.tsx",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/onboarding/pages/ActivateBySMS/EnterTaxPayerForSMS/EnterTaxPayerForSMS.tsx",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/onboarding/pages/ActivateBySMS/ActivationTokenForSMS/ActivationTokenForSMS.tsx",["4998"],"import React from \"react\";\nimport { Close, KeyboardArrowRight } from \"@material-ui/icons\";\nimport { useHistory } from \"react-router-dom\";\nimport { Grid } from \"@material-ui/core\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { ProcessDescriptionHeader } from \"components/ProcessDescriptionHeader\";\nimport { ProcessPageFooter } from \"components/ProcessPageFooter\";\nimport { AppBar } from \"components/AppBar\";\nimport { Button } from \"components/Button\";\nimport { TokenInput } from \"features/onboarding/components/inputs/TokenInput\";\nimport { cancelLabel, nextLabel } from \"constants/buttons/labels\";\nimport { OnboardingRoutes } from \"features/onboarding/constants/routes\";\nimport { ProcessPageLayout } from \"components/ProcessPageLayout\";\nimport {\n  closeAlert,\n  validateActivationToken,\n} from \"features/onboarding/redux/actions\";\nimport { StoreState } from \"redux/state\";\nimport { Loader } from \"components/Loader\";\nimport { Alert } from \"components/Alert\";\nimport { PageContainer } from \"components/PageContainer\";\nimport { Icon } from \"components/Icon\";\n\ninterface ResendTokenProps {\n  tokenRoute: string;\n}\n\nexport const ActivationToken: React.FC<ResendTokenProps> = ({\n  tokenRoute,\n}: ResendTokenProps) => {\n  const [token, setToken] = React.useState(\"\");\n  const { onboardingForm, loading, errorMessage } = useSelector(\n    (state: StoreState) => state.onboarding\n  );\n  const dispatch = useDispatch();\n  const history = useHistory();\n\n  React.useEffect(() => {\n    if (onboardingForm?.phoneNumber)\n      history.push(OnboardingRoutes.createNameForSMS);\n  }, [history, onboardingForm]);\n\n  const onCancelButtonClick = () => {\n    history.go(-1);\n  };\n\n  const onSubmit = (e: React.FormEvent) => {\n    e.preventDefault();\n    if (token.length === 6) dispatch(validateActivationToken(token));\n  };\n\n  const onAlertClose = () => {\n    dispatch(closeAlert());\n  };\n\n  return (\n    <PageContainer>\n      <ProcessPageLayout\n        appBar={\n          <AppBar\n            homeRoute={OnboardingRoutes.welcome}\n            action={\n              <Button\n                palette=\"secondary\"\n                size=\"small\"\n                startIcon={<Close color=\"primary\" />}\n                onClick={onCancelButtonClick}\n                data-test-id=\"cancel-button\"\n              >\n                {cancelLabel}\n              </Button>\n            }\n          />\n        }\n        header={\n          <ProcessDescriptionHeader\n            title=\"Ative sua Conta\"\n            subtitle=\"Código de Validação\"\n            description=\"Informe o Token que você recebeu por SMS para continuar o cadastro.\"\n          />\n        }\n        main={\n          <React.Fragment>\n            <Grid direction=\"column\" alignItems=\"center\">\n              <TokenInput onChange={setToken} value={token} />\n            </Grid>\n          </React.Fragment>\n        }\n        footer={\n          <ProcessPageFooter\n            primaryButton={\n              <Button\n                disabled={token.length !== 6}\n                endIcon={<KeyboardArrowRight color=\"secondary\" />}\n                onClick={onSubmit}\n                data-test-id=\"next-button\"\n              >\n                {nextLabel}\n              </Button>\n            }\n          />\n        }\n      />\n      <Loader open={loading} />\n      {errorMessage && (\n        <Alert\n          title=\"Erro\"\n          message={errorMessage}\n          severity={\"error\"}\n          onClose={onAlertClose}\n        />\n      )}\n    </PageContainer>\n  );\n};\n","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/onboarding/pages/ActivateBySMS/CreatePasswordForSMS/CreatePasswordForSMS.tsx",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/onboarding/pages/ActivateBySMS/ConfirmPasswordForSMS/ConfirmPasswordForSMS.tsx",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/onboarding/pages/AccountActivationCompletedForCard/AccountActivationCompleted.tsx",["4999"],"import React from \"react\";\nimport { Box, Grid, Typography } from \"@material-ui/core\";\nimport { AccessAccountButton } from \"features/onboarding/components/buttons/AccessAccountButton\";\nimport { createAccount } from \"features/onboarding/redux/actions\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { StoreState } from \"redux/state\";\nimport { useStyles } from \"./AccountActivationCompleted.style\";\nimport { PageContainer } from \"components/PageContainer\";\nimport { Icon } from \"components/Icon\";\n\ninterface AccountActivationCompletedProps {\n  activeTwoButtons: boolean;\n}\n\nexport const AccountActivationCompletedForCard: React.FC<\n  AccountActivationCompletedProps\n> = ({ activeTwoButtons }: AccountActivationCompletedProps) => {\n  const state = useSelector((s: StoreState) => s.onboarding);\n  const dispatch = useDispatch();\n  const style = useStyles();\n\n  React.useEffect(() => {\n    if (state.onboardingForm) dispatch(createAccount());\n  }, [state.onboardingForm]);\n\n  return (\n    <PageContainer className={style.container}>\n      <Grid container direction=\"column\" alignItems=\"center\">\n        <Box data-test-id=\"account-activation\">\n          <Typography variant=\"h6\" className=\"title\">\n            Concluído\n          </Typography>\n          <Box className={style.img}>\n            <Icon name=\"accountActivationCompleted\" />\n          </Box>\n          <Box className={style.welcomeAlignText}>\n            <Typography\n              variant=\"caption\"\n              display=\"block\"\n              gutterBottom\n              data-test-id=\"onboarding-name\"\n            >\n              Seja Bem vindo,&nbsp;\n              <strong>{state.onboardingForm?.name?.split(\" \")[0]}!</strong>\n            </Typography>\n            <Typography\n              variant=\"caption\"\n              align=\"center\"\n              display=\"block\"\n              gutterBottom\n            >\n              Cadastro completo com sucesso!\n            </Typography>\n            <Typography\n              variant=\"caption\"\n              align=\"center\"\n              display=\"block\"\n              gutterBottom\n            >\n              Sua conta será ativada em instantes!\n            </Typography>\n            <AccessAccountButton />\n          </Box>\n        </Box>\n      </Grid>\n    </PageContainer>\n  );\n};\n","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/onboarding/pages/AccountActivationCompleted/AccountActivationCompleted.tsx",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/onboarding/pages/ActivateByCard/EnterTaxPayerForCard/EnterTaxPayerForCard.tsx",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/onboarding/pages/ActivateByCard/EnterIdentifierForCard/EnterIdentifierForCard.tsx",["5000"],"import React from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { useHistory } from \"react-router-dom\";\nimport { Close, KeyboardArrowRight } from \"@material-ui/icons\";\nimport { ProcessDescriptionHeader } from \"components/ProcessDescriptionHeader\";\nimport { AppBar } from \"components/AppBar\";\nimport { Button } from \"components/Button\";\nimport { ProcessPageFooter } from \"components/ProcessPageFooter\";\nimport { useMask } from \"hooks/useMask\";\nimport { maskIdCard } from \"_utils/masks/idCard\";\nimport { cancelLabel, nextLabel } from \"constants/buttons/labels\";\nimport { OnboardingRoutes } from \"features/onboarding/constants/routes\";\nimport { ProcessPageLayout } from \"components/ProcessPageLayout\";\nimport { PageContainer } from \"components/PageContainer\";\nimport { AccountRoutes } from \"features/account/constants/routes\";\nimport { Box } from \"@material-ui/core\";\nimport { ReadQrCodeButton } from \"features/card/components/ReadQrCodeButton\";\nimport { TextField } from \"components/TextField\";\nimport { updateValidateCardForm } from \"features/onboarding/redux/actions\";\n\nexport const EnterIdentifierForCard: React.FC = () => {\n  const dispatch = useDispatch();\n  const history = useHistory();\n\n  const [identifierCard, setIdentifierCard] = useMask(maskIdCard);\n  const [disableNextButton, setDisableNextButton] = React.useState(false);\n\n  React.useEffect(() => {\n    identifierCard.length !== 9\n      ? setDisableNextButton(true)\n      : setDisableNextButton(false);\n  }, [identifierCard.length]);\n\n  const onSubmit = (e: React.FormEvent) => {\n    e.preventDefault();\n\n    dispatch(updateValidateCardForm({ identifierCard }));\n    history.push(OnboardingRoutes.enterDigitsForCard);\n  };\n\n  const onIdentifierCardChange = (event: React.ChangeEvent<HTMLInputElement>) =>\n    setIdentifierCard(event.target.value);\n\n  const onCancelButtonClick = () => {\n    history.replace(OnboardingRoutes.activateAccount);\n  };\n\n  return (\n    <PageContainer>\n      <ProcessPageLayout\n        appBar={\n          <AppBar\n            homeRoute={AccountRoutes.home}\n            action={\n              <Button\n                palette=\"secondary\"\n                size=\"small\"\n                startIcon={<Close color=\"primary\" />}\n                onClick={onCancelButtonClick}\n                data-test-id=\"cancel-button\"\n              >\n                {cancelLabel}\n              </Button>\n            }\n          />\n        }\n        header={\n          <Box>\n            <ProcessDescriptionHeader\n              title=\"Ative sua conta\"\n              subtitle=\"Identificar seu cartão\"\n              description=\"Insira o código de identificação de 9 dígitos impresso em seu cartão.\"\n            />\n          </Box>\n        }\n        main={\n          <React.Fragment>\n            <TextField\n              label=\"Insira o ID CARD de 9 dígitos\"\n              value={identifierCard}\n              onChange={onIdentifierCardChange}\n              maxValue={9}\n              data-test-id=\"idcard\"\n            />\n            {/* <ReadQrCodeButton /> */}\n          </React.Fragment>\n        }\n        footer={\n          <ProcessPageFooter\n            primaryButton={\n              <Button\n                disabled={disableNextButton}\n                endIcon={<KeyboardArrowRight color=\"secondary\" />}\n                onClick={onSubmit}\n                data-test-id=\"submit-button\"\n              >\n                {nextLabel}\n              </Button>\n            }\n          />\n        }\n      />\n    </PageContainer>\n  );\n};\n","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/onboarding/pages/ActivateByCard/EnterDigitsForCard/EnterDigitsForCard.tsx",["5001","5002"],"import React from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useHistory } from \"react-router-dom\";\nimport { Close, KeyboardArrowRight } from \"@material-ui/icons\";\nimport { ProcessDescriptionHeader } from \"components/ProcessDescriptionHeader\";\nimport { AppBar } from \"components/AppBar\";\nimport { Button } from \"components/Button\";\nimport { ProcessPageFooter } from \"components/ProcessPageFooter\";\nimport { cancelLabel, nextLabel } from \"constants/buttons/labels\";\nimport { OnboardingRoutes } from \"features/onboarding/constants/routes\";\nimport { ProcessPageLayout } from \"components/ProcessPageLayout\";\nimport { PageContainer } from \"components/PageContainer\";\nimport { AccountRoutes } from \"features/account/constants/routes\";\nimport { Box, Grid } from \"@material-ui/core\";\nimport { DigitsCardProps } from \"features/onboarding/components/inputs/CardDigitsInput\";\nimport { StoreState } from \"redux/state\";\nimport { Loader } from \"components/Loader\";\nimport { ValidateCard } from \"features/onboarding/redux/models/validateCard\";\nimport {\n  updateOnboardingForm,\n  updateValidateCardForm,\n  validateCardOnboarding,\n} from \"features/onboarding/redux/actions\";\nimport {\n  SuccessVerifyCardState,\n  InitialValidateCardState,\n  OnboardingState,\n} from \"features/onboarding/redux/state\";\n\nexport const EnterDigitsForCard: React.FC = () => {\n  const history = useHistory();\n  const dispatch = useDispatch();\n\n  const [panLastDigits, setPanLastDigits] = React.useState(\"\");\n  const [sentTaxId, setSentTaxId] = React.useState(false);\n  const [sentValidation, setSentValidation] = React.useState(false);\n  const [disableNextButton, setDisableNextButton] = React.useState(false);\n  const [cardState, validateCard, loading, taxId] = useSelector<\n    StoreState,\n    [\n      OnboardingState | undefined,\n      ValidateCard | undefined,\n      boolean,\n      string | undefined\n    ]\n  >((state) => [\n    state.onboarding,\n    state.onboarding.validateCard,\n    state.onboarding.loading,\n    state.onboarding.validateCard?.taxId,\n  ]);\n\n  React.useEffect(() => {\n    panLastDigits.length !== 4\n      ? setDisableNextButton(true)\n      : setDisableNextButton(false);\n  }, [panLastDigits.length]);\n\n  React.useEffect(() => {\n    if (sentValidation && cardState instanceof SuccessVerifyCardState) {\n      if (!validateCard?.isValid)\n        history.push(OnboardingRoutes.invalidDataForCard);\n      else {\n        dispatch(updateOnboardingForm({ taxId }));\n        history.push(OnboardingRoutes.enterNameForCard);\n      }\n    }\n  }, [cardState]);\n\n  React.useEffect(() => {\n    if (sentTaxId && cardState instanceof InitialValidateCardState)\n      dispatch(validateCardOnboarding());\n\n    setSentValidation(true);\n  }, [cardState]);\n\n  const onSubmit = (e: React.FormEvent) => {\n    e.preventDefault();\n\n    dispatch(updateValidateCardForm({ panLastDigits }));\n    setSentTaxId(true);\n  };\n\n  const onCancelButtonClick = () => {\n    history.replace(OnboardingRoutes.activateAccount);\n  };\n\n  return (\n    <PageContainer>\n      <ProcessPageLayout\n        appBar={\n          <AppBar\n            homeRoute={AccountRoutes.home}\n            action={\n              <Button\n                palette=\"secondary\"\n                size=\"small\"\n                startIcon={<Close color=\"primary\" />}\n                onClick={onCancelButtonClick}\n                data-test-id=\"cancel-button\"\n              >\n                {cancelLabel}\n              </Button>\n            }\n          />\n        }\n        header={\n          <Box>\n            <ProcessDescriptionHeader\n              title=\"Ative sua conta\"\n              subtitle=\"Hora de ativar seu cartão\"\n              description=\"Para identificarmos seus dados, insira os 4 últimos digitos do número do seu cartão.\"\n            />\n          </Box>\n        }\n        main={\n          <Grid direction=\"column\" alignItems=\"center\">\n            <Grid item component=\"form\">\n              <DigitsCardProps\n                onChange={setPanLastDigits}\n                value={panLastDigits}\n              />\n            </Grid>\n          </Grid>\n        }\n        footer={\n          <ProcessPageFooter\n            primaryButton={\n              <Button\n                disabled={disableNextButton}\n                endIcon={<KeyboardArrowRight color=\"secondary\" />}\n                onClick={onSubmit}\n                data-test-id=\"submit-button\"\n              >\n                {nextLabel}\n              </Button>\n            }\n          />\n        }\n      />\n      <Loader open={loading} />\n    </PageContainer>\n  );\n};\n","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/taxPayment/redux/reducer.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/topUp/redux/reducer.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/onboarding/redux/reducer.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/transference/components/ConfirmSchedulingDialog/index.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/payment/redux/reducer.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/transference/redux/reducer.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/qrCodeTransfer/redux/reducer.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/onboarding/pages/Terms/Terms.tsx",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/onboarding/pages/Welcome/Welcome.tsx",["5003"],"import React from 'react'\nimport { useHistory } from 'react-router'\nimport { Grid, Box, Typography } from '@material-ui/core'\nimport { OnboardingSubTitle } from 'features/onboarding/components/texts/OnboardingSubtitle'\nimport { OnboardingTitle } from 'features/onboarding/components/texts/OnboardingTitle'\nimport { AuthenticationRoutes } from 'features/authentication/constants/routes'\nimport { AccountRoutes } from 'features/account/constants/routes'\nimport { useToken } from 'hooks/useToken'\nimport { PageContainer } from 'components/PageContainer'\nimport { useOnboardingStyles } from './Welcome.style'\nimport { Icon } from 'components/Icon'\nimport { LogoBar } from 'components/LogoBar'\nimport { GreatButton } from 'components/GreatButton'\n\nexport const Welcome: React.FC = () => {\n  const styles = useOnboardingStyles();\n  const history = useHistory();\n  const token = useToken();\n\n  React.useEffect(() => {\n    if (token) history.replace(AccountRoutes.home);\n  }, [history, token]);\n\n  return (\n\n    <PageContainer className={styles.container}>\n\n      <Grid\n        container\n        direction=\"column\"\n        className={styles.content}\n      >\n\n        <LogoBar/>\n\n        <Grid\n          container\n          direction=\"column\"\n          alignItems=\"center\"\n          alignContent=\"center\"\n        >\n\n          {/* WELCOME IMAGE concludedImage */}\n          <Box\n            className={styles.containerImg}\n            data-test-id=\"welcomeImage\"\n          >\n            <Icon name=\"welcomeImage\"/>\n          </Box>\n\n          {/* ONBOARDING TITLE  */}\n          <Grid item className={styles.title}>\n            <OnboardingTitle />\n          </Grid>\n\n          {/* ONBOARDING SUBTITLE */}\n          <Grid item className={styles.subtitle}>\n            <OnboardingSubTitle />\n          </Grid>\n\n          {/* BOTÃO LOGIN */}\n          <Grid\n            item\n            container\n            direction=\"column\"\n            className={styles.buttonsSection}\n          >\n\n            <Grid item className={styles.onboardingButtonWrapper}>\n              <GreatButton\n                palette=\"secondary\"\n                size=\"large\"\n                route={AuthenticationRoutes.signIn}\n                id=\"welcome-page-button\"\n              >\n                Fazer Login\n              </GreatButton>\n            </Grid>\n\n\n\n          </Grid>\n        </Grid>\n\n      </Grid>\n\n    </PageContainer>\n  );\n};\n","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/tags/redux/reducer.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/onboarding/pages/ActivateAccount/ActivateAccount.tsx",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/user/redux/reducer.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/authentication/redux/reducer.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/authentication/components/ConfirmSignoutDialog/index.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/user/components/PasswordField/PasswordField.tsx",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/authentication/pages/SignIn/SignIn.tsx",["5004","5005","5006","5007"],"/* eslint-disable react-hooks/exhaustive-deps */\nimport React from 'react'\nimport { useHistory } from 'react-router-dom'\nimport { Container, Grid, Typography } from '@material-ui/core'\nimport { Alert } from 'components/Alert'\nimport { LoginButton } from 'features/authentication/components/LoginButton'\nimport { AuthenticationTitle } from 'features/authentication/components/AuthenticationTitle/AuthenticationTitle'\nimport { StoreState } from 'redux/state'\nimport { Loader } from 'components/Loader'\nimport {\n  LoadingAuthState,\n  SuccessAuthState,\n} from \"features/authentication/redux/state\";\n\nimport { useMask } from 'hooks/useMask'\nimport { maskCpf } from '_utils/masks/taxPayer'\nimport { useStyle } from './SignIn.style'\nimport { login, logout as signOut } from 'features/authentication/redux/actions'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { AccountRoutes } from 'features/account/constants/routes'\nimport { TextField } from 'components/TextField'\nimport { PasswordField } from 'components/PasswordField'\nimport { AuthenticationRoutes } from 'features/authentication/constants/routes'\nimport { ForgotPassword } from 'features/authentication/components/ForgotPassword'\nimport { useToken } from 'hooks/useToken'\nimport { validateToken } from 'features/authentication/utils'\nimport { OnboardingRoutes } from 'features/onboarding/constants/routes'\nimport { SaveTaxId } from 'features/authentication/components/SaveTaxId'\nimport { SwitchIOS } from 'components/SwitchIOS'\nimport { CookiesProvider, useCookies } from 'react-cookie'\nimport { colors, theme } from '_config/theme'\nimport { GreatButton } from 'components/GreatButton'\n\nexport const SignIn: React.FC = () => {\n  const [passwordInput, setPasswordInput] = React.useState(\"\");\n  const authState = useSelector((state: StoreState) => state.auth);\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const [taxIdInput, setCpfInput] = useMask(maskCpf);\n  const style = useStyle();\n  const { acceptedTerms, firstAccess } = useSelector((store: StoreState) => ({\n    acceptedTerms: store.auth.user?.acceptedTerms,\n    firstAccess: store.auth.user?.isFirstAccess,\n  }));\n  const [validationToken, setTokenIsValid] = React.useState(Boolean);\n  const token = useToken();\n  const [switchAlternateState, setSwitchAlternateState] =\n    React.useState(Boolean);\n  const [onChange, setOnChange] = React.useState(Boolean);\n  const [cookies, setCookie, removeCookie] = useCookies([\"login-token\"]);\n\n  React.useEffect(() => {\n    if (token && !validateToken(token)) {\n      setTokenIsValid(true);\n      dispatch(signOut());\n    } else if (authState instanceof SuccessAuthState) {\n      if (!acceptedTerms) history.push(OnboardingRoutes.terms);\n      else if (firstAccess)\n        history.push(AuthenticationRoutes.temporaryPassword);\n      else history.push(AccountRoutes.stoneBankHome);\n    }\n  }, [token, authState]);\n\n  React.useEffect(() => {\n    dispatch(signOut());\n  }, [history]);\n\n  React.useEffect(() => {\n    if (localStorage.getItem(\"TaxId\")) {\n      setSwitchAlternateState(true);\n      setOnChange(true);\n    } else {\n      setSwitchAlternateState(false);\n      localStorage.removeItem(\"TaxId\");\n      removeCookie(\"login-token\");\n    }\n  }, [localStorage]);\n\n  const onCpfChange = (event: any) => {\n    setCpfInput(event.target.value);\n  };\n\n  const onPasswordChange = (event: any) => {\n    setPasswordInput(event.target.value);\n  };\n\n  const storageTaxId = () => {\n    if (switchAlternateState === false) {\n      setSwitchAlternateState(true);\n\n      localStorage.setItem(\"TaxIdLogin\", taxIdInput);\n\n      const taxId = localStorage.getItem(\"TaxIdLogin\");\n\n      setCpfInput(taxId!);\n      const maskCpfDigits = taxIdInput\n        .replace(/\\D/g, \"\")\n        .replace(/(\\d{3})(\\d)/, \"$1.$2\")\n        .replace(/(\\d{3})(\\d)/, \"***.$2\")\n        .replace(/(\\d{3})(\\d{1,2})/, \"***-$2\")\n        .replace(/(-\\d{2})\\d+?$/, \"$1\");\n\n      localStorage.setItem(\"TaxId\", maskCpfDigits);\n      setOnChange(true);\n    } else {\n      setSwitchAlternateState(false);\n      setOnChange(false);\n      localStorage.removeItem(\"TaxId\");\n      localStorage.removeItem(\"TaxIdLogin\");\n    }\n  };\n\n  const onSubmit = async (event: any) => {\n    event.preventDefault();\n\n    dispatch(\n      login(\n        taxIdInput,\n        passwordInput,\n        switchAlternateState,\n        cookies[\"login-token\"]\n      )\n    );\n    localStorage.removeItem(\"TaxIdLogin\");\n  };\n\n  const passwordIsValid =\n    passwordInput.length >= 8 && passwordInput.length <= 16;\n  const isValid =\n    (taxIdInput.length === 14 || cookies[\"login-token\"]) && passwordIsValid;\n\n  return (\n    <CookiesProvider>\n      <Container maxWidth=\"xs\" className={style.container}>\n      \n        {/* SESSION EXPIRED ALERT */}\n        {validationToken && (\n          <Alert\n            title=\"Aviso!\"\n            message=\"Sua sessão expirou.\"\n            severity={\"error\"}\n          />\n        )}\n\n        {/* ERROR LAYOUT ALERT */}\n        {authState.errorMessage && (\n          <Alert\n            title=\"Erro\"\n            message={authState.errorMessage}\n            severity={\"error\"}\n          />\n        )}\n\n        {/* LAYOUT SIGNIN PAGE */}\n        <Grid\n          container\n          direction=\"column\"\n          className={style.contentWrapper}\n          component=\"form\"\n          onSubmit={onSubmit}\n        >\n          <Typography \n            className={style.loginTitle}\n            align=\"center\"\n            data-test-id=\"authentication-login\"\n          >\n            Login\n          </Typography>\n\n          <Grid item className={style.header}>\n            <AuthenticationTitle />\n          </Grid>\n\n          <Grid item container direction=\"column\" spacing={3}>\n            <Grid item>\n              <TextField\n                variant=\"outlined\"\n                value={\n                  localStorage.getItem(\"TaxId\")\n                    ? localStorage.getItem(\"TaxId\")!\n                    : taxIdInput\n                }\n                inputMode=\"numeric\"\n                label=\"\"\n                placeholder=\"CPF - Apenas números\"\n                onChange={onCpfChange}\n                data-test-id=\"taxid-field\"\n                disabled={onChange}\n              />\n            </Grid>\n\n            <Grid item>\n              <PasswordField\n                variant=\"outlined\"\n                placeholder=\"Senha\"\n                label=\"\"\n                value={passwordInput}\n                onChange={onPasswordChange}\n              />\n            </Grid>\n\n            <Grid item className={style.forgotPassword}>\n              <ForgotPassword />\n            </Grid>\n            \n\n            <Grid item>\n              <LoginButton\n                disabled={!isValid}\n                palette=\"primary\"\n                size=\"large\"\n              >\n                Entrar\n              </LoginButton>\n            </Grid>\n            \n            <Grid item>\n              <SaveTaxId\n                text={\"Lembre de mim\"}\n                onClick={storageTaxId}\n                save={<SwitchIOS checked={switchAlternateState} />}\n              />\n            </Grid>\n            \n          </Grid>\n        </Grid>\n        <Loader open={authState instanceof LoadingAuthState} />\n      </Container>\n    </CookiesProvider>\n  );\n};\n","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/account/components/TransactionTypeFilterButton/index.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/account/components/DayTransactions/index.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/components/DetailTransferDescription/DetailTransferDescription.style.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/account/components/Authentication/index.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/account/components/ReceiptDescription/index.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/account/components/DetailDescription/index.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/components/OtpInput/index.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/account/components/AccountCard/index.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/user/components/Account/Account.tsx",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/card/redux/reducer.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/account/redux/reducer.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/transference/components/ReceiptSummary/ReceiptSummary.style.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/transference/components/TransactionAuthentication/TransactionAuthentication.style.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/transference/components/TransactionAuthentication/PaidThrough .tsx",["5008"],"import { Box } from \"@material-ui/core\";\nimport React from \"react\";\nimport { useStyles } from \"./TransactionAuthentication.style\";\ninterface PaidThroughProps {\n  payment: string;\n}\nexport const PaidThrough: React.FC<PaidThroughProps> = ({ payment }) => {\n  return (\n    <Box>\n      Pago via:\n      <strong> {payment} </strong>\n    </Box>\n  );\n};\n","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/transference/components/TransactionAuthentication/InternalProtocol.tsx",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/transference/components/TransactionAuthentication/ExternalProtocol .tsx",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/onboarding/pages/ActivateBySMS/CreatePasswordForSMS/CreatePasswordForSMS.style.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/onboarding/pages/ActivateBySMS/ConfirmPasswordForSMS/ConfirmPasswordForSMS.style.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/onboarding/pages/AccountActivationCompletedForCard/AccountActivationCompleted.style.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/onboarding/pages/AccountActivationCompleted/AccountActivationCompleted.style.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/onboarding/pages/Terms/Terms.style.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/onboarding/pages/Welcome/Welcome.style.ts",["5009"],"import { makeStyles } from '@material-ui/core'\nimport { colors, theme } from '_config/theme'\nimport welcomeImg from '_assets/img/welcome-img.svg'\n\nexport const useOnboardingStyles = makeStyles({\n  container: {\n    display: 'flex',\n    overflow: 'hidden',\n    backgroundColor: colors.system.light.primary,\n\n    [theme.breakpoints.up('md')]: {\n      padding: '0 50px',\n    },\n    [theme.breakpoints.down('md')]: {\n      padding: '0 42px',\n    },\n    [theme.breakpoints.down('xs')]: {\n      padding: '0 34px',\n    },\n    \n  },\n\n  content: {\n    [theme.breakpoints.down(\"sm\")]: {\n      marginTop: \"200px\",\n      marginBottom: \"96px\",\n    },\n    [theme.breakpoints.down(\"xs\")]: {\n      marginTop: \"10px\",\n      marginBottom: \"64px\",\n    },\n  },\n\n  containerImg: {\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    height: '30vh',\n  },\n\n  title: {\n    color: colors.system.light.onPrimary,\n    textAlign: 'center',\n    padding: '13px 0 10px 0',\n  },\n\n  subtitle: {\n    marginBottom: 4,\n    color: colors.system.light.onPrimary,\n    [theme.breakpoints.down('xs')]: {\n      marginBottom: 8,\n    },\n  },\n\n  buttonsSection: {\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'space-between',\n    margin: '45px 0 0 0', //cima direita baixo esquerda\n    alignContent: 'center',\n  },\n\n  signInButtonWrapper: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    margin: \"0 40px\",\n    [theme.breakpoints.down(\"xs\")]: {\n      margin: \"0 20px\",\n    },\n  },\n\n  onboardingButtonWrapper: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    \"&:hover\": {\n      borderWidth: 2,\n    },\n  },\n\n})\n","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/onboarding/pages/ActivateAccount/ActivateAccount.style.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/user/components/PasswordField/PasswordField.style.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/authentication/pages/SignIn/SignIn.style.ts",["5010"],"import { makeStyles } from '@material-ui/core'\nimport { colors, theme } from '_config/theme'\n\nconst bottomSpacing = 16;\nconst screenHeight = window.screen.height;\n\nexport const useStyle = makeStyles({\n  \n  container: {\n    // alignItems: 'center',\n    // justifyContent: 'center',\n    minHeight: '100vh',    \n    backgroundColor: colors.system.light.secondaryContainer,\n  },\n  \n  loginTitle: {\n    color:colors.readOnly.light.blackLight,\n    fontSize: '2.18rem',\n    fontWeight: 700,\n    fontFamily: \"'Merriweather Sans', sans-serif\",\n    margin: '40px 0 0 0'\n  },\n\n  header: {\n    color: colors.system.light.primary,\n    marginBottom: 59,\n    [theme.breakpoints.down('sm')]: {\n      marginBottom: 39,\n    },\n  },\n\n  forgotPassword: {\n    textAlign: 'right',\n    textDecoration: 'underline',\n  },\n\n  contentWrapper: {\n    paddingBottom: bottomSpacing,\n    [theme.breakpoints.up('md')]: {\n      padding: '0 20px',\n    },\n    [theme.breakpoints.down('md')]: {\n      padding: '0 12px',\n    },\n    [theme.breakpoints.down('xs')]: {\n      padding: '0 4px',\n    },\n  },\n});\n","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/transference/components/ConfirmSchedulingDialog/ConfirmSchedulingDialog.tsx",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/authentication/components/ConfirmSignoutDialog/ConfirmSignoutDialog.tsx",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/account/components/FeaturesList/index.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/account/components/HomePageHeader/index.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/user/components/Account/Account.style.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/account/components/DayTransactions/DayTransactions.tsx",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/account/components/TransactionTypeFilterButton/TransactionTypeFilterButton.tsx",["5011"],"import React from \"react\";\nimport { TransactionType } from \"features/account/redux/models/transactionType\";\nimport { Box, Typography } from \"@material-ui/core\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { StoreState } from \"redux/state\";\nimport { useStyles } from \"./TransactionTypeFilterButton.style\";\nimport {\n  getBankStatement,\n  setBankStatementFilters,\n} from \"features/account/redux/actions\";\nimport { usePrevious } from \"hooks/usePrevious\";\nimport { Icon } from \"components/Icon\";\ninterface TransactionTypeFilterButtonProps {\n  transactionType: TransactionType;\n}\n\nexport const TransactionTypeFilterButton: React.FC<\n  TransactionTypeFilterButtonProps\n> = ({ transactionType }) => {\n  const filters = useSelector(\n    (state: StoreState) => state.account.bankStatementFilters\n  );\n  const selectedTransactionType = filters?.transactionType;\n  const dispatch = useDispatch();\n  const styles = useStyles();\n  const previous = usePrevious(selectedTransactionType);\n\n  React.useEffect(() => {\n    if (\n      (previous === undefined && selectedTransactionType === transactionType) ||\n      (previous === transactionType && selectedTransactionType === undefined) ||\n      (previous !== selectedTransactionType &&\n        transactionType === selectedTransactionType)\n    ) {\n      dispatch(getBankStatement());\n    }\n  }, [selectedTransactionType]);\n\n  const onClick = () => {\n    dispatch(\n      setBankStatementFilters({\n        ...filters,\n        transactionType:\n          selectedTransactionType === transactionType\n            ? undefined\n            : transactionType,\n      })\n    );\n  };\n\n  return (\n    <Box\n      sx={{\n        display: \"flex\",\n        flexDirection: \"column\",\n      }}\n      onClick={onClick}\n    >\n      <Box\n        sx={{\n          display: \"flex\",\n          justifyContent: \"center\",\n          mb: 0.5,\n        }}\n      >\n        <Box\n          className={styles.mainIcon}\n          data-test-id=\"transaction-type-filter-button\"\n        >\n          <Icon\n            name={\n              transactionType === TransactionType.received\n                ? \"income\"\n                : \"expenses\"\n            }\n          />\n          {transactionType === selectedTransactionType && (\n            <Icon name={\"check\"} className={styles.selectedIcon} />\n          )}\n        </Box>\n      </Box>\n      <Typography variant=\"caption\" className={styles.label}>\n        {transactionType === TransactionType.received\n          ? \"Recebidos\"\n          : \"Enviados\"}\n      </Typography>\n    </Box>\n  );\n};\n","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/account/components/Authentication/Authentication.tsx",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/account/components/ReceiptDescription/ReceiptDescription.tsx",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/account/components/DetailDescription/DetailDescription.tsx",["5012","5013","5014","5015","5016","5017"],"import React from \"react\";\nimport { TransactionDetails } from \"features/account/redux/models/transactionDetails\";\nimport { useMask } from \"hooks/useMask\";\nimport { useHistory } from \"react-router-dom\";\nimport { maskTaxPayer } from \"_utils/masks/taxPayer\";\nimport { useStyle } from \"./DetailDescription.style\";\nimport { DateFormatter } from \"_translate\";\nimport { ConfigContext } from \"_config\";\nimport { OperationType } from \"features/account/redux/models/operationType\";\nimport { TransactionDetail } from \"components/TransactionDetail\";\nimport { TransactionDetailName } from \"components/TransactionDetailName\";\nimport { TransactionDetailValue } from \"components/TransactionDetailValue\";\nimport { Box, Typography } from \"@material-ui/core\";\nimport { Button } from \"components/Button\";\nimport { PixRoutes } from \"features/pix/constants/routes\";\n\ninterface DetailDescriptionProps {\n  details?: TransactionDetails;\n  operationType: OperationType;\n}\n\nexport const DetailDescription: React.FC<DetailDescriptionProps> = ({\n  details,\n  operationType,\n}) => {\n  const style = useStyle();\n  const [maskedTaxId, setMaskedTaxId] = useMask(maskTaxPayer);\n  const history = useHistory();\n\n  React.useEffect(() => {\n    if (details?.toTaxId) setMaskedTaxId(details.toTaxId);\n  }, [details?.toTaxId, setMaskedTaxId]);\n\n  const renderSwitch = (opType: OperationType) => {\n    switch (opType) {\n      case OperationType.moneyTransfer:\n      case OperationType.internalTransfer:\n        return (\n          <React.Fragment data-test-id=\"transfer-description\">\n            <TransactionDetail>\n              <TransactionDetailName className={style.transfDetail}>\n                Transferência no valor de\n              </TransactionDetailName>\n              <TransactionDetailValue className={style.transfDetail}>\n                <strong> R$ {details?.value ?? \"---\"} </strong>\n              </TransactionDetailValue>\n              <TransactionDetailName className={style.transfDetail}>\n                para a conta de\n              </TransactionDetailName>\n              <TransactionDetailValue className={style.transfDetail}>\n                <strong>{details?.toName ?? \"---\"}</strong>\n              </TransactionDetailValue>\n              <TransactionDetailName className={style.transfDetail}>\n                com CPF\n              </TransactionDetailName>\n              <TransactionDetailValue className={style.transfDetail}>\n                <strong>{details?.toTaxId ? maskedTaxId : \"---\"}</strong>\n              </TransactionDetailValue>\n              <TransactionDetailName className={style.transfDetail}>\n                no dia\n              </TransactionDetailName>\n              <TransactionDetailValue className={style.transfDetail}>\n                <strong>\n                  {details?.date ? DateFormatter.format(details.date) : \"---\"}\n                </strong>\n              </TransactionDetailValue>\n              <TransactionDetailName className={style.transfDetail}>\n                descrição da transferência\n              </TransactionDetailName>\n              <TransactionDetailValue className={style.transfDetail}>\n                <strong>{details?.description ?? \"---\"}</strong>\n              </TransactionDetailValue>\n            </TransactionDetail>\n          </React.Fragment>\n        );\n\n      case OperationType.darjPayment:\n      case OperationType.fgtsPayment:\n      case OperationType.garePayment:\n        return (\n          <React.Fragment data-test-id=\"payment-description\">\n            <TransactionDetail>\n              <TransactionDetailName className={style.transfDetail}>\n                Pagamento no valor de\n              </TransactionDetailName>\n              <TransactionDetailValue className={style.transfDetail}>\n                <strong> R$ {details?.value ?? \"---\"} </strong>\n              </TransactionDetailValue>\n              <TransactionDetailName className={style.transfDetail}>\n                Com banco emissor\n              </TransactionDetailName>\n              <TransactionDetailValue className={style.transfDetail}>\n                <strong> {details?.toName ?? \"---\"} </strong>\n              </TransactionDetailValue>\n              <TransactionDetailName className={style.transfDetail}>\n                CPF/CNPJ do contribuinte\n              </TransactionDetailName>\n              <TransactionDetailValue className={style.transfDetail}>\n                <strong> {details?.toTaxId ? maskedTaxId : \"---\"} </strong>\n              </TransactionDetailValue>\n              <TransactionDetailName className={style.transfDetail}>\n                Com pagamento na data de\n              </TransactionDetailName>\n              <TransactionDetailValue className={style.transfDetail}>\n                <strong>\n                  {details?.date ? DateFormatter.format(details.date) : \"---\"}\n                </strong>\n              </TransactionDetailValue>\n              <TransactionDetailName className={style.transfDetail}>\n                E data de vencimento para\n              </TransactionDetailName>\n              <TransactionDetailValue className={style.transfDetail}>\n                <strong>\n                  {details?.dueDate\n                    ? DateFormatter.format(details.dueDate)\n                    : \"---\"}\n                </strong>\n              </TransactionDetailValue>\n              <TransactionDetailName className={style.transfDetail}>\n                descrição do pagamento\n              </TransactionDetailName>\n              <TransactionDetailValue className={style.transfDetail}>\n                <strong> {details?.description ?? \"---\"} </strong>\n              </TransactionDetailValue>\n\n              {details?.tags && (\n                <React.Fragment>\n                  <div>Suas tags</div>\n                  {details.tags.map((t) => (\n                    <React.Fragment>\n                      <strong>{t}</strong>\n                      <br />\n                    </React.Fragment>\n                  ))}\n                </React.Fragment>\n              )}\n            </TransactionDetail>\n          </React.Fragment>\n        );\n\n      case OperationType.purchaseTopUp:\n        return (\n          <React.Fragment data-test-id=\"top-up-description\">\n            <TransactionDetail>\n              <TransactionDetailName className={style.transfDetail}>\n                Recarga no valor de\n              </TransactionDetailName>\n              <TransactionDetailValue className={style.transfDetail}>\n                <strong> R$ {details?.value ?? \"---\"} </strong>\n              </TransactionDetailValue>\n              <TransactionDetailName className={style.transfDetail}>\n                Com pagamento na data de\n              </TransactionDetailName>\n              <TransactionDetailValue className={style.transfDetail}>\n                <strong>\n                  {details?.date ? DateFormatter.format(details.date) : \"---\"}\n                </strong>\n              </TransactionDetailValue>\n            </TransactionDetail>\n          </React.Fragment>\n        );\n\n      case OperationType.boletoPayment:\n        return (\n          <React.Fragment data-test-id=\"payment-description\">\n            <TransactionDetail>\n              <TransactionDetailName className={style.transfDetail}>\n                Pagamento no valor de\n              </TransactionDetailName>\n              <TransactionDetailValue className={style.transfDetail}>\n                <strong> R$ {details?.value ?? \"---\"} </strong>\n              </TransactionDetailValue>\n              <TransactionDetailName className={style.transfDetail}>\n                Emitido por\n              </TransactionDetailName>\n              <TransactionDetailValue className={style.transfDetail}>\n                <strong> {details?.toName ?? \"---\"} </strong>\n              </TransactionDetailValue>\n              <TransactionDetailName className={style.transfDetail}>\n                Com pagamento na data de\n              </TransactionDetailName>\n              <TransactionDetailValue className={style.transfDetail}>\n                <strong>\n                  {details?.date ? DateFormatter.format(details.date) : \"---\"}\n                </strong>\n              </TransactionDetailValue>\n              <TransactionDetailName className={style.transfDetail}>\n                E data de vencimento para\n              </TransactionDetailName>\n              <TransactionDetailValue className={style.transfDetail}>\n                <strong>\n                  {details?.dueDate\n                    ? DateFormatter.format(details.dueDate)\n                    : \"---\"}\n                </strong>\n              </TransactionDetailValue>\n              <TransactionDetailName className={style.transfDetail}>\n                descrição do pagamento\n              </TransactionDetailName>\n              <TransactionDetailValue className={style.transfDetail}>\n                <strong>{details?.description ?? \"---\"}</strong>\n              </TransactionDetailValue>\n\n              {details?.tags && (\n                <React.Fragment>\n                  <div>Suas tags</div>\n                  {details.tags.map((t) => (\n                    <React.Fragment>\n                      <strong>{t}</strong>\n                      <br />\n                    </React.Fragment>\n                  ))}\n                </React.Fragment>\n              )}\n            </TransactionDetail>\n          </React.Fragment>\n        );\n      case OperationType.pixIn:\n      case OperationType.pixOut:\n        return (\n          <React.Fragment>\n            <div> Pix no valor de </div>\n            <strong> R$ {details?.value ?? \"---\"} </strong>\n            <div> de </div>\n            <strong> {details?.toName ?? \"---\"} </strong>\n            <div> Com CPF </div>\n            <strong>\n              <strong> {details?.toTaxId ? maskedTaxId : \"---\"} </strong>\n            </strong>\n            <div>Instituição</div>\n            <strong>{details?.institution ?? \"---\"}</strong>\n            <div> Com pagamento na data de </div>\n            <strong>\n              {details?.date ? DateFormatter.format(details.date) : \"---\"}\n            </strong>\n            <div> descrição do pagamento </div>\n            <strong> {details?.description ?? \"---\"} </strong>\n          </React.Fragment>\n        );\n    }\n  };\n\n  return (\n    <div className={style.detailContent}>{renderSwitch(operationType!)}</div>\n  );\n};\n","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/account/components/AccountCard/AccountCard.tsx",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/account/components/StoneBankHomePageHeader/index.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/_utils/masks/idCard.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/hooks/useToken.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/account/components/DayTransactions/DayTransactions.style.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/account/components/TransactionTypeFilterButton/TransactionTypeFilterButton.style.ts",["5018"],"import { makeStyles } from \"@material-ui/core\";\nimport { colors } from \"_config\";\nimport check from \"_assets/icons/Check.svg\";\n\nexport const useStyles = makeStyles({\n  label: {\n    color: colors.system.light.neutral,\n    fontWeight: 500,\n  },\n\n  mainIcon: {\n    alignItems: \"center\",\n    backgroundColor: colors.system.light.surface,\n    borderRadius: 8,\n    boxShadow: \"0px 2px 2px 0px #00000026\",\n    display: \"flex\",\n    height: 16,\n    justifyContent: \"center\",\n    position: \"relative\",\n    width: 16,\n\n    \"& img\": {\n      height: 12,\n      width: 12,\n    },\n  },\n\n  selectedIcon: {\n    backgroundColor: colors.system.light.secondary,\n    backgroundPosition: \"center\",\n    backgroundRepeat: \"no-repeat\",\n    backgroundSize: \"14px\",\n    borderRadius: 5,\n    height: 10,\n    position: \"absolute\",\n    right: \"-5px\",\n    top: \"-5px\",\n    width: 10,\n  },\n});\n","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/account/components/Authentication/Authentication.style.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/account/components/ReceiptDescription/ReceiptDescription.style.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/account/components/DetailDescription/DetailDescription.style.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/account/components/AccountCard/AccountCard.style.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/account/components/FeaturesList/FeaturesList.tsx",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/authentication/components/AuthenticationTitle/AuthenticationTitle.tsx",["5019","5020"],"import React from 'react'\nimport { Typography } from '@material-ui/core'\nimport { ConfigContext } from '_config'\nimport { makeStyles } from '@material-ui/core/styles'\nimport { colors } from '_config/theme'\n\n\nconst useStyles = makeStyles(theme => ({\n  title: {\n    // color: colors.readOnly.light.blackLight,\n    fontSize: '1.125rem',\n    fontFamily: \"'Baloo Bhaina 2', cursive\",\n    margin: '4px 0 0 0'\n  },\n}))\n\n\nexport const AuthenticationTitle: React.FC = () => {\n  const classes = useStyles()\n  const { company } = React.useContext(ConfigContext)\n\n  return (\n    <Typography \n      variant=\"h5\"\n      align=\"center\"\n      data-test-id=\"authentication-title\"\n      className={classes.title}\n    >\n      Seja bem-vindo ao\n      <br />\n      <strong>StoneBank</strong>\n    </Typography>\n  );\n};\n","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/account/components/HomePageHeader/HomePageHeader.tsx",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/account/components/StoneBankHomePageHeader/StoneBankHomePageHeader.tsx",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/onboarding/components/inputs/CardDigitsInput/index.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/onboarding/components/buttons/AccessAccountButton/index.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/transference/constants/messages.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/components/LogoBar/index.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/authentication/components/SaveTaxId/index.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/authentication/components/ForgotPassword/index.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/onboarding/components/texts/TermsText/index.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/onboarding/components/texts/OnboardingTitle/index.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/onboarding/components/texts/OnboardingSubtitle/index.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/onboarding/components/cards/OptionsCard/index.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/authentication/components/LoginButton/index.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/account/components/FeaturesList/FeaturesList.style.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/account/components/HomePageHeader/HomePageHeader.style.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/account/components/StoneBankHomePageHeader/StoneBankHomePageHeader.style.ts",["5021"],"import { makeStyles } from \"@material-ui/core\";\nimport { colors, theme } from \"_config/theme\";\n\nexport const useStyle = makeStyles({\n  menuHeader: {\n    padding: '20px 20px 5px 15px'\n  },\n  searchBox: {\n    backgroundColor: \"#FFF\",\n    position: 'relative',\n    margin: 'auto', \n    width: 'fit-content', \n    marginTop: '-20px',\n    zIndex: 1,\n    borderRadius: '16px'\n  },\n  searchField: {\n    '& > *': {\n      borderRadius: '16px',\n      color: '#000'\n    },\n  },\n  mainHeader: {\n    position: \"relative\",\n    width: \"100%\",\n    color: colors.readOnly.light.white,\n    backgroundColor: colors.system.light.primary, // #117E9B, #DB3E4D, #2CB060\n    borderRadius: `0px 0px 12px 12px`,\n    boxShadow: `0px 2px 4px rgba(0, 0, 0, 0.25);`,\n\n    \"& > .MuiCardContent-root\": {\n      paddingBottom: 25,\n    },\n  },\n\n  greetingsSection: {\n    // marginBottom: 16,\n\n    \"& .MuiTypography-root\": {\n      fontSize: \"13px\",\n      fontWeight: 500,\n    },\n  },\n\n  balanceSection: {\n    // marginBottom: 16,\n\n    \"& .MuiTypography-root\": {\n      fontSize: \"13px\",\n      fontWeight: 500,\n    },\n  },\n\n  bottomFloatingButton: {\n    position: \"absolute\",\n    left: 25,\n    bottom: -8,\n  },\n\n  toolbar: {\n    padding: 0,\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"space-between\",\n  },\n\n  logo: {\n    height: 24,\n  },\n\n  extractButton: {\n    border: \"1px solid #FFF\",\n    borderRadius: \"8px\",\n    color: \"#FFF\",\n    fontFamily: \"Roboto\",\n    fontStyle: \"normal\",\n    fontSize: \"12px\",\n    fontWeight: 500,\n    width: \"88px\",\n  },\n});\n","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/onboarding/components/inputs/CardDigitsInput/CardDigitsInput.tsx",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/onboarding/components/buttons/AccessAccountButton/AccessAccountButton.tsx",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/components/LogoBar/LogoBar.tsx",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/authentication/components/SaveTaxId/SaveTaxId.tsx",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/authentication/components/ForgotPassword/ForgotPassword.tsx",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/onboarding/components/texts/TermsText/TermsText.tsx",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/onboarding/components/texts/OnboardingTitle/OnboardingTitle.tsx",["5022"],"import React from \"react\";\nimport { Typography } from \"@material-ui/core\";\nimport { ConfigContext } from \"_config\";\nimport { useStyles } from \"./OnboardingTile.style\";\n\nexport const OnboardingTitle: React.FC = () => {\n  const { company } = React.useContext(ConfigContext);\n  const styles = useStyles();\n\n  return (\n    <Typography\n      className={styles.title}\n      data-test-id=\"welcome-title\"\n    >\n      Vamos Começar\n    </Typography>\n  );\n};\n","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/onboarding/components/texts/OnboardingSubtitle/OnboardingSubTitle.tsx",["5023"],"import React from 'react'\nimport { Typography } from '@material-ui/core'\nimport { ConfigContext } from '_config'\nimport { useStyles } from './OnboardingSubTitle.style'\n\nexport const OnboardingSubTitle: React.FC = () => {\n  const { company } = React.useContext(ConfigContext)\n  const styles = useStyles()\n\n  return (\n    <Typography\n      variant=\"h5\"\n      className={styles.title}\n      data-test-id=\"welcome-title\"\n    >\n      Bem-vindo a sua nova experiência\n      <br />\n      bancária\n    </Typography>\n  )\n}\n","/home/danielvitor/Documentos/Develop/stonebank_front/src/features/onboarding/components/cards/OptionsCard/OptionsCard.tsx",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/account/components/TranscationCard/index.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/authentication/components/LoginButton/LoginButton.tsx",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/account/components/DetailsButton/index.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/account/components/AccountCardDetails/index.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/onboarding/components/buttons/AccessAccountButton/AccessAccountButton.style.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/onboarding/components/inputs/CardDigitsInput/CardDigitsInput.style.tsx",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/authentication/components/SaveTaxId/SaveTaxId.style.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/authentication/components/ForgotPassword/ForgotPassword.style.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/onboarding/components/texts/OnboardingSubtitle/OnboardingSubTitle.style.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/onboarding/components/texts/TermsText/TermsText.style.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/onboarding/components/texts/OnboardingTitle/OnboardingTile.style.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/components/SquareButtonWithIcon/index.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/account/components/ShowBalanceButton/index.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/account/components/TranscationCard/TranscationCard.tsx",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/account/components/SettingsButton/index.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/account/components/AccountCardDetails/AccountCardDetails.tsx",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/account/components/DetailsButton/DetailsButton.tsx",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/account/components/TranscationCard/TranscationCard.style.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/account/components/DetailsButton/DetailsButton.style.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/account/components/AccountCardDetails/AccountCardDetails.style.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/components/SquareButtonWithIcon/SquareButtonWithIcon.tsx",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/account/components/ShowBalanceButton/ShowBalanceButton.tsx",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/account/components/SettingsButton/SettingsButton.tsx",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/features/account/components/ShowBalanceButton/ShowBalanceButton.style.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/components/SquareButtonWithIcon/SquareButtonWithIcon.style.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/components/TransactionCardButton/index.ts",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/components/TransactionCardButton/TransactionCardButton.tsx",[],"/home/danielvitor/Documentos/Develop/stonebank_front/src/components/TransactionCardButton/TransactionCardButton.style.ts",[],{"ruleId":"5024","severity":1,"message":"5025","line":1,"column":24,"nodeType":"5026","messageId":"5027","endLine":1,"endColumn":29},{"ruleId":"5024","severity":1,"message":"5028","line":1,"column":31,"nodeType":"5026","messageId":"5027","endLine":1,"endColumn":38},{"ruleId":"5024","severity":1,"message":"5029","line":2,"column":10,"nodeType":"5026","messageId":"5027","endLine":2,"endColumn":24},{"ruleId":"5024","severity":1,"message":"5030","line":6,"column":10,"nodeType":"5026","messageId":"5027","endLine":6,"endColumn":23},{"ruleId":"5031","severity":1,"message":"5032","line":29,"column":6,"nodeType":"5033","endLine":29,"endColumn":19,"suggestions":"5034"},{"ruleId":"5031","severity":1,"message":"5035","line":48,"column":6,"nodeType":"5033","endLine":48,"endColumn":21,"suggestions":"5036"},{"ruleId":"5024","severity":1,"message":"5037","line":22,"column":10,"nodeType":"5026","messageId":"5027","endLine":22,"endColumn":17},{"ruleId":"5024","severity":1,"message":"5038","line":23,"column":19,"nodeType":"5026","messageId":"5027","endLine":23,"endColumn":29},{"ruleId":"5024","severity":1,"message":"5039","line":4,"column":3,"nodeType":"5026","messageId":"5027","endLine":4,"endColumn":20},{"ruleId":"5024","severity":1,"message":"5040","line":18,"column":10,"nodeType":"5026","messageId":"5027","endLine":18,"endColumn":17},{"ruleId":"5024","severity":1,"message":"5041","line":19,"column":10,"nodeType":"5026","messageId":"5027","endLine":19,"endColumn":15},{"ruleId":"5031","severity":1,"message":"5042","line":37,"column":6,"nodeType":"5033","endLine":37,"endColumn":25,"suggestions":"5043"},{"ruleId":"5031","severity":1,"message":"5044","line":47,"column":6,"nodeType":"5033","endLine":47,"endColumn":16,"suggestions":"5045"},{"ruleId":"5024","severity":1,"message":"5046","line":53,"column":9,"nodeType":"5026","messageId":"5027","endLine":53,"endColumn":27},{"ruleId":"5031","severity":1,"message":"5047","line":42,"column":6,"nodeType":"5033","endLine":42,"endColumn":8,"suggestions":"5048"},{"ruleId":"5031","severity":1,"message":"5049","line":47,"column":6,"nodeType":"5033","endLine":47,"endColumn":18,"suggestions":"5050"},{"ruleId":"5031","severity":1,"message":"5051","line":56,"column":6,"nodeType":"5033","endLine":56,"endColumn":18,"suggestions":"5052"},{"ruleId":"5031","severity":1,"message":"5053","line":70,"column":6,"nodeType":"5033","endLine":70,"endColumn":14,"suggestions":"5054"},{"ruleId":"5031","severity":1,"message":"5047","line":76,"column":6,"nodeType":"5033","endLine":76,"endColumn":29,"suggestions":"5055"},{"ruleId":"5031","severity":1,"message":"5056","line":81,"column":6,"nodeType":"5033","endLine":81,"endColumn":23,"suggestions":"5057"},{"ruleId":"5031","severity":1,"message":"5047","line":85,"column":6,"nodeType":"5033","endLine":85,"endColumn":8,"suggestions":"5058"},{"ruleId":"5024","severity":1,"message":"5059","line":43,"column":10,"nodeType":"5026","messageId":"5027","endLine":43,"endColumn":21},{"ruleId":"5031","severity":1,"message":"5060","line":62,"column":6,"nodeType":"5033","endLine":62,"endColumn":14,"suggestions":"5061"},{"ruleId":"5031","severity":1,"message":"5047","line":72,"column":6,"nodeType":"5033","endLine":72,"endColumn":23,"suggestions":"5062"},{"ruleId":"5031","severity":1,"message":"5063","line":79,"column":6,"nodeType":"5033","endLine":79,"endColumn":25,"suggestions":"5064"},{"ruleId":"5031","severity":1,"message":"5063","line":90,"column":6,"nodeType":"5033","endLine":90,"endColumn":25,"suggestions":"5065"},{"ruleId":"5031","severity":1,"message":"5066","line":96,"column":6,"nodeType":"5033","endLine":96,"endColumn":8,"suggestions":"5067"},{"ruleId":"5031","severity":1,"message":"5068","line":105,"column":6,"nodeType":"5033","endLine":105,"endColumn":20,"suggestions":"5069"},{"ruleId":"5031","severity":1,"message":"5044","line":119,"column":6,"nodeType":"5033","endLine":119,"endColumn":8,"suggestions":"5070"},{"ruleId":"5031","severity":1,"message":"5044","line":124,"column":6,"nodeType":"5033","endLine":124,"endColumn":8,"suggestions":"5071"},{"ruleId":"5031","severity":1,"message":"5044","line":129,"column":6,"nodeType":"5033","endLine":129,"endColumn":8,"suggestions":"5072"},{"ruleId":"5031","severity":1,"message":"5044","line":134,"column":6,"nodeType":"5033","endLine":134,"endColumn":8,"suggestions":"5073"},{"ruleId":"5031","severity":1,"message":"5044","line":146,"column":6,"nodeType":"5033","endLine":146,"endColumn":8,"suggestions":"5074"},{"ruleId":"5031","severity":1,"message":"5075","line":33,"column":6,"nodeType":"5033","endLine":33,"endColumn":34,"suggestions":"5076"},{"ruleId":"5031","severity":1,"message":"5068","line":33,"column":6,"nodeType":"5033","endLine":33,"endColumn":25,"suggestions":"5077"},{"ruleId":"5031","severity":1,"message":"5068","line":33,"column":6,"nodeType":"5033","endLine":33,"endColumn":20,"suggestions":"5078"},{"ruleId":"5031","severity":1,"message":"5079","line":38,"column":6,"nodeType":"5033","endLine":38,"endColumn":8,"suggestions":"5080"},{"ruleId":"5031","severity":1,"message":"5081","line":38,"column":6,"nodeType":"5033","endLine":38,"endColumn":20,"suggestions":"5082"},{"ruleId":"5031","severity":1,"message":"5083","line":46,"column":6,"nodeType":"5033","endLine":46,"endColumn":25,"suggestions":"5084"},{"ruleId":"5031","severity":1,"message":"5066","line":51,"column":6,"nodeType":"5033","endLine":51,"endColumn":8,"suggestions":"5085"},{"ruleId":"5031","severity":1,"message":"5086","line":55,"column":6,"nodeType":"5033","endLine":55,"endColumn":12,"suggestions":"5087"},{"ruleId":"5031","severity":1,"message":"5088","line":38,"column":6,"nodeType":"5033","endLine":38,"endColumn":20,"suggestions":"5089"},{"ruleId":"5031","severity":1,"message":"5090","line":46,"column":6,"nodeType":"5033","endLine":46,"endColumn":25,"suggestions":"5091"},{"ruleId":"5031","severity":1,"message":"5092","line":51,"column":6,"nodeType":"5033","endLine":51,"endColumn":8,"suggestions":"5093"},{"ruleId":"5031","severity":1,"message":"5068","line":31,"column":6,"nodeType":"5033","endLine":31,"endColumn":20,"suggestions":"5094"},{"ruleId":"5024","severity":1,"message":"5095","line":52,"column":9,"nodeType":"5026","messageId":"5027","endLine":52,"endColumn":20},{"ruleId":"5024","severity":1,"message":"5037","line":21,"column":10,"nodeType":"5026","messageId":"5027","endLine":21,"endColumn":17},{"ruleId":"5024","severity":1,"message":"5038","line":22,"column":19,"nodeType":"5026","messageId":"5027","endLine":22,"endColumn":29},{"ruleId":"5031","severity":1,"message":"5042","line":29,"column":6,"nodeType":"5033","endLine":29,"endColumn":25,"suggestions":"5096"},{"ruleId":"5024","severity":1,"message":"5097","line":10,"column":10,"nodeType":"5026","messageId":"5027","endLine":10,"endColumn":32},{"ruleId":"5024","severity":1,"message":"5098","line":11,"column":10,"nodeType":"5026","messageId":"5027","endLine":11,"endColumn":22},{"ruleId":"5024","severity":1,"message":"5099","line":12,"column":15,"nodeType":"5026","messageId":"5027","endLine":12,"endColumn":19},{"ruleId":"5024","severity":1,"message":"5100","line":12,"column":21,"nodeType":"5026","messageId":"5027","endLine":12,"endColumn":31},{"ruleId":"5024","severity":1,"message":"5101","line":15,"column":10,"nodeType":"5026","messageId":"5027","endLine":15,"endColumn":17},{"ruleId":"5024","severity":1,"message":"5102","line":17,"column":10,"nodeType":"5026","messageId":"5027","endLine":17,"endColumn":16},{"ruleId":"5024","severity":1,"message":"5039","line":18,"column":10,"nodeType":"5026","messageId":"5027","endLine":18,"endColumn":27},{"ruleId":"5024","severity":1,"message":"5103","line":49,"column":9,"nodeType":"5026","messageId":"5027","endLine":49,"endColumn":17},{"ruleId":"5024","severity":1,"message":"5097","line":10,"column":10,"nodeType":"5026","messageId":"5027","endLine":10,"endColumn":32},{"ruleId":"5024","severity":1,"message":"5098","line":11,"column":10,"nodeType":"5026","messageId":"5027","endLine":11,"endColumn":22},{"ruleId":"5024","severity":1,"message":"5099","line":12,"column":15,"nodeType":"5026","messageId":"5027","endLine":12,"endColumn":19},{"ruleId":"5024","severity":1,"message":"5100","line":12,"column":21,"nodeType":"5026","messageId":"5027","endLine":12,"endColumn":31},{"ruleId":"5024","severity":1,"message":"5101","line":15,"column":10,"nodeType":"5026","messageId":"5027","endLine":15,"endColumn":17},{"ruleId":"5024","severity":1,"message":"5102","line":17,"column":10,"nodeType":"5026","messageId":"5027","endLine":17,"endColumn":16},{"ruleId":"5024","severity":1,"message":"5039","line":18,"column":10,"nodeType":"5026","messageId":"5027","endLine":18,"endColumn":27},{"ruleId":"5024","severity":1,"message":"5103","line":49,"column":9,"nodeType":"5026","messageId":"5027","endLine":49,"endColumn":17},{"ruleId":"5024","severity":1,"message":"5100","line":1,"column":15,"nodeType":"5026","messageId":"5027","endLine":1,"endColumn":25},{"ruleId":"5024","severity":1,"message":"5101","line":14,"column":10,"nodeType":"5026","messageId":"5027","endLine":14,"endColumn":17},{"ruleId":"5024","severity":1,"message":"5104","line":20,"column":10,"nodeType":"5026","messageId":"5027","endLine":20,"endColumn":20},{"ruleId":"5024","severity":1,"message":"5105","line":13,"column":10,"nodeType":"5026","messageId":"5027","endLine":13,"endColumn":28},{"ruleId":"5031","severity":1,"message":"5106","line":12,"column":6,"nodeType":"5033","endLine":12,"endColumn":8,"suggestions":"5107"},{"ruleId":"5031","severity":1,"message":"5108","line":57,"column":6,"nodeType":"5033","endLine":57,"endColumn":12,"suggestions":"5109"},{"ruleId":"5031","severity":1,"message":"5110","line":67,"column":6,"nodeType":"5033","endLine":67,"endColumn":22,"suggestions":"5111"},{"ruleId":"5024","severity":1,"message":"5112","line":139,"column":27,"nodeType":"5026","messageId":"5027","endLine":139,"endColumn":35},{"ruleId":"5024","severity":1,"message":"5113","line":5,"column":10,"nodeType":"5026","messageId":"5027","endLine":5,"endColumn":25},{"ruleId":"5024","severity":1,"message":"5114","line":4,"column":7,"nodeType":"5026","messageId":"5027","endLine":4,"endColumn":15},{"ruleId":"5024","severity":1,"message":"5115","line":2,"column":18,"nodeType":"5026","messageId":"5027","endLine":2,"endColumn":23},{"ruleId":"5024","severity":1,"message":"5116","line":16,"column":9,"nodeType":"5026","messageId":"5027","endLine":16,"endColumn":15},{"ruleId":"5031","severity":1,"message":"5117","line":29,"column":6,"nodeType":"5033","endLine":29,"endColumn":38,"suggestions":"5118"},{"ruleId":"5031","severity":1,"message":"5119","line":31,"column":6,"nodeType":"5033","endLine":31,"endColumn":20,"suggestions":"5120"},{"ruleId":"5031","severity":1,"message":"5042","line":29,"column":6,"nodeType":"5033","endLine":29,"endColumn":25,"suggestions":"5121"},{"ruleId":"5031","severity":1,"message":"5122","line":18,"column":6,"nodeType":"5033","endLine":18,"endColumn":8,"suggestions":"5123"},{"ruleId":"5024","severity":1,"message":"5124","line":22,"column":10,"nodeType":"5026","messageId":"5027","endLine":22,"endColumn":38},{"ruleId":"5024","severity":1,"message":"5103","line":12,"column":9,"nodeType":"5026","messageId":"5027","endLine":12,"endColumn":17},{"ruleId":"5024","severity":1,"message":"5124","line":18,"column":10,"nodeType":"5026","messageId":"5027","endLine":18,"endColumn":38},{"ruleId":"5024","severity":1,"message":"5125","line":22,"column":10,"nodeType":"5026","messageId":"5027","endLine":22,"endColumn":39},{"ruleId":"5031","severity":1,"message":"5122","line":27,"column":6,"nodeType":"5033","endLine":27,"endColumn":8,"suggestions":"5126"},{"ruleId":"5024","severity":1,"message":"5127","line":20,"column":10,"nodeType":"5026","messageId":"5027","endLine":20,"endColumn":25},{"ruleId":"5024","severity":1,"message":"5128","line":20,"column":27,"nodeType":"5026","messageId":"5027","endLine":20,"endColumn":45},{"ruleId":"5024","severity":1,"message":"5129","line":25,"column":10,"nodeType":"5026","messageId":"5027","endLine":25,"endColumn":37},{"ruleId":"5024","severity":1,"message":"5130","line":48,"column":11,"nodeType":"5026","messageId":"5027","endLine":48,"endColumn":18},{"ruleId":"5031","severity":1,"message":"5051","line":132,"column":6,"nodeType":"5033","endLine":132,"endColumn":29,"suggestions":"5131"},{"ruleId":"5031","severity":1,"message":"5132","line":140,"column":6,"nodeType":"5033","endLine":140,"endColumn":23,"suggestions":"5133"},{"ruleId":"5031","severity":1,"message":"5134","line":146,"column":6,"nodeType":"5033","endLine":146,"endColumn":8,"suggestions":"5135"},{"ruleId":"5031","severity":1,"message":"5122","line":150,"column":6,"nodeType":"5033","endLine":150,"endColumn":8,"suggestions":"5136"},{"ruleId":"5024","severity":1,"message":"5137","line":80,"column":9,"nodeType":"5026","messageId":"5027","endLine":80,"endColumn":21},{"ruleId":"5024","severity":1,"message":"5138","line":16,"column":10,"nodeType":"5026","messageId":"5027","endLine":16,"endColumn":22},{"ruleId":"5024","severity":1,"message":"5139","line":3,"column":10,"nodeType":"5026","messageId":"5027","endLine":3,"endColumn":16},{"ruleId":"5024","severity":1,"message":"5140","line":16,"column":10,"nodeType":"5026","messageId":"5027","endLine":16,"endColumn":27},{"ruleId":"5024","severity":1,"message":"5141","line":17,"column":10,"nodeType":"5026","messageId":"5027","endLine":17,"endColumn":23},{"ruleId":"5024","severity":1,"message":"5030","line":18,"column":10,"nodeType":"5026","messageId":"5027","endLine":18,"endColumn":23},{"ruleId":"5031","severity":1,"message":"5142","line":48,"column":6,"nodeType":"5033","endLine":48,"endColumn":8,"suggestions":"5143"},{"ruleId":"5031","severity":1,"message":"5117","line":53,"column":6,"nodeType":"5033","endLine":53,"endColumn":17,"suggestions":"5144"},{"ruleId":"5145","severity":1,"message":"5146","line":22,"column":9,"nodeType":"5147","messageId":"5148","endLine":22,"endColumn":11},{"ruleId":"5145","severity":1,"message":"5146","line":23,"column":9,"nodeType":"5147","messageId":"5148","endLine":23,"endColumn":11},{"ruleId":"5024","severity":1,"message":"5116","line":35,"column":9,"nodeType":"5026","messageId":"5027","endLine":35,"endColumn":15},{"ruleId":"5024","severity":1,"message":"5115","line":2,"column":10,"nodeType":"5026","messageId":"5027","endLine":2,"endColumn":15},{"ruleId":"5024","severity":1,"message":"5149","line":1,"column":17,"nodeType":"5026","messageId":"5027","endLine":1,"endColumn":26},{"ruleId":"5024","severity":1,"message":"5150","line":1,"column":38,"nodeType":"5026","messageId":"5027","endLine":1,"endColumn":47},{"ruleId":"5031","severity":1,"message":"5151","line":78,"column":6,"nodeType":"5033","endLine":78,"endColumn":60,"suggestions":"5152"},{"ruleId":"5024","severity":1,"message":"5153","line":7,"column":10,"nodeType":"5026","messageId":"5027","endLine":7,"endColumn":16},{"ruleId":"5024","severity":1,"message":"5154","line":15,"column":9,"nodeType":"5026","messageId":"5027","endLine":15,"endColumn":19},{"ruleId":"5024","severity":1,"message":"5155","line":11,"column":10,"nodeType":"5026","messageId":"5027","endLine":11,"endColumn":21},{"ruleId":"5024","severity":1,"message":"5156","line":22,"column":9,"nodeType":"5026","messageId":"5027","endLine":22,"endColumn":26},{"ruleId":"5024","severity":1,"message":"5157","line":2,"column":10,"nodeType":"5026","messageId":"5027","endLine":2,"endColumn":19},{"ruleId":"5024","severity":1,"message":"5158","line":2,"column":33,"nodeType":"5026","messageId":"5027","endLine":2,"endColumn":36},{"ruleId":"5024","severity":1,"message":"5159","line":3,"column":10,"nodeType":"5026","messageId":"5027","endLine":3,"endColumn":19},{"ruleId":"5024","severity":1,"message":"5160","line":11,"column":10,"nodeType":"5026","messageId":"5027","endLine":11,"endColumn":21},{"ruleId":"5024","severity":1,"message":"5161","line":15,"column":9,"nodeType":"5026","messageId":"5027","endLine":15,"endColumn":17},{"ruleId":"5024","severity":1,"message":"5100","line":13,"column":15,"nodeType":"5026","messageId":"5027","endLine":13,"endColumn":25},{"ruleId":"5024","severity":1,"message":"5162","line":17,"column":10,"nodeType":"5026","messageId":"5027","endLine":17,"endColumn":27},{"ruleId":"5024","severity":1,"message":"5163","line":17,"column":29,"nodeType":"5026","messageId":"5027","endLine":17,"endColumn":42},{"ruleId":"5024","severity":1,"message":"5164","line":21,"column":3,"nodeType":"5026","messageId":"5027","endLine":21,"endColumn":19},{"ruleId":"5024","severity":1,"message":"5165","line":22,"column":3,"nodeType":"5026","messageId":"5027","endLine":22,"endColumn":18},{"ruleId":"5024","severity":1,"message":"5166","line":24,"column":10,"nodeType":"5026","messageId":"5027","endLine":24,"endColumn":21},{"ruleId":"5024","severity":1,"message":"5167","line":28,"column":10,"nodeType":"5026","messageId":"5027","endLine":28,"endColumn":23},{"ruleId":"5024","severity":1,"message":"5168","line":5,"column":10,"nodeType":"5026","messageId":"5027","endLine":5,"endColumn":24},{"ruleId":"5024","severity":1,"message":"5099","line":9,"column":27,"nodeType":"5026","messageId":"5027","endLine":9,"endColumn":31},{"ruleId":"5031","severity":1,"message":"5169","line":54,"column":6,"nodeType":"5033","endLine":54,"endColumn":17,"suggestions":"5170"},{"ruleId":"5024","severity":1,"message":"5103","line":16,"column":9,"nodeType":"5026","messageId":"5027","endLine":16,"endColumn":17},{"ruleId":"5024","severity":1,"message":"5171","line":28,"column":9,"nodeType":"5026","messageId":"5027","endLine":28,"endColumn":22},{"ruleId":"5031","severity":1,"message":"5086","line":34,"column":6,"nodeType":"5033","endLine":34,"endColumn":12,"suggestions":"5172"},{"ruleId":"5024","severity":1,"message":"5173","line":58,"column":10,"nodeType":"5026","messageId":"5027","endLine":58,"endColumn":16},{"ruleId":"5024","severity":1,"message":"5174","line":58,"column":18,"nodeType":"5026","messageId":"5027","endLine":58,"endColumn":31},{"ruleId":"5024","severity":1,"message":"5103","line":51,"column":9,"nodeType":"5026","messageId":"5027","endLine":51,"endColumn":17},{"ruleId":"5024","severity":1,"message":"5137","line":53,"column":9,"nodeType":"5026","messageId":"5027","endLine":53,"endColumn":21},{"ruleId":"5024","severity":1,"message":"5175","line":7,"column":8,"nodeType":"5026","messageId":"5027","endLine":7,"endColumn":14},{"ruleId":"5024","severity":1,"message":"5176","line":29,"column":10,"nodeType":"5026","messageId":"5027","endLine":29,"endColumn":42},{"ruleId":"5024","severity":1,"message":"5177","line":42,"column":10,"nodeType":"5026","messageId":"5027","endLine":42,"endColumn":43},{"ruleId":"5024","severity":1,"message":"5178","line":4,"column":11,"nodeType":"5026","messageId":"5027","endLine":4,"endColumn":22},{"ruleId":"5024","severity":1,"message":"5179","line":3,"column":10,"nodeType":"5026","messageId":"5027","endLine":3,"endColumn":15},{"ruleId":"5024","severity":1,"message":"5180","line":3,"column":17,"nodeType":"5026","messageId":"5027","endLine":3,"endColumn":35},{"ruleId":"5024","severity":1,"message":"5181","line":5,"column":10,"nodeType":"5026","messageId":"5027","endLine":5,"endColumn":27},{"ruleId":"5024","severity":1,"message":"5139","line":6,"column":10,"nodeType":"5026","messageId":"5027","endLine":6,"endColumn":16},{"ruleId":"5024","severity":1,"message":"5153","line":7,"column":10,"nodeType":"5026","messageId":"5027","endLine":7,"endColumn":16},{"ruleId":"5024","severity":1,"message":"5182","line":8,"column":10,"nodeType":"5026","messageId":"5027","endLine":8,"endColumn":21},{"ruleId":"5024","severity":1,"message":"5183","line":8,"column":23,"nodeType":"5026","messageId":"5027","endLine":8,"endColumn":32},{"ruleId":"5024","severity":1,"message":"5184","line":10,"column":10,"nodeType":"5026","messageId":"5027","endLine":10,"endColumn":26},{"ruleId":"5024","severity":1,"message":"5140","line":11,"column":10,"nodeType":"5026","messageId":"5027","endLine":11,"endColumn":27},{"ruleId":"5024","severity":1,"message":"5185","line":37,"column":9,"nodeType":"5026","messageId":"5027","endLine":37,"endColumn":28},{"ruleId":"5024","severity":1,"message":"5186","line":7,"column":37,"nodeType":"5026","messageId":"5027","endLine":7,"endColumn":42},{"ruleId":"5024","severity":1,"message":"5099","line":14,"column":15,"nodeType":"5026","messageId":"5027","endLine":14,"endColumn":19},{"ruleId":"5024","severity":1,"message":"5100","line":14,"column":21,"nodeType":"5026","messageId":"5027","endLine":14,"endColumn":31},{"ruleId":"5031","severity":1,"message":"5151","line":47,"column":6,"nodeType":"5033","endLine":47,"endColumn":18,"suggestions":"5187"},{"ruleId":"5031","severity":1,"message":"5047","line":53,"column":6,"nodeType":"5033","endLine":53,"endColumn":8,"suggestions":"5188"},{"ruleId":"5024","severity":1,"message":"5163","line":15,"column":29,"nodeType":"5026","messageId":"5027","endLine":15,"endColumn":42},{"ruleId":"5031","severity":1,"message":"5189","line":62,"column":6,"nodeType":"5033","endLine":62,"endColumn":8,"suggestions":"5190"},{"ruleId":"5031","severity":1,"message":"5191","line":138,"column":6,"nodeType":"5033","endLine":138,"endColumn":25,"suggestions":"5192"},{"ruleId":"5031","severity":1,"message":"5047","line":57,"column":6,"nodeType":"5033","endLine":57,"endColumn":8,"suggestions":"5193"},{"ruleId":"5031","severity":1,"message":"5191","line":130,"column":6,"nodeType":"5033","endLine":130,"endColumn":25,"suggestions":"5194"},{"ruleId":"5024","severity":1,"message":"5149","line":1,"column":27,"nodeType":"5026","messageId":"5027","endLine":1,"endColumn":36},{"ruleId":"5024","severity":1,"message":"5195","line":45,"column":10,"nodeType":"5026","messageId":"5027","endLine":45,"endColumn":22},{"ruleId":"5031","severity":1,"message":"5047","line":51,"column":6,"nodeType":"5033","endLine":51,"endColumn":8,"suggestions":"5196"},{"ruleId":"5031","severity":1,"message":"5197","line":63,"column":6,"nodeType":"5033","endLine":63,"endColumn":43,"suggestions":"5198"},{"ruleId":"5024","severity":1,"message":"5199","line":87,"column":9,"nodeType":"5026","messageId":"5027","endLine":87,"endColumn":25},{"ruleId":"5031","severity":1,"message":"5047","line":44,"column":6,"nodeType":"5033","endLine":44,"endColumn":8,"suggestions":"5200"},{"ruleId":"5031","severity":1,"message":"5201","line":55,"column":6,"nodeType":"5033","endLine":55,"endColumn":38,"suggestions":"5202"},{"ruleId":"5024","severity":1,"message":"5203","line":19,"column":10,"nodeType":"5026","messageId":"5027","endLine":19,"endColumn":14},{"ruleId":"5031","severity":1,"message":"5169","line":48,"column":6,"nodeType":"5033","endLine":48,"endColumn":17,"suggestions":"5204"},{"ruleId":"5024","severity":1,"message":"5205","line":98,"column":9,"nodeType":"5026","messageId":"5027","endLine":98,"endColumn":26},{"ruleId":"5031","severity":1,"message":"5047","line":46,"column":6,"nodeType":"5033","endLine":46,"endColumn":8,"suggestions":"5206"},{"ruleId":"5031","severity":1,"message":"5207","line":41,"column":6,"nodeType":"5033","endLine":41,"endColumn":8,"suggestions":"5208"},{"ruleId":"5031","severity":1,"message":"5032","line":46,"column":6,"nodeType":"5033","endLine":46,"endColumn":17,"suggestions":"5209"},{"ruleId":"5024","severity":1,"message":"5210","line":22,"column":16,"nodeType":"5026","messageId":"5027","endLine":22,"endColumn":23},{"ruleId":"5024","severity":1,"message":"5211","line":22,"column":25,"nodeType":"5026","messageId":"5027","endLine":22,"endColumn":37},{"ruleId":"5024","severity":1,"message":"5212","line":30,"column":24,"nodeType":"5026","messageId":"5027","endLine":30,"endColumn":39},{"ruleId":"5024","severity":1,"message":"5168","line":5,"column":10,"nodeType":"5026","messageId":"5027","endLine":5,"endColumn":24},{"ruleId":"5024","severity":1,"message":"5099","line":9,"column":27,"nodeType":"5026","messageId":"5027","endLine":9,"endColumn":31},{"ruleId":"5031","severity":1,"message":"5068","line":61,"column":6,"nodeType":"5033","endLine":61,"endColumn":18,"suggestions":"5213"},{"ruleId":"5024","severity":1,"message":"5214","line":1,"column":10,"nodeType":"5026","messageId":"5027","endLine":1,"endColumn":15},{"ruleId":"5024","severity":1,"message":"5214","line":1,"column":10,"nodeType":"5026","messageId":"5027","endLine":1,"endColumn":15},{"ruleId":"5024","severity":1,"message":"5215","line":2,"column":10,"nodeType":"5026","messageId":"5027","endLine":2,"endColumn":15},{"ruleId":"5024","severity":1,"message":"5214","line":1,"column":10,"nodeType":"5026","messageId":"5027","endLine":1,"endColumn":15},{"ruleId":"5024","severity":1,"message":"5215","line":2,"column":10,"nodeType":"5026","messageId":"5027","endLine":2,"endColumn":15},{"ruleId":"5031","severity":1,"message":"5151","line":45,"column":6,"nodeType":"5033","endLine":45,"endColumn":22,"suggestions":"5216"},{"ruleId":"5024","severity":1,"message":"5217","line":16,"column":23,"nodeType":"5026","messageId":"5027","endLine":16,"endColumn":34},{"ruleId":"5024","severity":1,"message":"5218","line":17,"column":10,"nodeType":"5026","messageId":"5027","endLine":17,"endColumn":20},{"ruleId":"5024","severity":1,"message":"5219","line":19,"column":10,"nodeType":"5026","messageId":"5027","endLine":19,"endColumn":21},{"ruleId":"5031","severity":1,"message":"5169","line":35,"column":6,"nodeType":"5033","endLine":35,"endColumn":19,"suggestions":"5220"},{"ruleId":"5024","severity":1,"message":"5221","line":6,"column":23,"nodeType":"5026","messageId":"5027","endLine":6,"endColumn":34},{"ruleId":"5024","severity":1,"message":"5222","line":21,"column":10,"nodeType":"5026","messageId":"5027","endLine":21,"endColumn":27},{"ruleId":"5024","severity":1,"message":"5223","line":10,"column":10,"nodeType":"5026","messageId":"5027","endLine":10,"endColumn":23},{"ruleId":"5031","severity":1,"message":"5224","line":50,"column":6,"nodeType":"5033","endLine":50,"endColumn":23,"suggestions":"5225"},{"ruleId":"5031","severity":1,"message":"5226","line":54,"column":6,"nodeType":"5033","endLine":54,"endColumn":24,"suggestions":"5227"},{"ruleId":"5031","severity":1,"message":"5032","line":63,"column":6,"nodeType":"5033","endLine":63,"endColumn":17,"suggestions":"5228"},{"ruleId":"5031","severity":1,"message":"5068","line":70,"column":6,"nodeType":"5033","endLine":70,"endColumn":19,"suggestions":"5229"},{"ruleId":"5031","severity":1,"message":"5230","line":78,"column":6,"nodeType":"5033","endLine":78,"endColumn":16,"suggestions":"5231"},{"ruleId":"5024","severity":1,"message":"5221","line":6,"column":23,"nodeType":"5026","messageId":"5027","endLine":6,"endColumn":34},{"ruleId":"5024","severity":1,"message":"5222","line":21,"column":10,"nodeType":"5026","messageId":"5027","endLine":21,"endColumn":27},{"ruleId":"5024","severity":1,"message":"5232","line":5,"column":37,"nodeType":"5026","messageId":"5027","endLine":5,"endColumn":43},{"ruleId":"5024","severity":1,"message":"5233","line":19,"column":22,"nodeType":"5026","messageId":"5027","endLine":19,"endColumn":40},{"ruleId":"5031","severity":1,"message":"5068","line":70,"column":6,"nodeType":"5033","endLine":70,"endColumn":26,"suggestions":"5234"},{"ruleId":"5031","severity":1,"message":"5230","line":78,"column":6,"nodeType":"5033","endLine":78,"endColumn":16,"suggestions":"5235"},{"ruleId":"5024","severity":1,"message":"5221","line":6,"column":23,"nodeType":"5026","messageId":"5027","endLine":6,"endColumn":34},{"ruleId":"5031","severity":1,"message":"5151","line":74,"column":6,"nodeType":"5033","endLine":74,"endColumn":71,"suggestions":"5236"},{"ruleId":"5031","severity":1,"message":"5151","line":88,"column":6,"nodeType":"5033","endLine":88,"endColumn":21,"suggestions":"5237"},{"ruleId":"5031","severity":1,"message":"5238","line":68,"column":6,"nodeType":"5033","endLine":68,"endColumn":26,"suggestions":"5239"},{"ruleId":"5024","severity":1,"message":"5240","line":88,"column":43,"nodeType":"5026","messageId":"5027","endLine":88,"endColumn":54},{"ruleId":"5031","severity":1,"message":"5241","line":28,"column":6,"nodeType":"5033","endLine":28,"endColumn":13,"suggestions":"5242"},{"ruleId":"5024","severity":1,"message":"5178","line":4,"column":11,"nodeType":"5026","messageId":"5027","endLine":4,"endColumn":22},{"ruleId":"5024","severity":1,"message":"5243","line":3,"column":15,"nodeType":"5026","messageId":"5027","endLine":3,"endColumn":19},{"ruleId":"5024","severity":1,"message":"5244","line":12,"column":10,"nodeType":"5026","messageId":"5027","endLine":12,"endColumn":26},{"ruleId":"5024","severity":1,"message":"5245","line":16,"column":10,"nodeType":"5026","messageId":"5027","endLine":16,"endColumn":17},{"ruleId":"5024","severity":1,"message":"5164","line":3,"column":10,"nodeType":"5026","messageId":"5027","endLine":3,"endColumn":26},{"ruleId":"5024","severity":1,"message":"5246","line":3,"column":10,"nodeType":"5026","messageId":"5027","endLine":3,"endColumn":14},{"ruleId":"5031","severity":1,"message":"5247","line":53,"column":6,"nodeType":"5033","endLine":53,"endColumn":16,"suggestions":"5248"},{"ruleId":"5031","severity":1,"message":"5249","line":72,"column":6,"nodeType":"5033","endLine":72,"endColumn":17,"suggestions":"5250"},{"ruleId":"5031","severity":1,"message":"5117","line":49,"column":6,"nodeType":"5033","endLine":49,"endColumn":17,"suggestions":"5251"},{"ruleId":"5031","severity":1,"message":"5224","line":53,"column":6,"nodeType":"5033","endLine":53,"endColumn":23,"suggestions":"5252"},{"ruleId":"5031","severity":1,"message":"5226","line":57,"column":6,"nodeType":"5033","endLine":57,"endColumn":24,"suggestions":"5253"},{"ruleId":"5024","severity":1,"message":"5149","line":1,"column":17,"nodeType":"5026","messageId":"5027","endLine":1,"endColumn":26},{"ruleId":"5024","severity":1,"message":"5254","line":15,"column":10,"nodeType":"5026","messageId":"5027","endLine":15,"endColumn":21},{"ruleId":"5024","severity":1,"message":"5217","line":15,"column":23,"nodeType":"5026","messageId":"5027","endLine":15,"endColumn":34},{"ruleId":"5024","severity":1,"message":"5218","line":16,"column":10,"nodeType":"5026","messageId":"5027","endLine":16,"endColumn":20},{"ruleId":"5024","severity":1,"message":"5102","line":17,"column":10,"nodeType":"5026","messageId":"5027","endLine":17,"endColumn":16},{"ruleId":"5024","severity":1,"message":"5255","line":18,"column":10,"nodeType":"5026","messageId":"5027","endLine":18,"endColumn":15},{"ruleId":"5024","severity":1,"message":"5256","line":1,"column":17,"nodeType":"5026","messageId":"5027","endLine":1,"endColumn":25},{"ruleId":"5024","severity":1,"message":"5162","line":14,"column":10,"nodeType":"5026","messageId":"5027","endLine":14,"endColumn":27},{"ruleId":"5024","severity":1,"message":"5257","line":9,"column":10,"nodeType":"5026","messageId":"5027","endLine":9,"endColumn":20},{"ruleId":"5024","severity":1,"message":"5258","line":10,"column":10,"nodeType":"5026","messageId":"5027","endLine":10,"endColumn":33},{"ruleId":"5024","severity":1,"message":"5100","line":5,"column":21,"nodeType":"5026","messageId":"5027","endLine":5,"endColumn":31},{"ruleId":"5024","severity":1,"message":"5101","line":27,"column":10,"nodeType":"5026","messageId":"5027","endLine":27,"endColumn":17},{"ruleId":"5024","severity":1,"message":"5167","line":28,"column":10,"nodeType":"5026","messageId":"5027","endLine":28,"endColumn":23},{"ruleId":"5024","severity":1,"message":"5259","line":29,"column":10,"nodeType":"5026","messageId":"5027","endLine":29,"endColumn":28},{"ruleId":"5024","severity":1,"message":"5260","line":40,"column":9,"nodeType":"5026","messageId":"5027","endLine":40,"endColumn":21},{"ruleId":"5024","severity":1,"message":"5261","line":25,"column":10,"nodeType":"5026","messageId":"5027","endLine":25,"endColumn":27},{"ruleId":"5024","severity":1,"message":"5262","line":37,"column":9,"nodeType":"5026","messageId":"5027","endLine":37,"endColumn":37},{"ruleId":"5031","severity":1,"message":"5047","line":23,"column":6,"nodeType":"5033","endLine":23,"endColumn":8,"suggestions":"5263"},{"ruleId":"5024","severity":1,"message":"5264","line":13,"column":22,"nodeType":"5026","messageId":"5027","endLine":13,"endColumn":31},{"ruleId":"5024","severity":1,"message":"5265","line":13,"column":33,"nodeType":"5026","messageId":"5027","endLine":13,"endColumn":43},{"ruleId":"5024","severity":1,"message":"5030","line":18,"column":10,"nodeType":"5026","messageId":"5027","endLine":18,"endColumn":23},{"ruleId":"5024","severity":1,"message":"5266","line":32,"column":10,"nodeType":"5026","messageId":"5027","endLine":32,"endColumn":30},{"ruleId":"5024","severity":1,"message":"5256","line":1,"column":17,"nodeType":"5026","messageId":"5027","endLine":1,"endColumn":25},{"ruleId":"5024","severity":1,"message":"5267","line":45,"column":9,"nodeType":"5026","messageId":"5027","endLine":45,"endColumn":19},{"ruleId":"5031","severity":1,"message":"5207","line":74,"column":6,"nodeType":"5033","endLine":74,"endColumn":8,"suggestions":"5268"},{"ruleId":"5031","severity":1,"message":"5047","line":78,"column":6,"nodeType":"5033","endLine":78,"endColumn":8,"suggestions":"5269"},{"ruleId":"5024","severity":1,"message":"5210","line":21,"column":17,"nodeType":"5026","messageId":"5027","endLine":21,"endColumn":24},{"ruleId":"5031","severity":1,"message":"5047","line":68,"column":6,"nodeType":"5033","endLine":68,"endColumn":20,"suggestions":"5270"},{"ruleId":"5024","severity":1,"message":"5271","line":24,"column":10,"nodeType":"5026","messageId":"5027","endLine":24,"endColumn":27},{"ruleId":"5024","severity":1,"message":"5272","line":1,"column":27,"nodeType":"5026","messageId":"5027","endLine":1,"endColumn":36},{"ruleId":"5024","severity":1,"message":"5214","line":1,"column":10,"nodeType":"5026","messageId":"5027","endLine":1,"endColumn":15},{"ruleId":"5024","severity":1,"message":"5158","line":4,"column":10,"nodeType":"5026","messageId":"5027","endLine":4,"endColumn":13},{"ruleId":"5024","severity":1,"message":"5100","line":4,"column":15,"nodeType":"5026","messageId":"5027","endLine":4,"endColumn":25},{"ruleId":"5031","severity":1,"message":"5047","line":35,"column":6,"nodeType":"5033","endLine":35,"endColumn":8,"suggestions":"5273"},{"ruleId":"5024","severity":1,"message":"5274","line":68,"column":9,"nodeType":"5026","messageId":"5027","endLine":68,"endColumn":19},{"ruleId":"5024","severity":1,"message":"5275","line":17,"column":18,"nodeType":"5026","messageId":"5027","endLine":17,"endColumn":27},{"ruleId":"5024","severity":1,"message":"5256","line":1,"column":17,"nodeType":"5026","messageId":"5027","endLine":1,"endColumn":25},{"ruleId":"5024","severity":1,"message":"5276","line":14,"column":10,"nodeType":"5026","messageId":"5027","endLine":14,"endColumn":21},{"ruleId":"5024","severity":1,"message":"5277","line":14,"column":23,"nodeType":"5026","messageId":"5027","endLine":14,"endColumn":37},{"ruleId":"5024","severity":1,"message":"5232","line":5,"column":37,"nodeType":"5026","messageId":"5027","endLine":5,"endColumn":43},{"ruleId":"5024","severity":1,"message":"5278","line":12,"column":16,"nodeType":"5026","messageId":"5027","endLine":12,"endColumn":24},{"ruleId":"5024","severity":1,"message":"5272","line":14,"column":10,"nodeType":"5026","messageId":"5027","endLine":14,"endColumn":19},{"ruleId":"5024","severity":1,"message":"5233","line":18,"column":22,"nodeType":"5026","messageId":"5027","endLine":18,"endColumn":40},{"ruleId":"5031","severity":1,"message":"5279","line":85,"column":6,"nodeType":"5033","endLine":85,"endColumn":71,"suggestions":"5280"},{"ruleId":"5024","severity":1,"message":"5281","line":23,"column":10,"nodeType":"5026","messageId":"5027","endLine":23,"endColumn":32},{"ruleId":"5031","severity":1,"message":"5169","line":41,"column":6,"nodeType":"5033","endLine":41,"endColumn":23,"suggestions":"5282"},{"ruleId":"5024","severity":1,"message":"5283","line":68,"column":9,"nodeType":"5026","messageId":"5027","endLine":68,"endColumn":24},{"ruleId":"5031","severity":1,"message":"5169","line":40,"column":6,"nodeType":"5033","endLine":40,"endColumn":23,"suggestions":"5284"},{"ruleId":"5024","severity":1,"message":"5149","line":1,"column":17,"nodeType":"5026","messageId":"5027","endLine":1,"endColumn":26},{"ruleId":"5024","severity":1,"message":"5150","line":1,"column":38,"nodeType":"5026","messageId":"5027","endLine":1,"endColumn":47},{"ruleId":"5024","severity":1,"message":"5217","line":17,"column":23,"nodeType":"5026","messageId":"5027","endLine":17,"endColumn":34},{"ruleId":"5024","severity":1,"message":"5163","line":17,"column":29,"nodeType":"5026","messageId":"5027","endLine":17,"endColumn":42},{"ruleId":"5031","severity":1,"message":"5285","line":53,"column":6,"nodeType":"5033","endLine":53,"endColumn":8,"suggestions":"5286"},{"ruleId":"5031","severity":1,"message":"5151","line":59,"column":6,"nodeType":"5033","endLine":59,"endColumn":15,"suggestions":"5287"},{"ruleId":"5024","severity":1,"message":"5179","line":3,"column":10,"nodeType":"5026","messageId":"5027","endLine":3,"endColumn":15},{"ruleId":"5024","severity":1,"message":"5139","line":6,"column":10,"nodeType":"5026","messageId":"5027","endLine":6,"endColumn":16},{"ruleId":"5024","severity":1,"message":"5182","line":8,"column":10,"nodeType":"5026","messageId":"5027","endLine":8,"endColumn":21},{"ruleId":"5024","severity":1,"message":"5140","line":10,"column":10,"nodeType":"5026","messageId":"5027","endLine":10,"endColumn":27},{"ruleId":"5024","severity":1,"message":"5288","line":30,"column":9,"nodeType":"5026","messageId":"5027","endLine":30,"endColumn":16},{"ruleId":"5031","severity":1,"message":"5289","line":30,"column":6,"nodeType":"5033","endLine":30,"endColumn":8,"suggestions":"5290"},{"ruleId":"5031","severity":1,"message":"5291","line":34,"column":6,"nodeType":"5033","endLine":34,"endColumn":18,"suggestions":"5292"},{"ruleId":"5024","severity":1,"message":"5162","line":4,"column":10,"nodeType":"5026","messageId":"5027","endLine":4,"endColumn":27},{"ruleId":"5024","severity":1,"message":"5210","line":19,"column":30,"nodeType":"5026","messageId":"5027","endLine":19,"endColumn":37},{"ruleId":"5024","severity":1,"message":"5211","line":19,"column":39,"nodeType":"5026","messageId":"5027","endLine":19,"endColumn":51},{"ruleId":"5024","severity":1,"message":"5149","line":1,"column":17,"nodeType":"5026","messageId":"5027","endLine":1,"endColumn":26},{"ruleId":"5024","severity":1,"message":"5256","line":1,"column":37,"nodeType":"5026","messageId":"5027","endLine":1,"endColumn":45},{"ruleId":"5031","severity":1,"message":"5293","line":75,"column":6,"nodeType":"5033","endLine":75,"endColumn":14,"suggestions":"5294"},{"ruleId":"5024","severity":1,"message":"5295","line":42,"column":20,"nodeType":"5026","messageId":"5027","endLine":42,"endColumn":34},{"ruleId":"5031","severity":1,"message":"5047","line":46,"column":6,"nodeType":"5033","endLine":46,"endColumn":8,"suggestions":"5296"},{"ruleId":"5031","severity":1,"message":"5297","line":51,"column":6,"nodeType":"5033","endLine":51,"endColumn":13,"suggestions":"5298"},{"ruleId":"5024","severity":1,"message":"5256","line":1,"column":17,"nodeType":"5026","messageId":"5027","endLine":1,"endColumn":25},{"ruleId":"5024","severity":1,"message":"5103","line":20,"column":9,"nodeType":"5026","messageId":"5027","endLine":20,"endColumn":17},{"ruleId":"5299","severity":1,"message":"5300","line":27,"column":30,"nodeType":"5301","messageId":"5148","endLine":27,"endColumn":32},{"ruleId":"5024","severity":1,"message":"5258","line":12,"column":10,"nodeType":"5026","messageId":"5027","endLine":12,"endColumn":33},{"ruleId":"5024","severity":1,"message":"5162","line":15,"column":10,"nodeType":"5026","messageId":"5027","endLine":15,"endColumn":27},{"ruleId":"5024","severity":1,"message":"5302","line":41,"column":41,"nodeType":"5026","messageId":"5027","endLine":41,"endColumn":49},{"ruleId":"5024","severity":1,"message":"5103","line":55,"column":9,"nodeType":"5026","messageId":"5027","endLine":55,"endColumn":17},{"ruleId":"5031","severity":1,"message":"5303","line":42,"column":6,"nodeType":"5033","endLine":42,"endColumn":8,"suggestions":"5304"},{"ruleId":"5024","severity":1,"message":"5305","line":2,"column":17,"nodeType":"5026","messageId":"5027","endLine":2,"endColumn":29},{"ruleId":"5031","severity":1,"message":"5306","line":74,"column":6,"nodeType":"5033","endLine":74,"endColumn":16,"suggestions":"5307"},{"ruleId":"5031","severity":1,"message":"5169","line":66,"column":6,"nodeType":"5033","endLine":66,"endColumn":17,"suggestions":"5308"},{"ruleId":"5024","severity":1,"message":"5099","line":15,"column":15,"nodeType":"5026","messageId":"5027","endLine":15,"endColumn":19},{"ruleId":"5031","severity":1,"message":"5151","line":69,"column":6,"nodeType":"5033","endLine":69,"endColumn":27,"suggestions":"5309"},{"ruleId":"5031","severity":1,"message":"5047","line":45,"column":6,"nodeType":"5033","endLine":45,"endColumn":8,"suggestions":"5310"},{"ruleId":"5024","severity":1,"message":"5311","line":19,"column":10,"nodeType":"5026","messageId":"5027","endLine":19,"endColumn":21},{"ruleId":"5031","severity":1,"message":"5047","line":33,"column":6,"nodeType":"5033","endLine":33,"endColumn":8,"suggestions":"5312"},{"ruleId":"5024","severity":1,"message":"5313","line":33,"column":10,"nodeType":"5026","messageId":"5027","endLine":33,"endColumn":24},{"ruleId":"5024","severity":1,"message":"5314","line":33,"column":26,"nodeType":"5026","messageId":"5027","endLine":33,"endColumn":43},{"ruleId":"5031","severity":1,"message":"5047","line":42,"column":6,"nodeType":"5033","endLine":42,"endColumn":8,"suggestions":"5315"},{"ruleId":"5024","severity":1,"message":"5255","line":22,"column":10,"nodeType":"5026","messageId":"5027","endLine":22,"endColumn":15},{"ruleId":"5031","severity":1,"message":"5086","line":94,"column":6,"nodeType":"5033","endLine":94,"endColumn":13,"suggestions":"5316"},{"ruleId":"5031","severity":1,"message":"5047","line":40,"column":6,"nodeType":"5033","endLine":40,"endColumn":8,"suggestions":"5317"},{"ruleId":"5031","severity":1,"message":"5318","line":60,"column":6,"nodeType":"5033","endLine":60,"endColumn":28,"suggestions":"5319"},{"ruleId":"5031","severity":1,"message":"5169","line":64,"column":6,"nodeType":"5033","endLine":64,"endColumn":20,"suggestions":"5320"},{"ruleId":"5024","severity":1,"message":"5321","line":37,"column":9,"nodeType":"5026","messageId":"5027","endLine":37,"endColumn":18},{"ruleId":"5031","severity":1,"message":"5047","line":64,"column":6,"nodeType":"5033","endLine":64,"endColumn":8,"suggestions":"5322"},{"ruleId":"5024","severity":1,"message":"5323","line":10,"column":3,"nodeType":"5026","messageId":"5027","endLine":10,"endColumn":13},{"ruleId":"5024","severity":1,"message":"5324","line":11,"column":3,"nodeType":"5026","messageId":"5027","endLine":11,"endColumn":8},{"ruleId":"5299","severity":1,"message":"5300","line":121,"column":36,"nodeType":"5301","messageId":"5148","endLine":121,"endColumn":38},{"ruleId":"5024","severity":1,"message":"5325","line":26,"column":11,"nodeType":"5026","messageId":"5027","endLine":26,"endColumn":19},{"ruleId":"5031","severity":1,"message":"5326","line":41,"column":6,"nodeType":"5033","endLine":41,"endColumn":8,"suggestions":"5327"},{"ruleId":"5031","severity":1,"message":"5328","line":48,"column":6,"nodeType":"5033","endLine":48,"endColumn":8,"suggestions":"5329"},{"ruleId":"5024","severity":1,"message":"5256","line":1,"column":17,"nodeType":"5026","messageId":"5027","endLine":1,"endColumn":25},{"ruleId":"5031","severity":1,"message":"5047","line":36,"column":6,"nodeType":"5033","endLine":36,"endColumn":18,"suggestions":"5330"},{"ruleId":"5031","severity":1,"message":"5331","line":54,"column":6,"nodeType":"5033","endLine":54,"endColumn":21,"suggestions":"5332"},{"ruleId":"5031","severity":1,"message":"5333","line":46,"column":6,"nodeType":"5033","endLine":46,"endColumn":18,"suggestions":"5334"},{"ruleId":"5031","severity":1,"message":"5117","line":35,"column":6,"nodeType":"5033","endLine":35,"endColumn":19,"suggestions":"5335"},{"ruleId":"5031","severity":1,"message":"5169","line":49,"column":6,"nodeType":"5033","endLine":49,"endColumn":17,"suggestions":"5336"},{"ruleId":"5031","severity":1,"message":"5108","line":57,"column":6,"nodeType":"5033","endLine":57,"endColumn":12,"suggestions":"5337"},{"ruleId":"5031","severity":1,"message":"5110","line":67,"column":6,"nodeType":"5033","endLine":67,"endColumn":22,"suggestions":"5338"},{"ruleId":"5024","severity":1,"message":"5112","line":135,"column":27,"nodeType":"5026","messageId":"5027","endLine":135,"endColumn":35},{"ruleId":"5024","severity":1,"message":"5030","line":7,"column":10,"nodeType":"5026","messageId":"5027","endLine":7,"endColumn":23},{"ruleId":"5024","severity":1,"message":"5157","line":1,"column":15,"nodeType":"5026","messageId":"5027","endLine":1,"endColumn":24},{"ruleId":"5024","severity":1,"message":"5339","line":2,"column":10,"nodeType":"5026","messageId":"5027","endLine":2,"endColumn":16},{"ruleId":"5024","severity":1,"message":"5340","line":2,"column":27,"nodeType":"5026","messageId":"5027","endLine":2,"endColumn":35},{"ruleId":"5341","severity":1,"message":"5342","line":30,"column":5,"nodeType":"5343","messageId":"5148","endLine":34,"endColumn":9},{"ruleId":"5024","severity":1,"message":"5100","line":8,"column":10,"nodeType":"5026","messageId":"5027","endLine":8,"endColumn":20},{"ruleId":"5024","severity":1,"message":"5203","line":22,"column":10,"nodeType":"5026","messageId":"5027","endLine":22,"endColumn":14},{"ruleId":"5031","severity":1,"message":"5047","line":24,"column":6,"nodeType":"5033","endLine":24,"endColumn":28,"suggestions":"5344"},{"ruleId":"5024","severity":1,"message":"5244","line":17,"column":10,"nodeType":"5026","messageId":"5027","endLine":17,"endColumn":26},{"ruleId":"5031","severity":1,"message":"5345","line":68,"column":6,"nodeType":"5033","endLine":68,"endColumn":17,"suggestions":"5346"},{"ruleId":"5031","severity":1,"message":"5347","line":75,"column":6,"nodeType":"5033","endLine":75,"endColumn":17,"suggestions":"5348"},{"ruleId":"5024","severity":1,"message":"5100","line":3,"column":21,"nodeType":"5026","messageId":"5027","endLine":3,"endColumn":31},{"ruleId":"5024","severity":1,"message":"5349","line":31,"column":10,"nodeType":"5026","messageId":"5027","endLine":31,"endColumn":16},{"ruleId":"5024","severity":1,"message":"5115","line":31,"column":18,"nodeType":"5026","messageId":"5027","endLine":31,"endColumn":23},{"ruleId":"5024","severity":1,"message":"5160","line":32,"column":10,"nodeType":"5026","messageId":"5027","endLine":32,"endColumn":21},{"ruleId":"5024","severity":1,"message":"5350","line":50,"column":19,"nodeType":"5026","messageId":"5027","endLine":50,"endColumn":28},{"ruleId":"5024","severity":1,"message":"5351","line":3,"column":10,"nodeType":"5026","messageId":"5027","endLine":3,"endColumn":19},{"ruleId":"5024","severity":1,"message":"5352","line":3,"column":8,"nodeType":"5026","messageId":"5027","endLine":3,"endColumn":18},{"ruleId":"5024","severity":1,"message":"5353","line":5,"column":7,"nodeType":"5026","messageId":"5027","endLine":5,"endColumn":19},{"ruleId":"5031","severity":1,"message":"5354","line":37,"column":6,"nodeType":"5033","endLine":37,"endColumn":31,"suggestions":"5355"},{"ruleId":"5024","severity":1,"message":"5356","line":8,"column":10,"nodeType":"5026","messageId":"5027","endLine":8,"endColumn":23},{"ruleId":"5024","severity":1,"message":"5158","line":13,"column":10,"nodeType":"5026","messageId":"5027","endLine":13,"endColumn":13},{"ruleId":"5024","severity":1,"message":"5100","line":13,"column":15,"nodeType":"5026","messageId":"5027","endLine":13,"endColumn":25},{"ruleId":"5024","severity":1,"message":"5153","line":14,"column":10,"nodeType":"5026","messageId":"5027","endLine":14,"endColumn":16},{"ruleId":"5024","severity":1,"message":"5357","line":15,"column":10,"nodeType":"5026","messageId":"5027","endLine":15,"endColumn":19},{"ruleId":"5024","severity":1,"message":"5288","line":28,"column":9,"nodeType":"5026","messageId":"5027","endLine":28,"endColumn":16},{"ruleId":"5024","severity":1,"message":"5358","line":3,"column":8,"nodeType":"5026","messageId":"5027","endLine":3,"endColumn":13},{"ruleId":"5024","severity":1,"message":"5349","line":5,"column":10,"nodeType":"5026","messageId":"5027","endLine":5,"endColumn":16},{"ruleId":"5024","severity":1,"message":"5359","line":20,"column":11,"nodeType":"5026","messageId":"5027","endLine":20,"endColumn":18},{"ruleId":"5024","severity":1,"message":"5115","line":2,"column":18,"nodeType":"5026","messageId":"5027","endLine":2,"endColumn":23},{"ruleId":"5024","severity":1,"message":"5359","line":7,"column":11,"nodeType":"5026","messageId":"5027","endLine":7,"endColumn":18},{"ruleId":"5024","severity":1,"message":"5359","line":7,"column":11,"nodeType":"5026","messageId":"5027","endLine":7,"endColumn":18},"@typescript-eslint/no-unused-vars","'Model' is defined but never used.","Identifier","unusedVar","'Factory' is defined but never used.","'ProtectedRoute' is defined but never used.","'AccountRoutes' is defined but never used.","react-hooks/exhaustive-deps","React Hook React.useEffect has missing dependencies: 'history' and 'sentRequest'. Either include them or remove the dependency array.","ArrayExpression",["5360"],"React Hook React.useEffect has missing dependencies: 'dispatch' and 'sentRequest'. Either include them or remove the dependency array.",["5361"],"'maxDate' is assigned a value but never used.","'setMinDate' is assigned a value but never used.","'updatePixTransfer' is defined but never used.","'pixDate' is assigned a value but never used.","'value' is assigned a value but never used.","React Hook React.useEffect has missing dependencies: 'history' and 'validatedToken'. Either include them or remove the dependency array.",["5362"],"React Hook React.useCallback has missing dependencies: 'dispatch' and 'history'. Either include them or remove the dependency array.",["5363"],"'convertAccountType' is assigned a value but never used.","React Hook React.useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["5364"],"React Hook React.useEffect has missing dependencies: 'history' and 'sentFindPixKeyListRequest'. Either include them or remove the dependency array.",["5365"],"React Hook React.useEffect has missing dependencies: 'dispatch' and 'sentCreateStaticPixQrCode'. Either include them or remove the dependency array.",["5366"],"React Hook React.useEffect has missing dependencies: 'dispatch', 'pixKeyList', and 'sentCreateStaticPixQrCode'. Either include them or remove the dependency array.",["5367"],["5368"],"React Hook React.useEffect has missing dependencies: 'history' and 'sentCreateStaticPixQrCode'. Either include them or remove the dependency array.",["5369"],["5370"],"'sentRequest' is assigned a value but never used.","React Hook React.useEffect has missing dependencies: 'dispatch' and 'pixState.pixKey'. Either include them or remove the dependency array.",["5371"],["5372"],"React Hook React.useEffect has missing dependencies: 'history', 'pixKey', and 'pixState.pixKey?.pixKeyValue'. Either include them or remove the dependency array.",["5373"],["5374"],"React Hook React.useEffect has a missing dependency: 'user'. Either include it or remove the dependency array.",["5375"],"React Hook React.useEffect has missing dependencies: 'dispatch' and 'history'. Either include them or remove the dependency array.",["5376"],["5377"],["5378"],["5379"],["5380"],["5381"],"React Hook React.useEffect has missing dependencies: 'confirmPixKeyHold', 'dispatch', and 'history'. Either include them or remove the dependency array.",["5382"],["5383"],["5384"],"React Hook React.useEffect has missing dependencies: 'account' and 'setTaxId'. Either include them or remove the dependency array.",["5385"],"React Hook React.useEffect has missing dependencies: 'dispatch' and 'mail'. Either include them or remove the dependency array.",["5386"],"React Hook React.useEffect has missing dependencies: 'history' and 'mail'. Either include them or remove the dependency array.",["5387"],["5388"],"React Hook React.useEffect has a missing dependency: 'validateError'. Either include it or remove the dependency array.",["5389"],"React Hook React.useEffect has missing dependencies: 'dispatch' and 'phone'. Either include them or remove the dependency array.",["5390"],"React Hook React.useEffect has missing dependencies: 'history' and 'phone'. Either include them or remove the dependency array.",["5391"],"React Hook React.useEffect has missing dependencies: 'setPhone' and 'user'. Either include them or remove the dependency array.",["5392"],["5393"],"'validateKey' is assigned a value but never used.",["5394"],"'ButtonWithFloatingIcon' is defined but never used.","'TagEditPopUp' is defined but never used.","'Grid' is defined but never used.","'Typography' is defined but never used.","'TagChip' is defined but never used.","'Loader' is defined but never used.","'dispatch' is assigned a value but never used.","'PixKeyType' is defined but never used.","'AuthorizationSheet' is defined but never used.","React Hook React.useMemo has a missing dependency: 'styles.pixIcon'. Either include it or remove the dependency array.",["5395"],"React Hook React.useEffect has a missing dependency: 'generateToken'. Either include it or remove the dependency array.",["5396"],"React Hook React.useEffect has a missing dependency: 'onClose'. Either include it or remove the dependency array. If 'onClose' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["5397"],"'response' is assigned a value but never used.","'RestaurantSharp' is defined but never used.","'CryptoJS' is assigned a value but never used.","'theme' is defined but never used.","'styles' is assigned a value but never used.","React Hook React.useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.",["5398"],"React Hook React.useCallback has missing dependencies: 'dispatch', 'history', and 'pixTransfer'. Either include them or remove the dependency array.",["5399"],["5400"],"React Hook React.useCallback has a missing dependency: 'history'. Either include it or remove the dependency array.",["5401"],"'validatedSharePixQrCodeSheet' is assigned a value but never used.","'validatedPixKeySelectionSheet' is assigned a value but never used.",["5402"],"'onNextPixQRCode' is assigned a value but never used.","'setOnNextPixQRCode' is assigned a value but never used.","'validatedHelpPixQRCodeSheet' is assigned a value but never used.","'balance' is assigned a value but never used.",["5403"],"React Hook React.useEffect has missing dependencies: 'history', 'sentCreateStaticPixQrCode', and 'valueInput'. Either include them or remove the dependency array.",["5404"],"React Hook React.useEffect has a missing dependency: 'valueInput'. Either include it or remove the dependency array.",["5405"],["5406"],"'isRegistered' is assigned a value but never used.","'ErrorMessage' is defined but never used.","'AppBar' is defined but never used.","'ProcessPageLayout' is defined but never used.","'PageContainer' is defined but never used.","React Hook React.useEffect has missing dependencies: 'authState' and 'dispatch'. Either include them or remove the dependency array.",["5407"],["5408"],"no-empty-pattern","Unexpected empty array pattern.","ArrayPattern","unexpected","'useEffect' is defined but never used.","'FormEvent' is defined but never used.","React Hook React.useEffect has a missing dependency: 'balance'. Either include it or remove the dependency array.",["5409"],"'Button' is defined but never used.","'createPass' is assigned a value but never used.","'RecoverType' is defined but never used.","'resetPasswordForm' is assigned a value but never used.","'Container' is defined but never used.","'Box' is defined but never used.","'PageTitle' is defined but never used.","'GreatButton' is defined but never used.","'userName' is assigned a value but never used.","'CurrencyFormatter' is defined but never used.","'DateFormatter' is defined but never used.","'getTopUpPeriodic' is defined but never used.","'updateTopUpData' is defined but never used.","'TopUpRoutes' is defined but never used.","'OperationType' is defined but never used.","'AddBoxOutlined' is defined but never used.","React Hook React.useEffect has a missing dependency: '_getDisplayDate'. Either include it or remove the dependency array.",["5410"],"'onboardingSms' is assigned a value but never used.",["5411"],"'Gender' is defined but never used.","'MaritalStatus' is defined but never used.","'qrCode' is defined but never used.","'validatedShareCodePixQRCodeSheet' is assigned a value but never used.","'validatedShareImagePixQrCodeSheet' is assigned a value but never used.","'StylesProps' is defined but never used.","'Close' is defined but never used.","'KeyboardArrowRight' is defined but never used.","'ProcessPageFooter' is defined but never used.","'cancelLabel' is defined but never used.","'nextLabel' is defined but never used.","'OnboardingRoutes' is defined but never used.","'onCancelButtonClick' is assigned a value but never used.","'Store' is defined but never used.",["5412"],["5413"],"React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["5414"],"React Hook React.useEffect has missing dependencies: 'dispatch' and 'validatedToken'. Either include them or remove the dependency array.",["5415"],["5416"],["5417"],"'displayState' is assigned a value but never used.",["5418"],"React Hook React.useEffect has a missing dependency: 'phoneNumber'. Either include it or remove the dependency array.",["5419"],"'onFavoriteSwitch' is assigned a value but never used.",["5420"],"React Hook React.useEffect has missing dependencies: 'dispatch' and 'user?.phoneNumber'. Either include them or remove the dependency array.",["5421"],"'Icon' is defined but never used.",["5422"],"'handleSwitchInput' is assigned a value but never used.",["5423"],"React Hook React.useEffect has missing dependencies: 'cardState.card' and 'dispatch'. Either include them or remove the dependency array.",["5424"],["5425"],"'loading' is assigned a value but never used.","'errorMessage' is assigned a value but never used.","'setDisplayCards' is assigned a value but never used.",["5426"],"'alpha' is defined but never used.","'white' is defined but never used.",["5427"],"'useSelector' is defined but never used.","'StoreState' is defined but never used.","'maskBarcode' is defined but never used.",["5428"],"'returnLabel' is defined but never used.","'KeyboardArrowLeft' is defined but never used.","'PasswordInput' is defined but never used.","React Hook React.useEffect has a missing dependency: 'card?.pin'. Either include it or remove the dependency array.",["5429"],"React Hook React.useEffect has a missing dependency: 'confirmationPin.length'. Either include it or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setDisableNextButton' needs the current value of 'confirmationPin.length'.",["5430"],["5431"],["5432"],"React Hook React.useEffect has a missing dependency: 'totalValue'. Either include it or remove the dependency array.",["5433"],"'Update' is defined but never used.","'KeyboardDatePicker' is defined but never used.",["5434"],["5435"],["5436"],["5437"],"React Hook React.useEffect has a missing dependency: 'click'. Either include it or remove the dependency array.",["5438"],"'uiFunctions' is assigned a value but never used.","React Hook React.useEffect has missing dependencies: 'onValidate' and 'validation'. Either include them or remove the dependency array. If 'validation' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["5439"],"'Card' is defined but never used.","'ReadQrCodeButton' is defined but never used.","'useMask' is defined but never used.","'User' is defined but never used.","React Hook React.useEffect has a missing dependency: 'cardState.card'. Either include it or remove the dependency array.",["5440"],"React Hook React.useEffect has a missing dependency: 'sentRequest'. Either include it or remove the dependency array.",["5441"],["5442"],["5443"],["5444"],"'useDispatch' is defined but never used.","'Alert' is defined but never used.","'useState' is defined but never used.","'useHistory' is defined but never used.","'DigitalWithdrawalRoutes' is defined but never used.","'ShortDateFormatter' is defined but never used.","'toggleDrawer' is assigned a value but never used.","'openFinishedPopUp' is assigned a value but never used.","'onPasswordConfirmButtonClick' is assigned a value but never used.",["5445"],"'saveLabel' is defined but never used.","'shareLabel' is defined but never used.","'originalPaymentValue' is assigned a value but never used.","'onSettings' is assigned a value but never used.",["5446"],["5447"],["5448"],"'PopUpErrorMessage' is defined but never used.","'TextField' is defined but never used.",["5449"],"'onPushTags' is assigned a value but never used.","'setStatus' is assigned a value but never used.","'valueIdCard' is assigned a value but never used.","'setValueIdCard' is assigned a value but never used.","'MenuItem' is defined but never used.","React Hook React.useEffect has missing dependencies: 'balance' and 'taxPaymentState'. Either include them or remove the dependency array.",["5450"],"'SuccessTaxPaymentState' is defined but never used.",["5451"],"'taxPaymentState' is assigned a value but never used.",["5452"],"React Hook React.useEffect has missing dependencies: 'dispatch', 'product', and 'topUpPhoneNumberList?.originNSU'. Either include them or remove the dependency array.",["5453"],["5454"],"'history' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'setPhoneInput' and 'valueNumberPhone'. Either include them or remove the dependency array.",["5455"],"React Hook useEffect has a missing dependency: 'setValuePhone'. Either include it or remove the dependency array. If 'setValuePhone' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["5456"],"React Hook useMemo has a missing dependency: 'styles.icon'. Either include it or remove the dependency array.",["5457"],"'onboardingForm' is assigned a value but never used.",["5458"],"React Hook React.useEffect has missing dependencies: 'history' and 'tokenInput.length'. Either include them or remove the dependency array.",["5459"],"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","'setState' is assigned a value but never used.","React Hook React.useEffect has a missing dependency: 'getLicenseKey'. Either include it or remove the dependency array.",["5460"],"'ReactElement' is defined but never used.","React Hook React.useEffect has a missing dependency: 'onEnableButton'. Either include it or remove the dependency array.",["5461"],["5462"],["5463"],["5464"],"'numericOnly' is defined but never used.",["5465"],"'noStreetNumber' is assigned a value but never used.","'setNoStreetNumber' is assigned a value but never used.",["5466"],["5467"],["5468"],"React Hook React.useEffect has a missing dependency: 'transferDate'. Either include it or remove the dependency array.",["5469"],["5470"],"'accountIn' is assigned a value but never used.",["5471"],"'InputLabel' is defined but never used.","'Input' is defined but never used.","'accounts' is assigned a value but never used.","React Hook React.useEffect has missing dependencies: 'dispatch', 'externalIdentifier', and 'operationType'. Either include them or remove the dependency array.",["5472"],"React Hook React.useEffect has missing dependencies: 'dispatch' and 'state'. Either include them or remove the dependency array.",["5473"],["5474"],"React Hook React.useEffect has missing dependencies: 'dateFilter' and 'loading'. Either include them or remove the dependency array. You can also do a functional update 'setDateFilter(d => ...)' if you only need 'dateFilter' in the 'setDateFilter' call.",["5475"],"React Hook useEffect has a missing dependency: 'validateError'. Either include it or remove the dependency array.",["5476"],["5477"],["5478"],["5479"],["5480"],"'GitHub' is defined but never used.","'WhatsApp' is defined but never used.","no-duplicate-case","Duplicate case label.","SwitchCase",["5481"],"React Hook React.useEffect has missing dependencies: 'dispatch', 'history', 'sentValidation', 'taxId', and 'validateCard?.isValid'. Either include them or remove the dependency array.",["5482"],"React Hook React.useEffect has missing dependencies: 'dispatch' and 'sentTaxId'. Either include them or remove the dependency array.",["5483"],"'colors' is defined but never used.","'setCookie' is assigned a value but never used.","'useStyles' is defined but never used.","'welcomeImg' is defined but never used.","'screenHeight' is assigned a value but never used.","React Hook React.useEffect has missing dependencies: 'dispatch', 'previous', and 'transactionType'. Either include them or remove the dependency array.",["5484"],"'ConfigContext' is defined but never used.","'PixRoutes' is defined but never used.","'check' is defined but never used.","'company' is assigned a value but never used.",{"desc":"5485","fix":"5486"},{"desc":"5487","fix":"5488"},{"desc":"5489","fix":"5490"},{"desc":"5491","fix":"5492"},{"desc":"5493","fix":"5494"},{"desc":"5495","fix":"5496"},{"desc":"5497","fix":"5498"},{"desc":"5499","fix":"5500"},{"desc":"5501","fix":"5502"},{"desc":"5503","fix":"5504"},{"desc":"5493","fix":"5505"},{"desc":"5506","fix":"5507"},{"desc":"5508","fix":"5509"},{"desc":"5510","fix":"5511"},{"desc":"5510","fix":"5512"},{"desc":"5513","fix":"5514"},{"desc":"5515","fix":"5516"},{"desc":"5491","fix":"5517"},{"desc":"5491","fix":"5518"},{"desc":"5491","fix":"5519"},{"desc":"5491","fix":"5520"},{"desc":"5491","fix":"5521"},{"desc":"5522","fix":"5523"},{"desc":"5524","fix":"5525"},{"desc":"5526","fix":"5527"},{"desc":"5528","fix":"5529"},{"desc":"5530","fix":"5531"},{"desc":"5532","fix":"5533"},{"desc":"5513","fix":"5534"},{"desc":"5535","fix":"5536"},{"desc":"5537","fix":"5538"},{"desc":"5539","fix":"5540"},{"desc":"5541","fix":"5542"},{"desc":"5526","fix":"5543"},{"desc":"5489","fix":"5544"},{"desc":"5545","fix":"5546"},{"desc":"5547","fix":"5548"},{"desc":"5549","fix":"5550"},{"desc":"5551","fix":"5552"},{"desc":"5553","fix":"5554"},{"desc":"5489","fix":"5555"},{"desc":"5556","fix":"5557"},{"desc":"5556","fix":"5558"},{"desc":"5559","fix":"5560"},{"desc":"5561","fix":"5562"},{"desc":"5563","fix":"5564"},{"desc":"5556","fix":"5565"},{"desc":"5566","fix":"5567"},{"desc":"5568","fix":"5569"},{"desc":"5570","fix":"5571"},{"desc":"5572","fix":"5573"},{"desc":"5535","fix":"5574"},{"desc":"5575","fix":"5576"},{"desc":"5493","fix":"5577"},{"desc":"5493","fix":"5578"},{"desc":"5579","fix":"5580"},{"desc":"5493","fix":"5581"},{"desc":"5579","fix":"5582"},{"desc":"5493","fix":"5583"},{"desc":"5584","fix":"5585"},{"desc":"5493","fix":"5586"},{"desc":"5587","fix":"5588"},{"desc":"5589","fix":"5590"},{"desc":"5493","fix":"5591"},{"desc":"5592","fix":"5593"},{"desc":"5594","fix":"5595"},{"desc":"5596","fix":"5597"},{"desc":"5598","fix":"5599"},{"desc":"5600","fix":"5601"},{"desc":"5602","fix":"5603"},{"desc":"5604","fix":"5605"},{"desc":"5594","fix":"5606"},{"desc":"5607","fix":"5608"},{"desc":"5609","fix":"5610"},{"desc":"5611","fix":"5612"},{"desc":"5609","fix":"5613"},{"desc":"5614","fix":"5615"},{"desc":"5616","fix":"5617"},{"desc":"5618","fix":"5619"},{"desc":"5620","fix":"5621"},{"desc":"5592","fix":"5622"},{"desc":"5623","fix":"5624"},{"desc":"5625","fix":"5626"},{"desc":"5602","fix":"5627"},{"desc":"5604","fix":"5628"},{"desc":"5493","fix":"5629"},{"desc":"5592","fix":"5630"},{"desc":"5493","fix":"5631"},{"desc":"5632","fix":"5633"},{"desc":"5493","fix":"5634"},{"desc":"5635","fix":"5636"},{"desc":"5637","fix":"5638"},{"desc":"5639","fix":"5640"},{"desc":"5641","fix":"5642"},{"desc":"5643","fix":"5644"},{"desc":"5645","fix":"5646"},{"desc":"5647","fix":"5648"},{"desc":"5649","fix":"5650"},{"desc":"5493","fix":"5651"},{"desc":"5652","fix":"5653"},{"desc":"5654","fix":"5655"},{"desc":"5656","fix":"5657"},{"desc":"5572","fix":"5658"},{"desc":"5659","fix":"5660"},{"desc":"5493","fix":"5661"},{"desc":"5493","fix":"5662"},{"desc":"5493","fix":"5663"},{"desc":"5664","fix":"5665"},{"desc":"5493","fix":"5666"},{"desc":"5667","fix":"5668"},{"desc":"5669","fix":"5670"},{"desc":"5493","fix":"5671"},{"desc":"5672","fix":"5673"},{"desc":"5674","fix":"5675"},{"desc":"5676","fix":"5677"},{"desc":"5678","fix":"5679"},{"desc":"5680","fix":"5681"},{"desc":"5682","fix":"5683"},{"desc":"5572","fix":"5684"},{"desc":"5547","fix":"5685"},{"desc":"5549","fix":"5686"},{"desc":"5687","fix":"5688"},{"desc":"5689","fix":"5690"},{"desc":"5691","fix":"5692"},{"desc":"5693","fix":"5694"},"Update the dependencies array to be: [history, pixTransfer, sentRequest]",{"range":"5695","text":"5696"},"Update the dependencies array to be: [dispatch, pixQrCodeInfo, sentRequest]",{"range":"5697","text":"5698"},"Update the dependencies array to be: [createPixTransfer, history, validatedToken]",{"range":"5699","text":"5700"},"Update the dependencies array to be: [dispatch, history]",{"range":"5701","text":"5702"},"Update the dependencies array to be: [dispatch]",{"range":"5703","text":"5704"},"Update the dependencies array to be: [history, pixKeyList, sentFindPixKeyListRequest]",{"range":"5705","text":"5706"},"Update the dependencies array to be: [dispatch, pixKeyList, sentCreateStaticPixQrCode]",{"range":"5707","text":"5708"},"Update the dependencies array to be: [dispatch, pixKey, pixKeyList, sentCreateStaticPixQrCode]",{"range":"5709","text":"5710"},"Update the dependencies array to be: [createStaticPixQrCode, dispatch]",{"range":"5711","text":"5712"},"Update the dependencies array to be: [history, sentCreateStaticPixQrCode, staticPixQrCode]",{"range":"5713","text":"5714"},{"range":"5715","text":"5704"},"Update the dependencies array to be: [dispatch, pixKey, pixState.pixKey]",{"range":"5716","text":"5717"},"Update the dependencies array to be: [dispatch, pixState.pixKey]",{"range":"5718","text":"5719"},"Update the dependencies array to be: [history, pixKey, pixState.pixKey?.pixKeyValue, resendPixKeyToken]",{"range":"5720","text":"5721"},{"range":"5722","text":"5721"},"Update the dependencies array to be: [user]",{"range":"5723","text":"5724"},"Update the dependencies array to be: [cancelPixKey, dispatch, history]",{"range":"5725","text":"5726"},{"range":"5727","text":"5702"},{"range":"5728","text":"5702"},{"range":"5729","text":"5702"},{"range":"5730","text":"5702"},{"range":"5731","text":"5702"},"Update the dependencies array to be: [confirmPixKeyHold, dispatch, history, pixState.confirmPixKeyHold]",{"range":"5732","text":"5733"},"Update the dependencies array to be: [confirmPixKeyHold, dispatch, history]",{"range":"5734","text":"5735"},"Update the dependencies array to be: [createPixKey, dispatch, history]",{"range":"5736","text":"5737"},"Update the dependencies array to be: [account, setTaxId]",{"range":"5738","text":"5739"},"Update the dependencies array to be: [createPixKey, dispatch, mail]",{"range":"5740","text":"5741"},"Update the dependencies array to be: [history, mail, resendPixKeyToken]",{"range":"5742","text":"5743"},{"range":"5744","text":"5724"},"Update the dependencies array to be: [mail, validateError]",{"range":"5745","text":"5746"},"Update the dependencies array to be: [createPixKey, dispatch, phone]",{"range":"5747","text":"5748"},"Update the dependencies array to be: [history, phone, resendPixKeyToken]",{"range":"5749","text":"5750"},"Update the dependencies array to be: [setPhone, user]",{"range":"5751","text":"5752"},{"range":"5753","text":"5737"},{"range":"5754","text":"5700"},"Update the dependencies array to be: [styles.pixIcon]",{"range":"5755","text":"5756"},"Update the dependencies array to be: [generateToken, open]",{"range":"5757","text":"5758"},"Update the dependencies array to be: [onClose, validatedToken]",{"range":"5759","text":"5760"},"Update the dependencies array to be: [pixTransfer?.toTaxId, bankList, history]",{"range":"5761","text":"5762"},"Update the dependencies array to be: [dispatch, history, pixTransfer, toBankBranch]",{"range":"5763","text":"5764"},{"range":"5765","text":"5700"},"Update the dependencies array to be: [history]",{"range":"5766","text":"5767"},{"range":"5768","text":"5767"},"Update the dependencies array to be: [createStaticPixQrCode, dispatch, sentCreateStaticPixQrCode]",{"range":"5769","text":"5770"},"Update the dependencies array to be: [history, sentCreateStaticPixQrCode, staticPixQrCode, valueInput]",{"range":"5771","text":"5772"},"Update the dependencies array to be: [valueInput]",{"range":"5773","text":"5774"},{"range":"5775","text":"5767"},"Update the dependencies array to be: [authState, dispatch]",{"range":"5776","text":"5777"},"Update the dependencies array to be: [authState, history]",{"range":"5778","text":"5779"},"Update the dependencies array to be: [principalValue, fineValue, interestValue, valueInput, balance]",{"range":"5780","text":"5781"},"Update the dependencies array to be: [_getDisplayDate, birthDate]",{"range":"5782","text":"5783"},{"range":"5784","text":"5746"},"Update the dependencies array to be: [balance, valueInput]",{"range":"5785","text":"5786"},{"range":"5787","text":"5704"},{"range":"5788","text":"5704"},"Update the dependencies array to be: [dispatch, futureTransaction, validatedToken]",{"range":"5789","text":"5790"},{"range":"5791","text":"5704"},{"range":"5792","text":"5790"},{"range":"5793","text":"5704"},"Update the dependencies array to be: [submitted, dispatch, history, topUp, phoneNumber]",{"range":"5794","text":"5795"},{"range":"5796","text":"5704"},"Update the dependencies array to be: [submitted, history, topUpState, dispatch, user?.phoneNumber]",{"range":"5797","text":"5798"},"Update the dependencies array to be: [_getDisplayDate, topUpDate]",{"range":"5799","text":"5800"},{"range":"5801","text":"5704"},"Update the dependencies array to be: [cardState.card, dispatch]",{"range":"5802","text":"5803"},"Update the dependencies array to be: [cardState, history, sentRequest]",{"range":"5804","text":"5805"},"Update the dependencies array to be: [dispatch, history, taxPayment]",{"range":"5806","text":"5807"},"Update the dependencies array to be: [balance, principalValue]",{"range":"5808","text":"5809"},"Update the dependencies array to be: [_getDisplayDate, paymentDate]",{"range":"5810","text":"5811"},"Update the dependencies array to be: [card?.pin, confirmationPin]",{"range":"5812","text":"5813"},"Update the dependencies array to be: [confirmationPin.length, passwordValidate]",{"range":"5814","text":"5815"},{"range":"5816","text":"5805"},"Update the dependencies array to be: [dispatch, garePayment, history]",{"range":"5817","text":"5818"},"Update the dependencies array to be: [dispatch, totalValue]",{"range":"5819","text":"5820"},"Update the dependencies array to be: [dispatch, history, taxPaymentDARJData]",{"range":"5821","text":"5822"},{"range":"5823","text":"5820"},"Update the dependencies array to be: [codeRevenue, monetaryValue, contributortaxId, stateRegistration, balance]",{"range":"5824","text":"5825"},"Update the dependencies array to be: [balance, monetaryValue]",{"range":"5826","text":"5827"},"Update the dependencies array to be: [cardState, click, history]",{"range":"5828","text":"5829"},"Update the dependencies array to be: [onValidate, validation, value]",{"range":"5830","text":"5831"},{"range":"5832","text":"5803"},"Update the dependencies array to be: [cardState, sentRequest]",{"range":"5833","text":"5834"},"Update the dependencies array to be: [cardState, history]",{"range":"5835","text":"5836"},{"range":"5837","text":"5813"},{"range":"5838","text":"5815"},{"range":"5839","text":"5704"},{"range":"5840","text":"5803"},{"range":"5841","text":"5704"},"Update the dependencies array to be: [dispatch, errorMessage]",{"range":"5842","text":"5843"},{"range":"5844","text":"5704"},"Update the dependencies array to be: [principalValue, fineValue, interestValue, rateValue, valueInput, taxPaymentState, balance]",{"range":"5845","text":"5846"},"Update the dependencies array to be: [_getDisplayDate, paymentDarjDate]",{"range":"5847","text":"5848"},"Update the dependencies array to be: [_getDisplayDate, paymentGareDate]",{"range":"5849","text":"5850"},"Update the dependencies array to be: [dispatch, product, topUpPhoneNumberList?.originNSU]",{"range":"5851","text":"5852"},"Update the dependencies array to be: [balance, product]",{"range":"5853","text":"5854"},"Update the dependencies array to be: [setPhoneInput, valueNumberPhone]",{"range":"5855","text":"5856"},"Update the dependencies array to be: [phoneInput, setValuePhone]",{"range":"5857","text":"5858"},"Update the dependencies array to be: [status, styles.icon]",{"range":"5859","text":"5860"},{"range":"5861","text":"5704"},"Update the dependencies array to be: [history, state, tokenInput.length]",{"range":"5862","text":"5863"},"Update the dependencies array to be: [getLicenseKey]",{"range":"5864","text":"5865"},"Update the dependencies array to be: [onEnableButton, password]",{"range":"5866","text":"5867"},{"range":"5868","text":"5783"},"Update the dependencies array to be: [balance, qrCodeTransferState]",{"range":"5869","text":"5870"},{"range":"5871","text":"5704"},{"range":"5872","text":"5704"},{"range":"5873","text":"5704"},"Update the dependencies array to be: [email, validateError]",{"range":"5874","text":"5875"},{"range":"5876","text":"5704"},"Update the dependencies array to be: [expectedTransferDate, transferDate]",{"range":"5877","text":"5878"},"Update the dependencies array to be: [_getDisplayDate, transferDate]",{"range":"5879","text":"5880"},{"range":"5881","text":"5704"},"Update the dependencies array to be: [dispatch, externalIdentifier, operationType]",{"range":"5882","text":"5883"},"Update the dependencies array to be: [dispatch, state]",{"range":"5884","text":"5885"},"Update the dependencies array to be: [dateFilter, dispatch]",{"range":"5886","text":"5887"},"Update the dependencies array to be: [bankStatement, dateFilter, loading]",{"range":"5888","text":"5889"},"Update the dependencies array to be: [emailValue, validateError]",{"range":"5890","text":"5891"},"Update the dependencies array to be: [history, sentRequest]",{"range":"5892","text":"5893"},{"range":"5894","text":"5783"},{"range":"5895","text":"5758"},{"range":"5896","text":"5760"},"Update the dependencies array to be: [dispatch, state.onboardingForm]",{"range":"5897","text":"5898"},"Update the dependencies array to be: [cardState, dispatch, history, sentValidation, taxId, validateCard?.isValid]",{"range":"5899","text":"5900"},"Update the dependencies array to be: [cardState, dispatch, sentTaxId]",{"range":"5901","text":"5902"},"Update the dependencies array to be: [dispatch, previous, selectedTransactionType, transactionType]",{"range":"5903","text":"5904"},[1001,1014],"[history, pixTransfer, sentRequest]",[1801,1816],"[dispatch, pixQrCodeInfo, sentRequest]",[1205,1224],"[createPixTransfer, history, validatedToken]",[1528,1538],"[dispatch, history]",[1332,1334],"[dispatch]",[1460,1472],"[history, pixKeyList, sentFindPixKeyListRequest]",[1684,1696],"[dispatch, pixKeyList, sentCreateStaticPixQrCode]",[2064,2072],"[dispatch, pixKey, pixKeyList, sentCreateStaticPixQrCode]",[2200,2223],"[createStaticPixQrCode, dispatch]",[2368,2385],"[history, sentCreateStaticPixQrCode, staticPixQrCode]",[2480,2482],[1876,1884],"[dispatch, pixKey, pixState.pixKey]",[2113,2130],"[dispatch, pixState.pixKey]",[2352,2371],"[history, pixKey, pixState.pixKey?.pixKeyValue, resendPixKeyToken]",[2676,2695],[2872,2874],"[user]",[3069,3083],"[cancelPixKey, dispatch, history]",[3485,3487],[3629,3631],[3771,3773],[3925,3927],[4264,4266],[1143,1171],"[confirmPixKeyHold, dispatch, history, pixState.confirmPixKeyHold]",[1144,1163],"[confirmPixKeyHold, dispatch, history]",[1133,1147],"[createPixKey, dispatch, history]",[1255,1257],"[account, setTaxId]",[1300,1314],"[createPixKey, dispatch, mail]",[1477,1496],"[history, mail, resendPixKeyToken]",[1596,1598],[1654,1660],"[mail, validateError]",[1306,1320],"[createPixKey, dispatch, phone]",[1490,1509],"[history, phone, resendPixKeyToken]",[1623,1625],"[setPhone, user]",[1057,1071],[930,949],[399,401],"[styles.pixIcon]",[1833,1839],"[generateToken, open]",[2161,2177],"[onClose, validatedToken]",[1071,1103],"[pixTransfer?.toTaxId, bankList, history]",[1226,1240],"[dispatch, history, pixTransfer, toBankBranch]",[936,955],[646,648],"[history]",[1109,1111],[4168,4191],"[createStaticPixQrCode, dispatch, sentCreateStaticPixQrCode]",[4405,4422],"[history, sentCreateStaticPixQrCode, staticPixQrCode, valueInput]",[4582,4584],"[valueInput]",[4689,4691],[1954,1956],"[authState, dispatch]",[2107,2118],"[authState, history]",[3227,3281],"[principalValue, fineValue, interestValue, valueInput, balance]",[2247,2258],"[_getDisplayDate, birthDate]",[1417,1423],[2105,2117],"[balance, valueInput]",[2109,2111],[2735,2737],[4934,4953],"[dispatch, futureTransaction, validatedToken]",[2709,2711],[4773,4792],[2175,2177],[2424,2461],"[submitted, dispatch, history, topUp, phoneNumber]",[2015,2017],[2286,2318],"[submitted, history, topUpState, dispatch, user?.phoneNumber]",[2275,2286],"[_getDisplayDate, topUpDate]",[1661,1663],[1842,1844],"[cardState.card, dispatch]",[1994,2005],"[cardState, history, sentRequest]",[2395,2407],"[dispatch, history, taxPayment]",[1994,2010],"[balance, principalValue]",[1692,1705],"[_getDisplayDate, paymentDate]",[2349,2366],"[card?.pin, confirmationPin]",[2457,2475],"[confirmationPin.length, passwordValidate]",[2693,2704],[2708,2721],"[dispatch, garePayment, history]",[2848,2858],"[dispatch, totalValue]",[2636,2656],"[dispatch, history, taxPaymentDARJData]",[2783,2793],[3172,3237],"[codeRevenue, monetaryValue, contributortaxId, stateRegistration, balance]",[3600,3615],"[balance, monetaryValue]",[2642,2662],"[cardState, click, history]",[659,666],"[onValidate, validation, value]",[2277,2287],[2724,2735],"[cardState, sentRequest]",[2076,2087],"[cardState, history]",[2198,2215],[2306,2324],[989,991],[2572,2574],[2639,2641],[2268,2282],"[dispatch, errorMessage]",[1359,1361],[3348,3413],"[principalValue, fineValue, interestValue, rateValue, valueInput, taxPaymentState, balance]",[2112,2129],"[_getDisplayDate, paymentDarjDate]",[2012,2029],"[_getDisplayDate, paymentGareDate]",[1999,2001],"[dispatch, product, topUpPhoneNumberList?.originNSU]",[2207,2216],"[balance, product]",[857,859],"[setPhoneInput, valueNumberPhone]",[919,931],"[phoneInput, setValuePhone]",[2247,2255],"[status, styles.icon]",[1787,1789],[1959,1966],"[history, state, tokenInput.length]",[1620,1622],"[getLicenseKey]",[2477,2487],"[onEnableButton, password]",[2595,2606],[2829,2850],"[balance, qrCodeTransferState]",[1919,1921],[1467,1469],[1898,1900],[3090,3097],"[email, validateError]",[1739,1741],[2761,2783],"[expectedTransferDate, transferDate]",[2857,2871],"[_getDisplayDate, transferDate]",[2557,2559],[1617,1619],"[dispatch, externalIdentifier, operationType]",[1869,1871],"[dispatch, state]",[1890,1902],"[dateFilter, dispatch]",[2391,2406],"[bankStatement, dateFilter, loading]",[1679,1691],"[emailValue, validateError]",[1630,1643],"[history, sentRequest]",[2067,2078],[1791,1797],[2119,2135],[959,981],"[dispatch, state.onboardingForm]",[2544,2555],"[cardState, dispatch, history, sentValidation, taxId, validateCard?.isValid]",[2730,2741],"[cardState, dispatch, sentTaxId]",[1344,1369],"[dispatch, previous, selectedTransactionType, transactionType]"]